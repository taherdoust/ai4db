{"id": "cim_stage1_000000", "database_id": 1, "database_name": "cim_wizard", "question": "Find all areas that contain a specific point", "question_tone": "CONDITIONAL", "sql_postgis": "SELECT a.{id_col}, a.{attr_cols}\nFROM {areas_table} a\nJOIN {points_table} p\n  ON ST_Intersects(p.{geom}, a.{geom})\nWHERE p.{id_col} = {point_id};", "sql_spatialite": "SELECT a.{id_col}, a.{attr_cols}\nFROM {areas_table} a\nJOIN {points_table} p\n  ON Intersects(p.{geom}, a.{geom})\nWHERE p.{id_col} = {point_id};", "sql_type": "SPATIAL_JOIN", "sql_taxonomy": {"operation_type": "SPATIAL_JOIN", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "spatial"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "SINGLE_TABLE", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": [], "tables": [], "columns": [], "geometry_columns": [], "primary_schema": null, "table_count": 0, "schema_count": 0}, "spatial_functions": ["ST_INTERSECTS"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": [], "tables": [], "columns": [], "functions": ["ST_Intersects"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find all areas that contain a specific point", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "A1_point_in_polygon", "complexity_level": "A", "tags": ["freq_critical", "basic", "spatial_join", "point_in_polygon"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "baseline", "building_type": "residential", "hvac_type": "district_heating", "region": "Lombardia", "province": "Roma", "voltage_kv": 220, "srid": 3857, "buffer_distance": 1000, "min_area": 299, "max_area": 1925, "min_height": 5, "max_height": 75, "min_people": 3, "max_people": 13, "year": 1965, "census_id": 7508968, "lon": 8.557766, "lat": 39.024264, "limit": 100, "cluster_count": 3, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 10, "min_points": 8, "min_areas": 10, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.643056"}
{"id": "cim_stage1_000003", "database_id": 1, "database_name": "cim_wizard", "question": "Create a buffer around features", "question_tone": "INTERROGATIVE", "sql_postgis": "SELECT {id_col}, ST_Buffer({geom}, {buffer_distance}) AS buffered_geom\nFROM {features};", "sql_spatialite": "SELECT {id_col}, Buffer({geom}, {buffer_distance}) AS buffered_geom\nFROM {features};", "sql_type": "SPATIAL_PROCESSING", "sql_taxonomy": {"operation_type": "SPATIAL_PROCESSING", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "SINGLE_TABLE", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": [], "tables": [], "columns": [], "geometry_columns": [], "primary_schema": null, "table_count": 0, "schema_count": 0}, "spatial_functions": ["ST_BUFFER"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": ["ST_BUFFER"], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": [], "tables": [], "columns": [], "functions": ["ST_Buffer"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Create a buffer around features", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "A4_basic_buffer", "complexity_level": "A", "tags": ["buffer", "geometry_processing", "freq_very_high"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "grid_modernization", "building_type": "commercial", "hvac_type": "electric", "region": "Piemonte", "province": "Torino", "voltage_kv": 0.4, "srid": 32632, "buffer_distance": 1000, "min_area": 426, "max_area": 3371, "min_height": 3, "max_height": 64, "min_people": 5, "max_people": 17, "year": 1956, "census_id": 5530421, "lon": 15.283187, "lat": 43.221345, "limit": 10, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.643235"}
{"id": "cim_stage1_000006", "database_id": 1, "database_name": "cim_wizard", "question": "Count points within each polygon area", "question_tone": "SPATIAL_SPECIFIC", "sql_postgis": "SELECT a.{id_col}, COUNT(p.*) AS n_points\nFROM {areas} a\nLEFT JOIN {points} p\n  ON ST_Intersects(p.{geom}, a.{geom})\nGROUP BY a.{id_col};", "sql_spatialite": "SELECT a.{id_col}, COUNT(p.*) AS n_points\nFROM {areas} a\nLEFT JOIN {points} p\n  ON Intersects(p.{geom}, a.{geom})\nGROUP BY a.{id_col};", "sql_type": "SPATIAL_JOIN", "sql_taxonomy": {"operation_type": "SPATIAL_JOIN", "has_cte": false, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "spatial"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "SINGLE_TABLE", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": [], "tables": [], "columns": [], "geometry_columns": [], "primary_schema": null, "table_count": 0, "schema_count": 0}, "spatial_functions": ["ST_INTERSECTS"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": [], "tables": [], "columns": [], "functions": ["ST_Intersects"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Count points within each polygon area", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "B1_spatial_join_count", "complexity_level": "B", "tags": ["freq_critical", "spatial_join", "aggregation", "count"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "efficiency_max", "building_type": "public", "hvac_type": "heat_pump", "region": "Lazio", "province": "Firenze", "voltage_kv": 400, "srid": 32633, "buffer_distance": 2000, "min_area": 139, "max_area": 4325, "min_height": 8, "max_height": 98, "min_people": 3, "max_people": 8, "year": 1997, "census_id": 5744488, "lon": 13.075231, "lat": 41.037913, "limit": 10, "cluster_count": 5, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.643384"}
{"id": "cim_stage1_000007", "database_id": 1, "database_name": "cim_wizard", "question": "Reproject lines, buffer them, and find intersecting sites", "question_tone": "SPATIAL_SPECIFIC", "sql_postgis": "WITH proj AS (\n  SELECT id, ST_Transform({geom}, {target_srid}) AS g FROM {lines}\n)\nSELECT s.*\nFROM {sites} s\nJOIN proj l\n  ON ST_DWithin(s.{geom}, ST_Buffer(l.g, {buffer_units}), 0);", "sql_spatialite": "WITH proj AS (\n  SELECT id, Transform({geom}, {target_srid}) AS g FROM {lines}\n)\nSELECT s.*\nFROM {sites} s\nJOIN proj l\n  ON Distance(s.{geom}, Buffer(l.g, {buffer_units}), 0);", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "SINGLE_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["l"], "tables": ["l.g", "proj"], "columns": ["g"], "geometry_columns": [], "primary_schema": "l", "table_count": 2, "schema_count": 1}, "spatial_functions": ["ST_BUFFER", "ST_DWITHIN", "ST_TRANSFORM"], "spatial_function_count": 3, "spatial_function_categories": {"predicates": ["ST_DWITHIN"], "measurements": [], "processing": ["ST_BUFFER"], "clustering": [], "raster": [], "transforms": ["ST_TRANSFORM"], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": ["l"], "tables": ["l.g", "proj"], "columns": ["g"], "functions": ["ST_DWithin", "ST_Buffer", "ST_Transform"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Reproject lines, buffer them, and find intersecting sites", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "B2_reproject_buffer_join", "complexity_level": "B", "tags": ["buffer", "freq_high", "freq_very_high", "reprojection", "spatial_join"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "baseline", "building_type": "public", "hvac_type": "district_heating", "region": "Lazio", "province": "Torino", "voltage_kv": 20, "srid": 4326, "buffer_distance": 500, "min_area": 148, "max_area": 4959, "min_height": 6, "max_height": 22, "min_people": 5, "max_people": 6, "year": 2016, "census_id": 6556758, "lon": 12.249768, "lat": 36.542389, "limit": 100, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 5, "min_points": 5, "min_areas": 10, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.643442"}
{"id": "cim_stage1_000009", "database_id": 1, "database_name": "cim_wizard", "question": "Clean invalid geometries and calculate intersection areas", "question_tone": "ANALYTICAL", "sql_postgis": "WITH clean AS (\n  SELECT id, ST_MakeValid({geom}) AS g FROM {polygons}\n)\nSELECT ST_Area(ST_Intersection(c.g, o.{geom})) AS inter_area\nFROM clean c\nJOIN {other} o\n  ON ST_Intersects(c.g, o.{geom});", "sql_spatialite": "WITH clean AS (\n  SELECT id, ST_MakeValid({geom}) AS g FROM {polygons}\n)\nSELECT Area(Intersection(c.g, o.{geom})) AS inter_area\nFROM clean c\nJOIN {other} o\n  ON Intersects(c.g, o.{geom});", "sql_type": "SPATIAL_JOIN", "sql_taxonomy": {"operation_type": "SPATIAL_JOIN", "has_cte": true, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "spatial"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "SINGLE_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["c"], "tables": ["c.g", "clean"], "columns": ["g"], "geometry_columns": [], "primary_schema": "c", "table_count": 2, "schema_count": 1}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_MAKEVALID", "ST_INTERSECTION"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": ["c"], "tables": ["c.g", "clean"], "columns": ["g"], "functions": ["ST_Area", "ST_MakeValid", "ST_Intersects", "ST_Intersection"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Clean invalid geometries and calculate intersection areas", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "B4_makevalid_overlay", "complexity_level": "B", "tags": ["freq_critical", "freq_medium", "freq_very_high", "intersection", "overlay", "validation"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "efficiency_max", "building_type": "commercial", "hvac_type": "hybrid", "region": "Emilia-Romagna", "province": "Roma", "voltage_kv": 400, "srid": 3857, "buffer_distance": 2000, "min_area": 52, "max_area": 2117, "min_height": 5, "max_height": 63, "min_people": 5, "max_people": 17, "year": 2023, "census_id": 5027252, "lon": 9.476534, "lat": 40.89535, "limit": 10, "cluster_count": 5, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 5, "min_points": 3, "min_areas": 3, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.643541"}
{"id": "cim_stage1_000012", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze electrical grid infrastructure proximity to buildings with voltage level considerations", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_grid_proximity AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area,\n         gb.bus_id, gb.voltage_kv, gb.name as substation_name,\n         ST_Distance(b.building_geometry, gb.geometry) AS distance_to_grid,\n         RANK() OVER (PARTITION BY b.building_id ORDER BY ST_Distance(b.building_geometry, gb.geometry)) AS proximity_rank\n  FROM {buildings} b\n  JOIN {building_properties} bp ON b.building_id = bp.building_id  \n  JOIN {grid_bus} gb ON gb.project_id = bp.project_id AND gb.scenario_id = bp.scenario_id\n  WHERE bp.project_id = '{project_id}' AND bp.scenario_id = '{scenario_id}'\n    AND gb.in_service = true\n    AND ST_DWithin(b.building_geometry, gb.geometry, {max_distance})\n),\nvoltage_requirements AS (\n  SELECT building_id, type, height, area,\n         CASE \n           WHEN type IN ('industrial', 'commercial') AND area > 1000 THEN 'high_voltage'\n           WHEN type = 'residential' AND height > 20 THEN 'medium_voltage'\n           ELSE 'low_voltage'\n         END AS required_voltage_level\n  FROM building_grid_proximity\n  WHERE proximity_rank = 1\n)\nSELECT bgp.building_id, bgp.type, bgp.distance_to_grid,\n       bgp.voltage_kv, bgp.substation_name,\n       vr.required_voltage_level,\n       CASE \n         WHEN vr.required_voltage_level = 'high_voltage' AND bgp.voltage_kv >= 10 THEN 'adequate'\n         WHEN vr.required_voltage_level = 'medium_voltage' AND bgp.voltage_kv >= 1 THEN 'adequate'\n         WHEN vr.required_voltage_level = 'low_voltage' AND bgp.voltage_kv >= 0.4 THEN 'adequate'\n         ELSE 'insufficient'\n       END AS grid_adequacy\nFROM building_grid_proximity bgp\nJOIN voltage_requirements vr ON bgp.building_id = vr.building_id\nWHERE bgp.proximity_rank = 1\nORDER BY bgp.distance_to_grid;", "sql_spatialite": "-- Not available in SpatiaLite", "sql_type": "WINDOW_FUNCTION", "sql_taxonomy": {"operation_type": "WINDOW_FUNCTION", "has_cte": true, "has_subquery": false, "has_aggregation": false, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "HARD", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "3-5", "overall_difficulty": "HARD", "complexity_score": 6}, "difficulty_level": "HARD", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bgp", "gb", "bp", "vr", "0", "b"], "tables": ["bp.scenario_id", "gb.in_service", "bgp.type", "0.4", "bp.type", "gb.geometry", "gb.voltage_kv", "gb.name", "gb.scenario_id", "b.building_geometry", "bp.project_id", "gb.bus_id", "voltage_requirements", "bgp.distance_to_grid", "vr.required_voltage_level", "bgp.building_id", "bgp.voltage_kv", "bgp.proximity_rank", "bp.height", "gb.project_id", "bgp.substation_name", "bp.building_id", "vr.building_id", "bp.area", "b.building_id", "building_grid_proximity"], "columns": ["proximity_rank", "type", "height", "name", "bus_id", "building_geometry", "required_voltage_level", "area", "geometry", "4", "substation_name", "voltage_kv", "in_service", "distance_to_grid"], "geometry_columns": ["gb.geometry", "b.building_geometry", "building_geometry", "geometry"], "primary_schema": "bgp", "table_count": 26, "schema_count": 6}, "spatial_functions": ["ST_DWITHIN", "ST_DISTANCE"], "spatial_function_count": 2, "spatial_function_categories": {"predicates": ["ST_DWITHIN"], "measurements": ["ST_DISTANCE"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": ["bgp", "gb", "bp", "vr", "0", "b"], "tables": ["bp.scenario_id", "gb.in_service", "bgp.type", "0.4", "bp.type", "gb.geometry", "gb.voltage_kv", "gb.name", "gb.scenario_id", "b.building_geometry", "bp.project_id", "gb.bus_id", "voltage_requirements", "bgp.distance_to_grid", "vr.required_voltage_level", "bgp.building_id", "bgp.voltage_kv", "bgp.proximity_rank", "bp.height", "gb.project_id", "bgp.substation_name", "bp.building_id", "vr.building_id", "bp.area", "b.building_id", "building_grid_proximity"], "columns": ["proximity_rank", "type", "height", "name", "bus_id", "building_geometry", "required_voltage_level", "area", "geometry", "4", "substation_name", "voltage_kv", "in_service", "distance_to_grid"], "functions": ["ST_DWithin", "ST_Distance"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze electrical grid infrastructure proximity to buildings with voltage level considerations", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "C10_grid_building_proximity", "complexity_level": "C", "tags": ["proximity", "cross_table", "freq_critical", "freq_high", "vector", "grid_analysis", "infrastructure", "postgis_only"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "grid_modernization", "building_type": "commercial", "hvac_type": "heat_pump", "region": "Emilia-Romagna", "province": "Roma", "voltage_kv": 0.4, "srid": 32633, "buffer_distance": 1000, "min_area": 425, "max_area": 2276, "min_height": 7, "max_height": 20, "min_people": 1, "max_people": 12, "year": 1993, "census_id": 5362783, "lon": 13.279661, "lat": 36.195226, "limit": 25, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 500, "min_buildings": 5, "min_points": 3, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.643751"}
{"id": "cim_stage1_000013", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive spatial analysis across vector, census, and building data with distance-based clustering", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH spatial_clusters AS (\n  SELECT b.building_id, bp.type, bp.n_people,\n         c.SEZ2011, c.P1 as population, c.REGIONE,\n         ST_ClusterDBSCAN(b.building_geometry, eps := {cluster_distance}, minpoints := {min_points}) \n         OVER (PARTITION BY bp.type) AS cluster_id\n  FROM {buildings} b\n  JOIN {building_properties} bp ON b.building_id = bp.building_id\n  JOIN {census_geo} c ON ST_Within(ST_Centroid(b.building_geometry), c.geometry)\n  WHERE bp.project_id = '{project_id}' AND bp.scenario_id = '{scenario_id}'\n),\ncluster_stats AS (\n  SELECT cluster_id, type, REGIONE,\n         COUNT(*) AS building_count,\n         SUM(n_people) AS total_residents,\n         AVG(population) AS avg_census_population,\n         ST_ConvexHull(ST_Collect(ST_Centroid(b.building_geometry))) AS cluster_boundary\n  FROM spatial_clusters sc\n  JOIN {buildings} b ON sc.building_id = b.building_id\n  WHERE cluster_id IS NOT NULL\n  GROUP BY cluster_id, type, REGIONE\n  HAVING COUNT(*) >= {min_cluster_size}\n)\nSELECT cluster_id, type, REGIONE, building_count, total_residents,\n       ROUND(avg_census_population, 0) AS avg_census_pop,\n       ST_Area(cluster_boundary) AS cluster_area_sqm,\n       ROUND(total_residents::float / (ST_Area(cluster_boundary) / 10000), 2) AS density_per_hectare\nFROM cluster_stats\nORDER BY density_per_hectare DESC;", "sql_spatialite": "WITH spatial_clusters AS (\n  SELECT b.building_id, bp.type, bp.n_people,\n         c.SEZ2011, c.P1 as population, c.REGIONE,\n         ST_ClusterDBSCAN(b.building_geometry, eps := {cluster_distance}, minpoints := {min_points}) \n         OVER (PARTITION BY bp.type) AS cluster_id\n  FROM {buildings} b\n  JOIN {building_properties} bp ON b.building_id = bp.building_id\n  JOIN {census_geo} c ON Within(Centroid(b.building_geometry), c.geometry)\n  WHERE bp.project_id = '{project_id}' AND bp.scenario_id = '{scenario_id}'\n),\ncluster_stats AS (\n  SELECT cluster_id, type, REGIONE,\n         COUNT(*) AS building_count,\n         SUM(n_people) AS total_residents,\n         AVG(population) AS avg_census_population,\n         ConvexHull(ST_Collect(Centroid(b.building_geometry))) AS cluster_boundary\n  FROM spatial_clusters sc\n  JOIN {buildings} b ON sc.building_id = b.building_id\n  WHERE cluster_id IS NOT NULL\n  GROUP BY cluster_id, type, REGIONE\n  HAVING COUNT(*) >= {min_cluster_size}\n)\nSELECT cluster_id, type, REGIONE, building_count, total_residents,\n       ROUND(avg_census_population, 0) AS avg_census_pop,\n       Area(cluster_boundary) AS cluster_area_sqm,\n       ROUND(total_residents::float / (Area(cluster_boundary) / 10000), 2) AS density_per_hectare\nFROM cluster_stats\nORDER BY density_per_hectare DESC;", "sql_type": "SPATIAL_CLUSTERING", "sql_taxonomy": {"operation_type": "SPATIAL_CLUSTERING", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "HARD", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "6+", "join_count": "3-5", "overall_difficulty": "HARD", "complexity_score": 6}, "difficulty_level": "HARD", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "sc", "b", "c"], "tables": ["b.building_geometry", "c.REGIONE", "c.SEZ2011", "bp.project_id", "cluster_stats", "spatial_clusters", "c.P1", "c.geometry", "bp.n_people", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type", "sc.building_id"], "columns": ["type", "SEZ2011", "building_geometry", "n_people", "P1", "geometry", "REGIONE"], "geometry_columns": ["b.building_geometry", "c.geometry", "building_geometry", "geometry"], "primary_schema": "bp", "table_count": 14, "schema_count": 4}, "spatial_functions": ["ST_WITHIN", "ST_CENTROID", "ST_CONVEXHULL", "ST_CLUSTERDBSCAN", "ST_COLLECT", "ST_AREA"], "spatial_function_count": 6, "spatial_function_categories": {"predicates": ["ST_WITHIN"], "measurements": ["ST_AREA"], "processing": ["ST_CONVEXHULL"], "clustering": ["ST_CLUSTERDBSCAN"], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": ["ST_COLLECT"]}, "evidence": {"database": "general", "schemas": ["bp", "sc", "b", "c"], "tables": ["b.building_geometry", "c.REGIONE", "c.SEZ2011", "bp.project_id", "cluster_stats", "spatial_clusters", "c.P1", "c.geometry", "bp.n_people", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type", "sc.building_id"], "columns": ["type", "SEZ2011", "building_geometry", "n_people", "P1", "geometry", "REGIONE"], "functions": ["ST_Centroid", "ST_Collect", "ST_ConvexHull", "ST_Area", "ST_Within", "ST_ClusterDBSCAN"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive spatial analysis across vector, census, and building data with distance-based clustering", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "C11_multi_schema_spatial_analysis", "complexity_level": "C", "tags": ["cross_table", "multi_schema", "vector", "clustering", "freq_medium", "freq_low", "freq_critical", "freq_high", "comprehensive"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "renewable_2030", "building_type": "mixed_use", "hvac_type": "electric", "region": "Lazio", "province": "Torino", "voltage_kv": 132, "srid": 3857, "buffer_distance": 2000, "min_area": 436, "max_area": 1179, "min_height": 8, "max_height": 15, "min_people": 3, "max_people": 18, "year": 1994, "census_id": 6596487, "lon": 11.608155, "lat": 42.223729, "limit": 25, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 1000, "min_buildings": 5, "min_points": 8, "min_areas": 10, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.643846"}
{"id": "cim_stage1_000014", "database_id": 1, "database_name": "cim_wizard", "question": "Find k nearest neighbors for each point in a group", "question_tone": "SPATIAL_SPECIFIC", "sql_postgis": "SELECT *\nFROM (\n  SELECT p.id AS p_id, f.id AS f_id,\n         ROW_NUMBER() OVER (PARTITION BY p.id ORDER BY f.{geom} <-> p.{geom}) AS rk\n  FROM {points} p\n  JOIN {features} f ON TRUE\n) x\nWHERE rk <= {k};", "sql_spatialite": "SELECT *\nFROM (\n  SELECT p.id AS p_id, f.id AS f_id,\n         ROW_NUMBER() OVER (PARTITION BY p.id ORDER BY f.{geom} p.{geom}) AS rk\n  FROM {points} p\n  JOIN {features} f ON TRUE\n) x\nWHERE rk <= {k};", "sql_type": "WINDOW_FUNCTION", "sql_taxonomy": {"operation_type": "WINDOW_FUNCTION", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["p", "f"], "tables": ["p.id", "f.id"], "columns": ["id"], "geometry_columns": [], "primary_schema": "p", "table_count": 2, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": ["p", "f"], "tables": ["p.id", "f.id"], "columns": ["id"], "functions": [], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find k nearest neighbors for each point in a group", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "C1_knn_per_group", "complexity_level": "C", "tags": ["windowing", "knn", "advanced"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "zero_emission", "building_type": "residential", "hvac_type": "district_heating", "region": "Toscana", "province": "Torino", "voltage_kv": 10, "srid": 32632, "buffer_distance": 2000, "min_area": 308, "max_area": 1730, "min_height": 9, "max_height": 68, "min_people": 4, "max_people": 11, "year": 1972, "census_id": 4841540, "lon": 8.415943, "lat": 45.231751, "limit": 50, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 10, "min_points": 5, "min_areas": 10, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.643889"}
{"id": "cim_stage1_000015", "database_id": 1, "database_name": "cim_wizard", "question": "Project point onto line and split line at that location", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH s AS (\n  SELECT l.id, ST_LineLocatePoint(l.{geom}, ST_SetSRID(ST_MakePoint({lon},{lat}),{srid})) AS frac\n  FROM {lines} l WHERE l.id = {line_id}\n)\nSELECT ST_LineSubstring(l.{geom}, 0, s.frac) AS from_start,\n       ST_LineSubstring(l.{geom}, s.frac, 1) AS to_end\nFROM {lines} l\nJOIN s ON s.id = l.id;", "sql_spatialite": "WITH s AS (\n  SELECT l.id, ST_LineLocatePoint(l.{geom}, SetSRID(MakePoint({lon},{lat}),{srid})) AS frac\n  FROM {lines} l WHERE l.id = {line_id}\n)\nSELECT ST_LineSubstring(l.{geom}, 0, s.frac) AS from_start,\n       ST_LineSubstring(l.{geom}, s.frac, 1) AS to_end\nFROM {lines} l\nJOIN s ON s.id = l.id;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": true, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["s", "l"], "tables": ["s.id", "s.frac", "l.id"], "columns": ["id", "frac"], "geometry_columns": [], "primary_schema": "s", "table_count": 3, "schema_count": 2}, "spatial_functions": ["ST_LINELOCATEPOINT", "ST_SETSRID", "ST_LINESUBSTRING", "ST_MAKEPOINT"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": ["ST_SETSRID"], "accessors": [], "constructors": ["ST_MAKEPOINT"]}, "evidence": {"database": "general", "schemas": ["s", "l"], "tables": ["s.id", "s.frac", "l.id"], "columns": ["id", "frac"], "functions": ["ST_LineSubstring", "ST_SetSRID", "ST_LineLocatePoint", "ST_MakePoint"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Project point onto line and split line at that location", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "C2_linear_referencing", "complexity_level": "C", "tags": ["line_processing", "projection", "freq_low", "freq_high", "linear_referencing", "freq_very_high"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "zero_emission", "building_type": "industrial", "hvac_type": "heat_pump", "region": "Lazio", "province": "Firenze", "voltage_kv": 0.4, "srid": 32632, "buffer_distance": 2000, "min_area": 323, "max_area": 1570, "min_height": 8, "max_height": 30, "min_people": 5, "max_people": 15, "year": 1959, "census_id": 4971654, "lon": 17.204766, "lat": 44.100909, "limit": 100, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 20, "min_points": 8, "min_areas": 3, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.643958"}
{"id": "cim_stage1_000018", "database_id": 1, "database_name": "cim_wizard", "question": "Find connected components in a line network", "question_tone": "DIRECT", "sql_postgis": "WITH nodes AS (\n  SELECT DISTINCT unnest(ARRAY[ST_StartPoint({geom}), ST_EndPoint({geom})]) AS node_geom\n  FROM {lines}\n),\nconnected AS (\n  SELECT ST_ClusterIntersecting(node_geom) AS component\n  FROM nodes\n)\nSELECT ROW_NUMBER() OVER () AS component_id, \n       ST_NumGeometries(component) AS node_count\nFROM connected;", "sql_spatialite": "WITH nodes AS (\n  SELECT DISTINCT unnest(ARRAY[ST_StartPoint({geom}), ST_EndPoint({geom})]) AS node_geom\n  FROM {lines}\n),\nconnected AS (\n  SELECT ST_ClusterIntersecting(node_geom) AS component\n  FROM nodes\n)\nSELECT ROW_NUMBER() OVER () AS component_id, \n       ST_NumGeometries(component) AS node_count\nFROM connected;", "sql_type": "WINDOW_FUNCTION", "sql_taxonomy": {"operation_type": "WINDOW_FUNCTION", "has_cte": true, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "SINGLE_SCHEMA", "function_count": "3-5", "join_count": "0", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": [], "tables": ["nodes", "connected"], "columns": [], "geometry_columns": [], "primary_schema": null, "table_count": 2, "schema_count": 0}, "spatial_functions": ["ST_CLUSTERINTERSECTING", "ST_STARTPOINT", "ST_ENDPOINT", "ST_NUMGEOMETRIES"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": ["ST_CLUSTERINTERSECTING"], "raster": [], "transforms": [], "accessors": ["ST_STARTPOINT", "ST_ENDPOINT"], "constructors": []}, "evidence": {"database": "general", "schemas": [], "tables": ["nodes", "connected"], "columns": [], "functions": ["ST_EndPoint", "ST_NumGeometries", "ST_StartPoint", "ST_ClusterIntersecting"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find connected components in a line network", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "C5_network_analysis", "complexity_level": "C", "tags": ["freq_low", "network", "connectivity", "graph", "freq_medium"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "public", "hvac_type": "gas_boiler", "region": "Piemonte", "province": "Roma", "voltage_kv": 10, "srid": 32633, "buffer_distance": 2000, "min_area": 57, "max_area": 2082, "min_height": 5, "max_height": 44, "min_people": 5, "max_people": 18, "year": 2016, "census_id": 2964345, "lon": 10.050128, "lat": 44.526946, "limit": 10, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 20, "min_points": 3, "min_areas": 5, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.644139"}
{"id": "cim_stage1_000019", "database_id": 1, "database_name": "cim_wizard", "question": "Extract raster values at point locations", "question_tone": "INTERROGATIVE", "sql_postgis": "SELECT p.id, ST_Value(r.rast, 1, p.{geom}) AS elevation\nFROM {raster_table} r\nJOIN {points} p\n  ON ST_Intersects(r.rast, p.{geom});", "sql_spatialite": "-- Not available in SpatiaLite", "sql_type": "RASTER_VECTOR", "sql_taxonomy": {"operation_type": "RASTER_VECTOR", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["r", "p"], "tables": ["p.id", "r.rast"], "columns": ["id", "rast"], "geometry_columns": [], "primary_schema": "r", "table_count": 2, "schema_count": 2}, "spatial_functions": ["ST_INTERSECTS", "ST_VALUE"], "spatial_function_count": 2, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": [], "processing": [], "clustering": [], "raster": ["ST_VALUE"], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": ["r", "p"], "tables": ["p.id", "r.rast"], "columns": ["id", "rast"], "functions": ["ST_Value", "ST_Intersects"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Extract raster values at point locations", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "C6_raster_analysis", "complexity_level": "C", "tags": ["freq_critical", "sampling", "raster", "postgis_only"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "efficiency_max", "building_type": "commercial", "hvac_type": "hybrid", "region": "Toscana", "province": "Roma", "voltage_kv": 0.4, "srid": 4326, "buffer_distance": 1000, "min_area": 217, "max_area": 2270, "min_height": 3, "max_height": 85, "min_people": 4, "max_people": 20, "year": 2004, "census_id": 9206445, "lon": 17.054234, "lat": 39.048398, "limit": 50, "cluster_count": 3, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 5, "min_points": 3, "min_areas": 5, "cluster_distance": 5000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.644191"}
{"id": "cim_stage1_000020", "database_id": 1, "database_name": "cim_wizard", "question": "Efficient spatial query using spatial index", "question_tone": "INTERROGATIVE", "sql_postgis": "-- Not available in PostGIS", "sql_spatialite": "SELECT f.*\nFROM {features} f\nWHERE f.ROWID IN (\n  SELECT ROWID FROM SpatialIndex \n  WHERE f_table_name = '{features}' \n  AND search_frame = BuildMbr({xmin}, {ymin}, {xmax}, {ymax}, {srid})\n);", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "SINGLE_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["f"], "tables": ["SpatialIndex", "f.ROWID"], "columns": ["ROWID"], "geometry_columns": [], "primary_schema": "f", "table_count": 2, "schema_count": 1}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": ["f"], "tables": ["SpatialIndex", "f.ROWID"], "columns": ["ROWID"], "functions": [], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Efficient spatial query using spatial index", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "C6_spatial_index_query", "complexity_level": "C", "tags": ["performance", "spatialite_only", "spatialite", "spatial_index"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "renewable_2030", "building_type": "commercial", "hvac_type": "district_heating", "region": "Toscana", "province": "Bologna", "voltage_kv": 132, "srid": 3857, "buffer_distance": 1000, "min_area": 368, "max_area": 3008, "min_height": 4, "max_height": 56, "min_people": 3, "max_people": 17, "year": 1959, "census_id": 4338124, "lon": 9.965542, "lat": 45.024314, "limit": 50, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 500, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.644238"}
{"id": "cim_stage1_000021", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate 3D distances between points with elevation", "question_tone": "TEMPORAL", "sql_postgis": "SELECT a.{id_col}, b.{id_col},\n       ST_3DDistance(a.{geom}, b.{geom}) AS distance_3d\nFROM {points_3d} a\nJOIN {points_3d} b ON a.{id_col} != b.{id_col}\nWHERE ST_3DDistance(a.{geom}, b.{geom}) < {max_distance};", "sql_spatialite": "-- Not available in SpatiaLite", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "SINGLE_TABLE", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": [], "tables": [], "columns": [], "geometry_columns": [], "primary_schema": null, "table_count": 0, "schema_count": 0}, "spatial_functions": ["ST_3DDISTANCE"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_3DDISTANCE"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "general", "schemas": [], "tables": [], "columns": [], "functions": ["ST_3DDistance"], "template_source": "general"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate 3D distances between points with elevation", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "C7_3d_analysis", "complexity_level": "C", "tags": ["freq_low", "3d", "postgis_only", "distance"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "grid_modernization", "building_type": "public", "hvac_type": "heat_pump", "region": "Lombardia", "province": "Milano", "voltage_kv": 10, "srid": 32632, "buffer_distance": 500, "min_area": 448, "max_area": 1512, "min_height": 5, "max_height": 70, "min_people": 4, "max_people": 10, "year": 2012, "census_id": 9546160, "lon": 11.55669, "lat": 43.940233, "limit": 25, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 20, "min_points": 8, "min_areas": 5, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.644285"}
{"id": "cim_stage1_000117", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze marital status distribution and family dissolution rates in census areas (Project: milan_smart_district, Scenario: renewable_2030)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.COMUNE,\n       c.P4 as singles,\n       c.P5 as married_defacto,\n       c.P6 as legally_separated,\n       c.P7 as widowed,\n       c.P8 as divorced,\n       c.P1 as total_population,\n       ROUND((c.P4::float / NULLIF(c.P1, 0)) * 100, 1) as singles_percentage,\n       ROUND(((c.P6 + c.P8)::float / NULLIF(c.P1, 0)) * 100, 1) as dissolved_marriages_pct\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Torino'\n  AND c.P1 >= 100\nORDER BY singles_percentage DESC\nLIMIT 50;", "sql_spatialite": "SELECT c.SEZ2011, c.COMUNE,\n       c.P4 as singles,\n       c.P5 as married_defacto,\n       c.P6 as legally_separated,\n       c.P7 as widowed,\n       c.P8 as divorced,\n       c.P1 as total_population,\n       ROUND((c.P4::float / NULLIF(c.P1, 0)) * 100, 1) as singles_percentage,\n       ROUND(((c.P6 + c.P8)::float / NULLIF(c.P1, 0)) * 100, 1) as dissolved_marriages_pct\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Torino'\n  AND c.P1 >= 100\nORDER BY singles_percentage DESC\nLIMIT 50;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P8", "cim_census.census_geo", "c.P7", "c.PROVINCIA", "c.SEZ2011", "c.COMUNE", "c.P6", "c.P1", "c.P4", "c.P5"], "columns": ["P4", "SEZ2011", "P7", "P8", "P1", "P6", "census_geo", "PROVINCIA", "P5", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 10, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P8", "cim_census.census_geo", "c.P7", "c.PROVINCIA", "c.SEZ2011", "c.COMUNE", "c.P6", "c.P1", "c.P4", "c.P5"], "columns": ["P4", "SEZ2011", "P7", "P8", "P1", "P6", "census_geo", "PROVINCIA", "P5", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze marital status distribution and family dissolution rates in census areas (Project: milan_smart_district, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A4_marital_status_analysis_var_94", "complexity_level": "A", "tags": ["social_demographics", "cim_wizard", "family_structure", "realistic_params", "marital_status", "cim_census"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "grid_modernization", "building_type": "commercial", "hvac_type": "gas_boiler", "region": "Piemonte", "province": "Bologna", "voltage_kv": 20, "srid": 32633, "buffer_distance": 100, "min_area": 333, "max_area": 1341, "min_height": 9, "max_height": 100, "min_people": 4, "max_people": 16, "year": 2006, "census_id": 9510938, "lon": 7.208489, "lat": 43.490147, "limit": 25, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 1000, "min_buildings": 20, "min_points": 3, "min_areas": 10, "cluster_distance": 5000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.650608"}
{"id": "cim_stage1_000166", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze marital status distribution and family dissolution rates in census areas (Project: florence_heritage_area, Scenario: baseline)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.COMUNE,\n       c.P4 as singles,\n       c.P5 as married_defacto,\n       c.P6 as legally_separated,\n       c.P7 as widowed,\n       c.P8 as divorced,\n       c.P1 as total_population,\n       ROUND((c.P4::float / NULLIF(c.P1, 0)) * 100, 1) as singles_percentage,\n       ROUND(((c.P6 + c.P8)::float / NULLIF(c.P1, 0)) * 100, 1) as dissolved_marriages_pct\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Bologna'\n  AND c.P1 >= 1000\nORDER BY singles_percentage DESC\nLIMIT 50;", "sql_spatialite": "SELECT c.SEZ2011, c.COMUNE,\n       c.P4 as singles,\n       c.P5 as married_defacto,\n       c.P6 as legally_separated,\n       c.P7 as widowed,\n       c.P8 as divorced,\n       c.P1 as total_population,\n       ROUND((c.P4::float / NULLIF(c.P1, 0)) * 100, 1) as singles_percentage,\n       ROUND(((c.P6 + c.P8)::float / NULLIF(c.P1, 0)) * 100, 1) as dissolved_marriages_pct\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Bologna'\n  AND c.P1 >= 1000\nORDER BY singles_percentage DESC\nLIMIT 50;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P8", "cim_census.census_geo", "c.P7", "c.PROVINCIA", "c.SEZ2011", "c.COMUNE", "c.P6", "c.P1", "c.P4", "c.P5"], "columns": ["P4", "SEZ2011", "P7", "P8", "P1", "P6", "census_geo", "PROVINCIA", "P5", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 10, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P8", "cim_census.census_geo", "c.P7", "c.PROVINCIA", "c.SEZ2011", "c.COMUNE", "c.P6", "c.P1", "c.P4", "c.P5"], "columns": ["P4", "SEZ2011", "P7", "P8", "P1", "P6", "census_geo", "PROVINCIA", "P5", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze marital status distribution and family dissolution rates in census areas (Project: florence_heritage_area, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A4_marital_status_analysis_var_143", "complexity_level": "A", "tags": ["social_demographics", "cim_wizard", "family_structure", "realistic_params", "marital_status", "cim_census"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "zero_emission", "building_type": "mixed_use", "hvac_type": "hybrid", "region": "Lombardia", "province": "Milano", "voltage_kv": 20, "srid": 4326, "buffer_distance": 500, "min_area": 72, "max_area": 1893, "min_height": 8, "max_height": 62, "min_people": 2, "max_people": 8, "year": 1957, "census_id": 9547593, "lon": 13.055486, "lat": 42.916665, "limit": 10, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 20, "min_points": 3, "min_areas": 3, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.653681"}
{"id": "cim_stage1_000187", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze marital status distribution and family dissolution rates in census areas (Project: rome_green_quarter, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.COMUNE,\n       c.P4 as singles,\n       c.P5 as married_defacto,\n       c.P6 as legally_separated,\n       c.P7 as widowed,\n       c.P8 as divorced,\n       c.P1 as total_population,\n       ROUND((c.P4::float / NULLIF(c.P1, 0)) * 100, 1) as singles_percentage,\n       ROUND(((c.P6 + c.P8)::float / NULLIF(c.P1, 0)) * 100, 1) as dissolved_marriages_pct\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Milano'\n  AND c.P1 >= 500\nORDER BY singles_percentage DESC\nLIMIT 25;", "sql_spatialite": "SELECT c.SEZ2011, c.COMUNE,\n       c.P4 as singles,\n       c.P5 as married_defacto,\n       c.P6 as legally_separated,\n       c.P7 as widowed,\n       c.P8 as divorced,\n       c.P1 as total_population,\n       ROUND((c.P4::float / NULLIF(c.P1, 0)) * 100, 1) as singles_percentage,\n       ROUND(((c.P6 + c.P8)::float / NULLIF(c.P1, 0)) * 100, 1) as dissolved_marriages_pct\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Milano'\n  AND c.P1 >= 500\nORDER BY singles_percentage DESC\nLIMIT 25;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P8", "cim_census.census_geo", "c.P7", "c.PROVINCIA", "c.SEZ2011", "c.COMUNE", "c.P6", "c.P1", "c.P4", "c.P5"], "columns": ["P4", "SEZ2011", "P7", "P8", "P1", "P6", "census_geo", "PROVINCIA", "P5", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 10, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P8", "cim_census.census_geo", "c.P7", "c.PROVINCIA", "c.SEZ2011", "c.COMUNE", "c.P6", "c.P1", "c.P4", "c.P5"], "columns": ["P4", "SEZ2011", "P7", "P8", "P1", "P6", "census_geo", "PROVINCIA", "P5", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze marital status distribution and family dissolution rates in census areas (Project: rome_green_quarter, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A4_marital_status_analysis_var_164", "complexity_level": "A", "tags": ["social_demographics", "cim_wizard", "family_structure", "realistic_params", "marital_status", "cim_census"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "renewable_2030", "building_type": "industrial", "hvac_type": "gas_boiler", "region": "Piemonte", "province": "Bologna", "voltage_kv": 10, "srid": 32632, "buffer_distance": 100, "min_area": 74, "max_area": 1715, "min_height": 5, "max_height": 26, "min_people": 5, "max_people": 8, "year": 1957, "census_id": 6415699, "lon": 17.158708, "lat": 44.175111, "limit": 10, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 5, "min_points": 8, "min_areas": 5, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.654975"}
{"id": "cim_stage1_000230", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze population distribution by gender in census areas for a specific region (Project: milan_smart_district, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n       c.P1 as total_population,\n       c.P2 as male_population,\n       c.P3 as female_population,\n       ROUND((c.P2::float / NULLIF(c.P1, 0)) * 100, 1) as male_percentage\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Toscana'\n  AND c.P1 >= 100\nORDER BY c.P1 DESC\nLIMIT 10;", "sql_spatialite": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n       c.P1 as total_population,\n       c.P2 as male_population,\n       c.P3 as female_population,\n       ROUND((c.P2::float / NULLIF(c.P1, 0)) * 100, 1) as male_percentage\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Toscana'\n  AND c.P1 >= 100\nORDER BY c.P1 DESC\nLIMIT 10;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P2", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P3", "c.COMUNE", "c.P1"], "columns": ["SEZ2011", "P2", "P3", "P1", "REGIONE", "census_geo", "PROVINCIA", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 8, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P2", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P3", "c.COMUNE", "c.P1"], "columns": ["SEZ2011", "P2", "P3", "P1", "REGIONE", "census_geo", "PROVINCIA", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze population distribution by gender in census areas for a specific region (Project: milan_smart_district, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A1_population_by_gender_var_7", "complexity_level": "A", "tags": ["cim_wizard", "realistic_params", "demographics", "basic_stats", "gender_analysis", "cim_census"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "renewable_2030", "building_type": "residential", "hvac_type": "electric", "region": "Emilia-Romagna", "province": "Roma", "voltage_kv": 400, "srid": 3857, "buffer_distance": 1000, "min_area": 175, "max_area": 4976, "min_height": 6, "max_height": 18, "min_people": 2, "max_people": 19, "year": 1955, "census_id": 6376959, "lon": 11.741628, "lat": 41.867207, "limit": 10, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 20, "min_points": 8, "min_areas": 5, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.657559"}
{"id": "cim_stage1_000357", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze population distribution by gender in census areas for a specific region (Project: bologna_energy_hub, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n       c.P1 as total_population,\n       c.P2 as male_population,\n       c.P3 as female_population,\n       ROUND((c.P2::float / NULLIF(c.P1, 0)) * 100, 1) as male_percentage\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Emilia-Romagna'\n  AND c.P1 >= 500\nORDER BY c.P1 DESC\nLIMIT 25;", "sql_spatialite": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n       c.P1 as total_population,\n       c.P2 as male_population,\n       c.P3 as female_population,\n       ROUND((c.P2::float / NULLIF(c.P1, 0)) * 100, 1) as male_percentage\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Emilia-Romagna'\n  AND c.P1 >= 500\nORDER BY c.P1 DESC\nLIMIT 25;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P2", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P3", "c.COMUNE", "c.P1"], "columns": ["SEZ2011", "P2", "P3", "P1", "REGIONE", "census_geo", "PROVINCIA", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 8, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P2", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P3", "c.COMUNE", "c.P1"], "columns": ["SEZ2011", "P2", "P3", "P1", "REGIONE", "census_geo", "PROVINCIA", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze population distribution by gender in census areas for a specific region (Project: bologna_energy_hub, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A1_population_by_gender_var_134", "complexity_level": "A", "tags": ["cim_wizard", "realistic_params", "demographics", "basic_stats", "gender_analysis", "cim_census"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "baseline", "building_type": "public", "hvac_type": "gas_boiler", "region": "Toscana", "province": "Roma", "voltage_kv": 20, "srid": 32633, "buffer_distance": 500, "min_area": 284, "max_area": 1689, "min_height": 4, "max_height": 47, "min_people": 5, "max_people": 7, "year": 1980, "census_id": 4824226, "lon": 10.045373, "lat": 38.690301, "limit": 100, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 1000, "min_buildings": 10, "min_points": 3, "min_areas": 10, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.665353"}
{"id": "cim_stage1_000417", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze population distribution by gender in census areas for a specific region (Project: milan_smart_district, Scenario: zero_emission)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n       c.P1 as total_population,\n       c.P2 as male_population,\n       c.P3 as female_population,\n       ROUND((c.P2::float / NULLIF(c.P1, 0)) * 100, 1) as male_percentage\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Lazio'\n  AND c.P1 >= 1000\nORDER BY c.P1 DESC\nLIMIT 50;", "sql_spatialite": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n       c.P1 as total_population,\n       c.P2 as male_population,\n       c.P3 as female_population,\n       ROUND((c.P2::float / NULLIF(c.P1, 0)) * 100, 1) as male_percentage\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Lazio'\n  AND c.P1 >= 1000\nORDER BY c.P1 DESC\nLIMIT 50;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P2", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P3", "c.COMUNE", "c.P1"], "columns": ["SEZ2011", "P2", "P3", "P1", "REGIONE", "census_geo", "PROVINCIA", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 8, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P2", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P3", "c.COMUNE", "c.P1"], "columns": ["SEZ2011", "P2", "P3", "P1", "REGIONE", "census_geo", "PROVINCIA", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze population distribution by gender in census areas for a specific region (Project: milan_smart_district, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A1_population_by_gender_var_194", "complexity_level": "A", "tags": ["cim_wizard", "realistic_params", "demographics", "basic_stats", "gender_analysis", "cim_census"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "efficiency_max", "building_type": "industrial", "hvac_type": "hybrid", "region": "Piemonte", "province": "Milano", "voltage_kv": 132, "srid": 32632, "buffer_distance": 100, "min_area": 180, "max_area": 4830, "min_height": 7, "max_height": 39, "min_people": 1, "max_people": 17, "year": 2016, "census_id": 4516639, "lon": 16.544449, "lat": 43.95503, "limit": 100, "cluster_count": 3, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 20, "min_points": 8, "min_areas": 10, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.668621"}
{"id": "cim_stage1_000479", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive demographic transition analysis combining aging, modernization, and social change indicators (Project: rome_green_quarter, Scenario: baseline)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH demographic_transition AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         -- Age structure indicators\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as working_age_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         -- Family and social structure\n         c.PF3 as single_households,\n         c.PF8 as large_families,\n         c.P4 as singles,\n         c.P5 as married,\n         -- Economic indicators\n         c.P61 as employed,\n         c.P62 as unemployed,\n         c.P130 as housewives,\n         c.P131 as students,\n         -- Education\n         c.P47 as university_graduates,\n         c.P52 as illiterate,\n         -- Foreign population\n         c.ST1 as foreigners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 >= 100\n),\ntransition_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         -- Demographic transition indicators\n         ROUND((elderly_65_plus::float / NULLIF(youth_0_14, 0)), 2) as aging_ratio,\n         ROUND((youth_0_14::float / NULLIF(working_age_15_64, 0)) * 100, 1) as youth_dependency,\n         ROUND((elderly_65_plus::float / NULLIF(working_age_15_64, 0)) * 100, 1) as old_age_dependency,\n         -- Social modernization indicators  \n         ROUND((single_households::float / NULLIF(total_population, 0)) * 100, 1) as individualization_index,\n         ROUND((university_graduates::float / NULLIF(total_population, 0)) * 100, 1) as education_modernization,\n         ROUND((foreigners::float / NULLIF(total_population, 0)) * 100, 1) as cultural_diversity,\n         -- Economic transition\n         ROUND((unemployed::float / NULLIF(employed + unemployed, 0)) * 100, 1) as unemployment_rate,\n         ROUND((housewives::float / NULLIF(total_population, 0)) * 100, 1) as traditional_gender_roles,\n         total_population\n  FROM demographic_transition\n),\ntransition_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         aging_ratio, youth_dependency, old_age_dependency,\n         individualization_index, education_modernization, cultural_diversity,\n         unemployment_rate, traditional_gender_roles,\n         CASE \n           WHEN aging_ratio > 1.5 AND individualization_index > 15 AND education_modernization > 10 THEN 'POST_TRANSITION_ADVANCED'\n           WHEN aging_ratio > 1.0 AND education_modernization > 5 THEN 'LATE_TRANSITION'\n           WHEN youth_dependency > 25 AND traditional_gender_roles > 10 THEN 'PRE_TRANSITION_TRADITIONAL'\n           WHEN unemployment_rate > 15 AND cultural_diversity > 5 THEN 'TRANSITION_WITH_CHALLENGES'\n           ELSE 'MID_TRANSITION'\n         END as demographic_transition_stage\n  FROM transition_indicators\n)\nSELECT demographic_transition_stage, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(aging_ratio), 2) as avg_aging_ratio,\n       ROUND(AVG(individualization_index), 1) as avg_individualization,\n       ROUND(AVG(education_modernization), 1) as avg_education_mod,\n       ROUND(AVG(cultural_diversity), 1) as avg_diversity,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment,\n       ROUND(AVG(traditional_gender_roles), 1) as avg_traditional_roles\nFROM transition_classification\nGROUP BY demographic_transition_stage, PROVINCIA\nHAVING COUNT(*) >= 5\nORDER BY avg_aging_ratio DESC;", "sql_spatialite": "WITH demographic_transition AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         -- Age structure indicators\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as working_age_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         -- Family and social structure\n         c.PF3 as single_households,\n         c.PF8 as large_families,\n         c.P4 as singles,\n         c.P5 as married,\n         -- Economic indicators\n         c.P61 as employed,\n         c.P62 as unemployed,\n         c.P130 as housewives,\n         c.P131 as students,\n         -- Education\n         c.P47 as university_graduates,\n         c.P52 as illiterate,\n         -- Foreign population\n         c.ST1 as foreigners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 >= 100\n),\ntransition_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         -- Demographic transition indicators\n         ROUND((elderly_65_plus::float / NULLIF(youth_0_14, 0)), 2) as aging_ratio,\n         ROUND((youth_0_14::float / NULLIF(working_age_15_64, 0)) * 100, 1) as youth_dependency,\n         ROUND((elderly_65_plus::float / NULLIF(working_age_15_64, 0)) * 100, 1) as old_age_dependency,\n         -- Social modernization indicators  \n         ROUND((single_households::float / NULLIF(total_population, 0)) * 100, 1) as individualization_index,\n         ROUND((university_graduates::float / NULLIF(total_population, 0)) * 100, 1) as education_modernization,\n         ROUND((foreigners::float / NULLIF(total_population, 0)) * 100, 1) as cultural_diversity,\n         -- Economic transition\n         ROUND((unemployed::float / NULLIF(employed + unemployed, 0)) * 100, 1) as unemployment_rate,\n         ROUND((housewives::float / NULLIF(total_population, 0)) * 100, 1) as traditional_gender_roles,\n         total_population\n  FROM demographic_transition\n),\ntransition_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         aging_ratio, youth_dependency, old_age_dependency,\n         individualization_index, education_modernization, cultural_diversity,\n         unemployment_rate, traditional_gender_roles,\n         CASE \n           WHEN aging_ratio > 1.5 AND individualization_index > 15 AND education_modernization > 10 THEN 'POST_TRANSITION_ADVANCED'\n           WHEN aging_ratio > 1.0 AND education_modernization > 5 THEN 'LATE_TRANSITION'\n           WHEN youth_dependency > 25 AND traditional_gender_roles > 10 THEN 'PRE_TRANSITION_TRADITIONAL'\n           WHEN unemployment_rate > 15 AND cultural_diversity > 5 THEN 'TRANSITION_WITH_CHALLENGES'\n           ELSE 'MID_TRANSITION'\n         END as demographic_transition_stage\n  FROM transition_indicators\n)\nSELECT demographic_transition_stage, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(aging_ratio), 2) as avg_aging_ratio,\n       ROUND(AVG(individualization_index), 1) as avg_individualization,\n       ROUND(AVG(education_modernization), 1) as avg_education_mod,\n       ROUND(AVG(cultural_diversity), 1) as avg_diversity,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment,\n       ROUND(AVG(traditional_gender_roles), 1) as avg_traditional_roles\nFROM transition_classification\nGROUP BY demographic_transition_stage, PROVINCIA\nHAVING COUNT(*) >= 5\nORDER BY avg_aging_ratio DESC;", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.P18", "c.P131", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_census.census_geo", "transition_classification", "c.P20", "c.COMUNE", "c.P1", "c.P47", "c.P5", "c.P25", "c.PF3", "c.P23", "c.P19", "c.P22", "c.geometry", "1.5", "c.P52", "c.PROVINCIA", "c.P14", "c.ST1", "c.P21", "c.P61", "c.P15", "1.0", "transition_indicators", "c.P17", "c.P29", "demographic_transition", "c.P26", "c.PF8", "c.P130", "c.P28", "c.P62", "c.P4", "c.P24", "c.P16"], "columns": ["P4", "PF3", "P27", "PF8", "P1", "geometry", "P29", "P47", "P5", "P131", "COMUNE", "P21", "P26", "P23", "P52", "P24", "5", "census_geo", "P16", "P14", "ST1", "SEZ2011", "P130", "P61", "P18", "P62", "PROVINCIA", "0", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "geometry_columns": ["c.geometry", "geometry"], "primary_schema": "1", "table_count": 39, "schema_count": 3}, "spatial_functions": ["ST_TRANSITION_ADVANCED"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.P18", "c.P131", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_census.census_geo", "transition_classification", "c.P20", "c.COMUNE", "c.P1", "c.P47", "c.P5", "c.P25", "c.PF3", "c.P23", "c.P19", "c.P22", "c.geometry", "1.5", "c.P52", "c.PROVINCIA", "c.P14", "c.ST1", "c.P21", "c.P61", "c.P15", "1.0", "transition_indicators", "c.P17", "c.P29", "demographic_transition", "c.P26", "c.PF8", "c.P130", "c.P28", "c.P62", "c.P4", "c.P24", "c.P16"], "columns": ["P4", "PF3", "P27", "PF8", "P1", "geometry", "P29", "P47", "P5", "P131", "COMUNE", "P21", "P26", "P23", "P52", "P24", "5", "census_geo", "P16", "P14", "ST1", "SEZ2011", "P130", "P61", "P18", "P62", "PROVINCIA", "0", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "functions": ["ST_TRANSITION_ADVANCED"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive demographic transition analysis combining aging, modernization, and social change indicators (Project: rome_green_quarter, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C5_demographic_transition_analysis_var_56", "complexity_level": "C", "tags": ["demographic_transition", "social_change", "aging", "modernization", "cim_wizard", "cim_census", "economic_transition", "realistic_params"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "renewable_2030", "building_type": "mixed_use", "hvac_type": "gas_boiler", "region": "Lazio", "province": "Firenze", "voltage_kv": 220, "srid": 32633, "buffer_distance": 100, "min_area": 262, "max_area": 3944, "min_height": 9, "max_height": 86, "min_people": 4, "max_people": 18, "year": 2013, "census_id": 4547232, "lon": 10.800076, "lat": 39.024191, "limit": 50, "cluster_count": 5, "min_cluster_size": 3, "max_distance": 2000, "min_buildings": 10, "min_points": 3, "min_areas": 5, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.678819"}
{"id": "cim_stage1_000510", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive demographic transition analysis combining aging, modernization, and social change indicators (Project: bologna_energy_hub, Scenario: efficiency_max)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH demographic_transition AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         -- Age structure indicators\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as working_age_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         -- Family and social structure\n         c.PF3 as single_households,\n         c.PF8 as large_families,\n         c.P4 as singles,\n         c.P5 as married,\n         -- Economic indicators\n         c.P61 as employed,\n         c.P62 as unemployed,\n         c.P130 as housewives,\n         c.P131 as students,\n         -- Education\n         c.P47 as university_graduates,\n         c.P52 as illiterate,\n         -- Foreign population\n         c.ST1 as foreigners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 >= 1000\n),\ntransition_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         -- Demographic transition indicators\n         ROUND((elderly_65_plus::float / NULLIF(youth_0_14, 0)), 2) as aging_ratio,\n         ROUND((youth_0_14::float / NULLIF(working_age_15_64, 0)) * 100, 1) as youth_dependency,\n         ROUND((elderly_65_plus::float / NULLIF(working_age_15_64, 0)) * 100, 1) as old_age_dependency,\n         -- Social modernization indicators  \n         ROUND((single_households::float / NULLIF(total_population, 0)) * 100, 1) as individualization_index,\n         ROUND((university_graduates::float / NULLIF(total_population, 0)) * 100, 1) as education_modernization,\n         ROUND((foreigners::float / NULLIF(total_population, 0)) * 100, 1) as cultural_diversity,\n         -- Economic transition\n         ROUND((unemployed::float / NULLIF(employed + unemployed, 0)) * 100, 1) as unemployment_rate,\n         ROUND((housewives::float / NULLIF(total_population, 0)) * 100, 1) as traditional_gender_roles,\n         total_population\n  FROM demographic_transition\n),\ntransition_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         aging_ratio, youth_dependency, old_age_dependency,\n         individualization_index, education_modernization, cultural_diversity,\n         unemployment_rate, traditional_gender_roles,\n         CASE \n           WHEN aging_ratio > 1.5 AND individualization_index > 15 AND education_modernization > 10 THEN 'POST_TRANSITION_ADVANCED'\n           WHEN aging_ratio > 1.0 AND education_modernization > 5 THEN 'LATE_TRANSITION'\n           WHEN youth_dependency > 25 AND traditional_gender_roles > 10 THEN 'PRE_TRANSITION_TRADITIONAL'\n           WHEN unemployment_rate > 15 AND cultural_diversity > 5 THEN 'TRANSITION_WITH_CHALLENGES'\n           ELSE 'MID_TRANSITION'\n         END as demographic_transition_stage\n  FROM transition_indicators\n)\nSELECT demographic_transition_stage, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(aging_ratio), 2) as avg_aging_ratio,\n       ROUND(AVG(individualization_index), 1) as avg_individualization,\n       ROUND(AVG(education_modernization), 1) as avg_education_mod,\n       ROUND(AVG(cultural_diversity), 1) as avg_diversity,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment,\n       ROUND(AVG(traditional_gender_roles), 1) as avg_traditional_roles\nFROM transition_classification\nGROUP BY demographic_transition_stage, PROVINCIA\nHAVING COUNT(*) >= 5\nORDER BY avg_aging_ratio DESC;", "sql_spatialite": "WITH demographic_transition AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         -- Age structure indicators\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as working_age_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         -- Family and social structure\n         c.PF3 as single_households,\n         c.PF8 as large_families,\n         c.P4 as singles,\n         c.P5 as married,\n         -- Economic indicators\n         c.P61 as employed,\n         c.P62 as unemployed,\n         c.P130 as housewives,\n         c.P131 as students,\n         -- Education\n         c.P47 as university_graduates,\n         c.P52 as illiterate,\n         -- Foreign population\n         c.ST1 as foreigners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 >= 1000\n),\ntransition_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         -- Demographic transition indicators\n         ROUND((elderly_65_plus::float / NULLIF(youth_0_14, 0)), 2) as aging_ratio,\n         ROUND((youth_0_14::float / NULLIF(working_age_15_64, 0)) * 100, 1) as youth_dependency,\n         ROUND((elderly_65_plus::float / NULLIF(working_age_15_64, 0)) * 100, 1) as old_age_dependency,\n         -- Social modernization indicators  \n         ROUND((single_households::float / NULLIF(total_population, 0)) * 100, 1) as individualization_index,\n         ROUND((university_graduates::float / NULLIF(total_population, 0)) * 100, 1) as education_modernization,\n         ROUND((foreigners::float / NULLIF(total_population, 0)) * 100, 1) as cultural_diversity,\n         -- Economic transition\n         ROUND((unemployed::float / NULLIF(employed + unemployed, 0)) * 100, 1) as unemployment_rate,\n         ROUND((housewives::float / NULLIF(total_population, 0)) * 100, 1) as traditional_gender_roles,\n         total_population\n  FROM demographic_transition\n),\ntransition_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         aging_ratio, youth_dependency, old_age_dependency,\n         individualization_index, education_modernization, cultural_diversity,\n         unemployment_rate, traditional_gender_roles,\n         CASE \n           WHEN aging_ratio > 1.5 AND individualization_index > 15 AND education_modernization > 10 THEN 'POST_TRANSITION_ADVANCED'\n           WHEN aging_ratio > 1.0 AND education_modernization > 5 THEN 'LATE_TRANSITION'\n           WHEN youth_dependency > 25 AND traditional_gender_roles > 10 THEN 'PRE_TRANSITION_TRADITIONAL'\n           WHEN unemployment_rate > 15 AND cultural_diversity > 5 THEN 'TRANSITION_WITH_CHALLENGES'\n           ELSE 'MID_TRANSITION'\n         END as demographic_transition_stage\n  FROM transition_indicators\n)\nSELECT demographic_transition_stage, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(aging_ratio), 2) as avg_aging_ratio,\n       ROUND(AVG(individualization_index), 1) as avg_individualization,\n       ROUND(AVG(education_modernization), 1) as avg_education_mod,\n       ROUND(AVG(cultural_diversity), 1) as avg_diversity,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment,\n       ROUND(AVG(traditional_gender_roles), 1) as avg_traditional_roles\nFROM transition_classification\nGROUP BY demographic_transition_stage, PROVINCIA\nHAVING COUNT(*) >= 5\nORDER BY avg_aging_ratio DESC;", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.P18", "c.P131", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_census.census_geo", "transition_classification", "c.P20", "c.COMUNE", "c.P1", "c.P47", "c.P5", "c.P25", "c.PF3", "c.P23", "c.P19", "c.P22", "c.geometry", "1.5", "c.P52", "c.PROVINCIA", "c.P14", "c.ST1", "c.P21", "c.P61", "c.P15", "1.0", "transition_indicators", "c.P17", "c.P29", "demographic_transition", "c.P26", "c.PF8", "c.P130", "c.P28", "c.P62", "c.P4", "c.P24", "c.P16"], "columns": ["P4", "PF3", "P27", "PF8", "P1", "geometry", "P29", "P47", "P5", "P131", "COMUNE", "P21", "P26", "P23", "P52", "P24", "5", "census_geo", "P16", "P14", "ST1", "SEZ2011", "P130", "P61", "P18", "P62", "PROVINCIA", "0", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "geometry_columns": ["c.geometry", "geometry"], "primary_schema": "1", "table_count": 39, "schema_count": 3}, "spatial_functions": ["ST_TRANSITION_ADVANCED"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.P18", "c.P131", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_census.census_geo", "transition_classification", "c.P20", "c.COMUNE", "c.P1", "c.P47", "c.P5", "c.P25", "c.PF3", "c.P23", "c.P19", "c.P22", "c.geometry", "1.5", "c.P52", "c.PROVINCIA", "c.P14", "c.ST1", "c.P21", "c.P61", "c.P15", "1.0", "transition_indicators", "c.P17", "c.P29", "demographic_transition", "c.P26", "c.PF8", "c.P130", "c.P28", "c.P62", "c.P4", "c.P24", "c.P16"], "columns": ["P4", "PF3", "P27", "PF8", "P1", "geometry", "P29", "P47", "P5", "P131", "COMUNE", "P21", "P26", "P23", "P52", "P24", "5", "census_geo", "P16", "P14", "ST1", "SEZ2011", "P130", "P61", "P18", "P62", "PROVINCIA", "0", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "functions": ["ST_TRANSITION_ADVANCED"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive demographic transition analysis combining aging, modernization, and social change indicators (Project: bologna_energy_hub, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C5_demographic_transition_analysis_var_87", "complexity_level": "C", "tags": ["demographic_transition", "social_change", "aging", "modernization", "cim_wizard", "cim_census", "economic_transition", "realistic_params"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "industrial", "hvac_type": "gas_boiler", "region": "Toscana", "province": "Firenze", "voltage_kv": 400, "srid": 3857, "buffer_distance": 1000, "min_area": 470, "max_area": 4993, "min_height": 9, "max_height": 47, "min_people": 5, "max_people": 7, "year": 2013, "census_id": 5100583, "lon": 17.252364, "lat": 38.913378, "limit": 25, "cluster_count": 10, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 5, "min_points": 8, "min_areas": 5, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.684463"}
{"id": "cim_stage1_000619", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive demographic transition analysis combining aging, modernization, and social change indicators (Project: rome_green_quarter, Scenario: renewable_2030)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH demographic_transition AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         -- Age structure indicators\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as working_age_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         -- Family and social structure\n         c.PF3 as single_households,\n         c.PF8 as large_families,\n         c.P4 as singles,\n         c.P5 as married,\n         -- Economic indicators\n         c.P61 as employed,\n         c.P62 as unemployed,\n         c.P130 as housewives,\n         c.P131 as students,\n         -- Education\n         c.P47 as university_graduates,\n         c.P52 as illiterate,\n         -- Foreign population\n         c.ST1 as foreigners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Toscana' AND c.P1 >= 1000\n),\ntransition_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         -- Demographic transition indicators\n         ROUND((elderly_65_plus::float / NULLIF(youth_0_14, 0)), 2) as aging_ratio,\n         ROUND((youth_0_14::float / NULLIF(working_age_15_64, 0)) * 100, 1) as youth_dependency,\n         ROUND((elderly_65_plus::float / NULLIF(working_age_15_64, 0)) * 100, 1) as old_age_dependency,\n         -- Social modernization indicators  \n         ROUND((single_households::float / NULLIF(total_population, 0)) * 100, 1) as individualization_index,\n         ROUND((university_graduates::float / NULLIF(total_population, 0)) * 100, 1) as education_modernization,\n         ROUND((foreigners::float / NULLIF(total_population, 0)) * 100, 1) as cultural_diversity,\n         -- Economic transition\n         ROUND((unemployed::float / NULLIF(employed + unemployed, 0)) * 100, 1) as unemployment_rate,\n         ROUND((housewives::float / NULLIF(total_population, 0)) * 100, 1) as traditional_gender_roles,\n         total_population\n  FROM demographic_transition\n),\ntransition_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         aging_ratio, youth_dependency, old_age_dependency,\n         individualization_index, education_modernization, cultural_diversity,\n         unemployment_rate, traditional_gender_roles,\n         CASE \n           WHEN aging_ratio > 1.5 AND individualization_index > 15 AND education_modernization > 10 THEN 'POST_TRANSITION_ADVANCED'\n           WHEN aging_ratio > 1.0 AND education_modernization > 5 THEN 'LATE_TRANSITION'\n           WHEN youth_dependency > 25 AND traditional_gender_roles > 10 THEN 'PRE_TRANSITION_TRADITIONAL'\n           WHEN unemployment_rate > 15 AND cultural_diversity > 5 THEN 'TRANSITION_WITH_CHALLENGES'\n           ELSE 'MID_TRANSITION'\n         END as demographic_transition_stage\n  FROM transition_indicators\n)\nSELECT demographic_transition_stage, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(aging_ratio), 2) as avg_aging_ratio,\n       ROUND(AVG(individualization_index), 1) as avg_individualization,\n       ROUND(AVG(education_modernization), 1) as avg_education_mod,\n       ROUND(AVG(cultural_diversity), 1) as avg_diversity,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment,\n       ROUND(AVG(traditional_gender_roles), 1) as avg_traditional_roles\nFROM transition_classification\nGROUP BY demographic_transition_stage, PROVINCIA\nHAVING COUNT(*) >= 5\nORDER BY avg_aging_ratio DESC;", "sql_spatialite": "WITH demographic_transition AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         -- Age structure indicators\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as working_age_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         -- Family and social structure\n         c.PF3 as single_households,\n         c.PF8 as large_families,\n         c.P4 as singles,\n         c.P5 as married,\n         -- Economic indicators\n         c.P61 as employed,\n         c.P62 as unemployed,\n         c.P130 as housewives,\n         c.P131 as students,\n         -- Education\n         c.P47 as university_graduates,\n         c.P52 as illiterate,\n         -- Foreign population\n         c.ST1 as foreigners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Toscana' AND c.P1 >= 1000\n),\ntransition_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         -- Demographic transition indicators\n         ROUND((elderly_65_plus::float / NULLIF(youth_0_14, 0)), 2) as aging_ratio,\n         ROUND((youth_0_14::float / NULLIF(working_age_15_64, 0)) * 100, 1) as youth_dependency,\n         ROUND((elderly_65_plus::float / NULLIF(working_age_15_64, 0)) * 100, 1) as old_age_dependency,\n         -- Social modernization indicators  \n         ROUND((single_households::float / NULLIF(total_population, 0)) * 100, 1) as individualization_index,\n         ROUND((university_graduates::float / NULLIF(total_population, 0)) * 100, 1) as education_modernization,\n         ROUND((foreigners::float / NULLIF(total_population, 0)) * 100, 1) as cultural_diversity,\n         -- Economic transition\n         ROUND((unemployed::float / NULLIF(employed + unemployed, 0)) * 100, 1) as unemployment_rate,\n         ROUND((housewives::float / NULLIF(total_population, 0)) * 100, 1) as traditional_gender_roles,\n         total_population\n  FROM demographic_transition\n),\ntransition_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         aging_ratio, youth_dependency, old_age_dependency,\n         individualization_index, education_modernization, cultural_diversity,\n         unemployment_rate, traditional_gender_roles,\n         CASE \n           WHEN aging_ratio > 1.5 AND individualization_index > 15 AND education_modernization > 10 THEN 'POST_TRANSITION_ADVANCED'\n           WHEN aging_ratio > 1.0 AND education_modernization > 5 THEN 'LATE_TRANSITION'\n           WHEN youth_dependency > 25 AND traditional_gender_roles > 10 THEN 'PRE_TRANSITION_TRADITIONAL'\n           WHEN unemployment_rate > 15 AND cultural_diversity > 5 THEN 'TRANSITION_WITH_CHALLENGES'\n           ELSE 'MID_TRANSITION'\n         END as demographic_transition_stage\n  FROM transition_indicators\n)\nSELECT demographic_transition_stage, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(aging_ratio), 2) as avg_aging_ratio,\n       ROUND(AVG(individualization_index), 1) as avg_individualization,\n       ROUND(AVG(education_modernization), 1) as avg_education_mod,\n       ROUND(AVG(cultural_diversity), 1) as avg_diversity,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment,\n       ROUND(AVG(traditional_gender_roles), 1) as avg_traditional_roles\nFROM transition_classification\nGROUP BY demographic_transition_stage, PROVINCIA\nHAVING COUNT(*) >= 5\nORDER BY avg_aging_ratio DESC;", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.P18", "c.P131", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_census.census_geo", "transition_classification", "c.P20", "c.COMUNE", "c.P1", "c.P47", "c.P5", "c.P25", "c.PF3", "c.P23", "c.P19", "c.P22", "c.geometry", "1.5", "c.P52", "c.PROVINCIA", "c.P14", "c.ST1", "c.P21", "c.P61", "c.P15", "1.0", "transition_indicators", "c.P17", "c.P29", "demographic_transition", "c.P26", "c.PF8", "c.P130", "c.P28", "c.P62", "c.P4", "c.P24", "c.P16"], "columns": ["P4", "PF3", "P27", "PF8", "P1", "geometry", "P29", "P47", "P5", "P131", "COMUNE", "P21", "P26", "P23", "P52", "P24", "5", "census_geo", "P16", "P14", "ST1", "SEZ2011", "P130", "P61", "P18", "P62", "PROVINCIA", "0", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "geometry_columns": ["c.geometry", "geometry"], "primary_schema": "1", "table_count": 39, "schema_count": 3}, "spatial_functions": ["ST_TRANSITION_ADVANCED"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.P18", "c.P131", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_census.census_geo", "transition_classification", "c.P20", "c.COMUNE", "c.P1", "c.P47", "c.P5", "c.P25", "c.PF3", "c.P23", "c.P19", "c.P22", "c.geometry", "1.5", "c.P52", "c.PROVINCIA", "c.P14", "c.ST1", "c.P21", "c.P61", "c.P15", "1.0", "transition_indicators", "c.P17", "c.P29", "demographic_transition", "c.P26", "c.PF8", "c.P130", "c.P28", "c.P62", "c.P4", "c.P24", "c.P16"], "columns": ["P4", "PF3", "P27", "PF8", "P1", "geometry", "P29", "P47", "P5", "P131", "COMUNE", "P21", "P26", "P23", "P52", "P24", "5", "census_geo", "P16", "P14", "ST1", "SEZ2011", "P130", "P61", "P18", "P62", "PROVINCIA", "0", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "functions": ["ST_TRANSITION_ADVANCED"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive demographic transition analysis combining aging, modernization, and social change indicators (Project: rome_green_quarter, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C5_demographic_transition_analysis_var_196", "complexity_level": "C", "tags": ["demographic_transition", "social_change", "aging", "modernization", "cim_wizard", "cim_census", "economic_transition", "realistic_params"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "efficiency_max", "building_type": "public", "hvac_type": "heat_pump", "region": "Piemonte", "province": "Firenze", "voltage_kv": 10, "srid": 32632, "buffer_distance": 1000, "min_area": 409, "max_area": 1572, "min_height": 7, "max_height": 79, "min_people": 4, "max_people": 8, "year": 1980, "census_id": 7269825, "lon": 13.735805, "lat": 46.642956, "limit": 10, "cluster_count": 8, "min_cluster_size": 10, "max_distance": 1000, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.703661"}
{"id": "cim_stage1_000667", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced spatial clustering analysis of demographic diversity and foreign population distribution patterns (Project: rome_green_quarter, Scenario: efficiency_max)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH census_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.ST1 as foreign_population,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         ROUND((c.ST1::float / NULLIF(c.P1, 0)) * 100, 1) as foreign_percentage,\n         c.E1 as total_buildings,\n         c.E3 as residential_buildings,\n         c.E8 + c.E9 as pre_1945_buildings,\n         c.E15 + c.E16 as post_2000_buildings\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lombardia' AND c.P1 >= 500\n),\nspatial_clustering AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, foreign_population, foreign_percentage,\n         total_buildings, residential_buildings,\n         ST_ClusterDBSCAN(ST_Centroid(geometry), eps := 2000, minpoints := 3) \n         OVER (PARTITION BY PROVINCIA) as cluster_id\n  FROM census_demographics\n),\ncluster_analysis AS (\n  SELECT cluster_id, PROVINCIA,\n         COUNT(*) as census_areas_in_cluster,\n         SUM(total_population) as cluster_population,\n         ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n         SUM(total_buildings) as total_buildings_cluster,\n         ROUND(AVG(foreign_percentage)) as diversity_index,\n         ST_ConvexHull(ST_Collect(ST_Centroid(cd.geometry))) as cluster_boundary\n  FROM spatial_clustering sc\n  JOIN census_demographics cd ON sc.SEZ2011 = cd.SEZ2011\n  WHERE cluster_id IS NOT NULL\n  GROUP BY cluster_id, PROVINCIA\n  HAVING COUNT(*) >= 5\n)\nSELECT cluster_id, PROVINCIA, census_areas_in_cluster, cluster_population,\n       avg_foreign_pct, total_buildings_cluster,\n       ST_Area(cluster_boundary) as cluster_area_sqm,\n       ROUND((cluster_population::float / (ST_Area(cluster_boundary) / 10000)), 1) as population_density_per_hectare\nFROM cluster_analysis\nORDER BY population_density_per_hectare DESC;", "sql_spatialite": "WITH census_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.ST1 as foreign_population,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         ROUND((c.ST1::float / NULLIF(c.P1, 0)) * 100, 1) as foreign_percentage,\n         c.E1 as total_buildings,\n         c.E3 as residential_buildings,\n         c.E8 + c.E9 as pre_1945_buildings,\n         c.E15 + c.E16 as post_2000_buildings\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lombardia' AND c.P1 >= 500\n),\nspatial_clustering AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, foreign_population, foreign_percentage,\n         total_buildings, residential_buildings,\n         ST_ClusterDBSCAN(Centroid(geometry), eps := 2000, minpoints := 3) \n         OVER (PARTITION BY PROVINCIA) as cluster_id\n  FROM census_demographics\n),\ncluster_analysis AS (\n  SELECT cluster_id, PROVINCIA,\n         COUNT(*) as census_areas_in_cluster,\n         SUM(total_population) as cluster_population,\n         ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n         SUM(total_buildings) as total_buildings_cluster,\n         ROUND(AVG(foreign_percentage)) as diversity_index,\n         ConvexHull(ST_Collect(Centroid(cd.geometry))) as cluster_boundary\n  FROM spatial_clustering sc\n  JOIN census_demographics cd ON sc.SEZ2011 = cd.SEZ2011\n  WHERE cluster_id IS NOT NULL\n  GROUP BY cluster_id, PROVINCIA\n  HAVING COUNT(*) >= 5\n)\nSELECT cluster_id, PROVINCIA, census_areas_in_cluster, cluster_population,\n       avg_foreign_pct, total_buildings_cluster,\n       Area(cluster_boundary) as cluster_area_sqm,\n       ROUND((cluster_population::float / (Area(cluster_boundary) / 10000)), 1) as population_density_per_hectare\nFROM cluster_analysis\nORDER BY population_density_per_hectare DESC;", "sql_type": "SPATIAL_CLUSTERING", "sql_taxonomy": {"operation_type": "SPATIAL_CLUSTERING", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "6+", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cd", "sc", "cim_census", "c"], "tables": ["c.ST12", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "c.COMUNE", "c.P1", "c.E8", "spatial_clustering", "c.E9", "c.ST9", "c.ST10", "c.geometry", "c.E16", "c.PROVINCIA", "c.ST1", "c.E15", "sc.SEZ2011", "c.ST11", "c.E3", "cd.SEZ2011", "cd.geometry", "census_demographics", "cluster_analysis", "c.E1"], "columns": ["E3", "ST1", "SEZ2011", "E8", "E16", "ST10", "P1", "E15", "geometry", "ST11", "REGIONE", "census_geo", "PROVINCIA", "E1", "ST12", "COMUNE", "E9", "ST9"], "geometry_columns": ["c.geometry", "cd.geometry", "geometry"], "primary_schema": "cd", "table_count": 24, "schema_count": 4}, "spatial_functions": ["ST_CENTROID", "ST_CONVEXHULL", "ST_CLUSTERDBSCAN", "ST_COLLECT", "ST_AREA", "ST_2000_BUILDINGS"], "spatial_function_count": 6, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": ["ST_CONVEXHULL"], "clustering": ["ST_CLUSTERDBSCAN"], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": ["ST_COLLECT"]}, "evidence": {"database": "cim_wizard", "schemas": ["cd", "sc", "cim_census", "c"], "tables": ["c.ST12", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "c.COMUNE", "c.P1", "c.E8", "spatial_clustering", "c.E9", "c.ST9", "c.ST10", "c.geometry", "c.E16", "c.PROVINCIA", "c.ST1", "c.E15", "sc.SEZ2011", "c.ST11", "c.E3", "cd.SEZ2011", "cd.geometry", "census_demographics", "cluster_analysis", "c.E1"], "columns": ["E3", "ST1", "SEZ2011", "E8", "E16", "ST10", "P1", "E15", "geometry", "ST11", "REGIONE", "census_geo", "PROVINCIA", "E1", "ST12", "COMUNE", "E9", "ST9"], "functions": ["ST_ConvexHull", "ST_Centroid", "ST_Area", "ST_Collect", "ST_ClusterDBSCAN"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced spatial clustering analysis of demographic diversity and foreign population distribution patterns (Project: rome_green_quarter, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C1_spatial_diversity_clustering_var_44", "complexity_level": "C", "tags": ["clustering", "density", "cim_census", "foreign_population", "freq_low", "freq_medium", "freq_critical", "cim_wizard", "freq_high", "diversity", "realistic_params", "spatial_analysis"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "baseline", "building_type": "commercial", "hvac_type": "gas_boiler", "region": "Piemonte", "province": "Torino", "voltage_kv": 220, "srid": 3857, "buffer_distance": 1000, "min_area": 380, "max_area": 4092, "min_height": 7, "max_height": 90, "min_people": 3, "max_people": 19, "year": 1953, "census_id": 7740093, "lon": 15.630413, "lat": 39.578252, "limit": 100, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 1000, "min_buildings": 10, "min_points": 3, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.709328"}
{"id": "cim_stage1_000779", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced spatial clustering analysis of demographic diversity and foreign population distribution patterns (Project: bologna_energy_hub, Scenario: grid_modernization)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH census_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.ST1 as foreign_population,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         ROUND((c.ST1::float / NULLIF(c.P1, 0)) * 100, 1) as foreign_percentage,\n         c.E1 as total_buildings,\n         c.E3 as residential_buildings,\n         c.E8 + c.E9 as pre_1945_buildings,\n         c.E15 + c.E16 as post_2000_buildings\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Piemonte' AND c.P1 >= 500\n),\nspatial_clustering AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, foreign_population, foreign_percentage,\n         total_buildings, residential_buildings,\n         ST_ClusterDBSCAN(ST_Centroid(geometry), eps := 2000, minpoints := 5) \n         OVER (PARTITION BY PROVINCIA) as cluster_id\n  FROM census_demographics\n),\ncluster_analysis AS (\n  SELECT cluster_id, PROVINCIA,\n         COUNT(*) as census_areas_in_cluster,\n         SUM(total_population) as cluster_population,\n         ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n         SUM(total_buildings) as total_buildings_cluster,\n         ROUND(AVG(foreign_percentage)) as diversity_index,\n         ST_ConvexHull(ST_Collect(ST_Centroid(cd.geometry))) as cluster_boundary\n  FROM spatial_clustering sc\n  JOIN census_demographics cd ON sc.SEZ2011 = cd.SEZ2011\n  WHERE cluster_id IS NOT NULL\n  GROUP BY cluster_id, PROVINCIA\n  HAVING COUNT(*) >= 3\n)\nSELECT cluster_id, PROVINCIA, census_areas_in_cluster, cluster_population,\n       avg_foreign_pct, total_buildings_cluster,\n       ST_Area(cluster_boundary) as cluster_area_sqm,\n       ROUND((cluster_population::float / (ST_Area(cluster_boundary) / 10000)), 1) as population_density_per_hectare\nFROM cluster_analysis\nORDER BY population_density_per_hectare DESC;", "sql_spatialite": "WITH census_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.ST1 as foreign_population,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         ROUND((c.ST1::float / NULLIF(c.P1, 0)) * 100, 1) as foreign_percentage,\n         c.E1 as total_buildings,\n         c.E3 as residential_buildings,\n         c.E8 + c.E9 as pre_1945_buildings,\n         c.E15 + c.E16 as post_2000_buildings\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Piemonte' AND c.P1 >= 500\n),\nspatial_clustering AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, foreign_population, foreign_percentage,\n         total_buildings, residential_buildings,\n         ST_ClusterDBSCAN(Centroid(geometry), eps := 2000, minpoints := 5) \n         OVER (PARTITION BY PROVINCIA) as cluster_id\n  FROM census_demographics\n),\ncluster_analysis AS (\n  SELECT cluster_id, PROVINCIA,\n         COUNT(*) as census_areas_in_cluster,\n         SUM(total_population) as cluster_population,\n         ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n         SUM(total_buildings) as total_buildings_cluster,\n         ROUND(AVG(foreign_percentage)) as diversity_index,\n         ConvexHull(ST_Collect(Centroid(cd.geometry))) as cluster_boundary\n  FROM spatial_clustering sc\n  JOIN census_demographics cd ON sc.SEZ2011 = cd.SEZ2011\n  WHERE cluster_id IS NOT NULL\n  GROUP BY cluster_id, PROVINCIA\n  HAVING COUNT(*) >= 3\n)\nSELECT cluster_id, PROVINCIA, census_areas_in_cluster, cluster_population,\n       avg_foreign_pct, total_buildings_cluster,\n       Area(cluster_boundary) as cluster_area_sqm,\n       ROUND((cluster_population::float / (Area(cluster_boundary) / 10000)), 1) as population_density_per_hectare\nFROM cluster_analysis\nORDER BY population_density_per_hectare DESC;", "sql_type": "SPATIAL_CLUSTERING", "sql_taxonomy": {"operation_type": "SPATIAL_CLUSTERING", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "6+", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cd", "sc", "cim_census", "c"], "tables": ["c.ST12", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "c.COMUNE", "c.P1", "c.E8", "spatial_clustering", "c.E9", "c.ST9", "c.ST10", "c.geometry", "c.E16", "c.PROVINCIA", "c.ST1", "c.E15", "sc.SEZ2011", "c.ST11", "c.E3", "cd.SEZ2011", "cd.geometry", "census_demographics", "cluster_analysis", "c.E1"], "columns": ["E3", "ST1", "SEZ2011", "E8", "E16", "ST10", "P1", "E15", "geometry", "ST11", "REGIONE", "census_geo", "PROVINCIA", "E1", "ST12", "COMUNE", "E9", "ST9"], "geometry_columns": ["c.geometry", "cd.geometry", "geometry"], "primary_schema": "cd", "table_count": 24, "schema_count": 4}, "spatial_functions": ["ST_CENTROID", "ST_CONVEXHULL", "ST_CLUSTERDBSCAN", "ST_COLLECT", "ST_AREA", "ST_2000_BUILDINGS"], "spatial_function_count": 6, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": ["ST_CONVEXHULL"], "clustering": ["ST_CLUSTERDBSCAN"], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": ["ST_COLLECT"]}, "evidence": {"database": "cim_wizard", "schemas": ["cd", "sc", "cim_census", "c"], "tables": ["c.ST12", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "c.COMUNE", "c.P1", "c.E8", "spatial_clustering", "c.E9", "c.ST9", "c.ST10", "c.geometry", "c.E16", "c.PROVINCIA", "c.ST1", "c.E15", "sc.SEZ2011", "c.ST11", "c.E3", "cd.SEZ2011", "cd.geometry", "census_demographics", "cluster_analysis", "c.E1"], "columns": ["E3", "ST1", "SEZ2011", "E8", "E16", "ST10", "P1", "E15", "geometry", "ST11", "REGIONE", "census_geo", "PROVINCIA", "E1", "ST12", "COMUNE", "E9", "ST9"], "functions": ["ST_ConvexHull", "ST_Centroid", "ST_Area", "ST_Collect", "ST_ClusterDBSCAN"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced spatial clustering analysis of demographic diversity and foreign population distribution patterns (Project: bologna_energy_hub, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C1_spatial_diversity_clustering_var_156", "complexity_level": "C", "tags": ["clustering", "density", "cim_census", "foreign_population", "freq_low", "freq_medium", "freq_critical", "cim_wizard", "freq_high", "diversity", "realistic_params", "spatial_analysis"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "renewable_2030", "building_type": "residential", "hvac_type": "heat_pump", "region": "Emilia-Romagna", "province": "Milano", "voltage_kv": 10, "srid": 3857, "buffer_distance": 500, "min_area": 170, "max_area": 2932, "min_height": 7, "max_height": 23, "min_people": 5, "max_people": 19, "year": 1982, "census_id": 4106500, "lon": 11.932703, "lat": 38.64818, "limit": 100, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 2000, "min_buildings": 20, "min_points": 8, "min_areas": 10, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.722716"}
{"id": "cim_stage1_000786", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced spatial clustering analysis of demographic diversity and foreign population distribution patterns (Project: milan_smart_district, Scenario: zero_emission)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH census_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.ST1 as foreign_population,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         ROUND((c.ST1::float / NULLIF(c.P1, 0)) * 100, 1) as foreign_percentage,\n         c.E1 as total_buildings,\n         c.E3 as residential_buildings,\n         c.E8 + c.E9 as pre_1945_buildings,\n         c.E15 + c.E16 as post_2000_buildings\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Piemonte' AND c.P1 >= 100\n),\nspatial_clustering AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, foreign_population, foreign_percentage,\n         total_buildings, residential_buildings,\n         ST_ClusterDBSCAN(ST_Centroid(geometry), eps := 2000, minpoints := 5) \n         OVER (PARTITION BY PROVINCIA) as cluster_id\n  FROM census_demographics\n),\ncluster_analysis AS (\n  SELECT cluster_id, PROVINCIA,\n         COUNT(*) as census_areas_in_cluster,\n         SUM(total_population) as cluster_population,\n         ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n         SUM(total_buildings) as total_buildings_cluster,\n         ROUND(AVG(foreign_percentage)) as diversity_index,\n         ST_ConvexHull(ST_Collect(ST_Centroid(cd.geometry))) as cluster_boundary\n  FROM spatial_clustering sc\n  JOIN census_demographics cd ON sc.SEZ2011 = cd.SEZ2011\n  WHERE cluster_id IS NOT NULL\n  GROUP BY cluster_id, PROVINCIA\n  HAVING COUNT(*) >= 3\n)\nSELECT cluster_id, PROVINCIA, census_areas_in_cluster, cluster_population,\n       avg_foreign_pct, total_buildings_cluster,\n       ST_Area(cluster_boundary) as cluster_area_sqm,\n       ROUND((cluster_population::float / (ST_Area(cluster_boundary) / 10000)), 1) as population_density_per_hectare\nFROM cluster_analysis\nORDER BY population_density_per_hectare DESC;", "sql_spatialite": "WITH census_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.ST1 as foreign_population,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         ROUND((c.ST1::float / NULLIF(c.P1, 0)) * 100, 1) as foreign_percentage,\n         c.E1 as total_buildings,\n         c.E3 as residential_buildings,\n         c.E8 + c.E9 as pre_1945_buildings,\n         c.E15 + c.E16 as post_2000_buildings\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Piemonte' AND c.P1 >= 100\n),\nspatial_clustering AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, foreign_population, foreign_percentage,\n         total_buildings, residential_buildings,\n         ST_ClusterDBSCAN(Centroid(geometry), eps := 2000, minpoints := 5) \n         OVER (PARTITION BY PROVINCIA) as cluster_id\n  FROM census_demographics\n),\ncluster_analysis AS (\n  SELECT cluster_id, PROVINCIA,\n         COUNT(*) as census_areas_in_cluster,\n         SUM(total_population) as cluster_population,\n         ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n         SUM(total_buildings) as total_buildings_cluster,\n         ROUND(AVG(foreign_percentage)) as diversity_index,\n         ConvexHull(ST_Collect(Centroid(cd.geometry))) as cluster_boundary\n  FROM spatial_clustering sc\n  JOIN census_demographics cd ON sc.SEZ2011 = cd.SEZ2011\n  WHERE cluster_id IS NOT NULL\n  GROUP BY cluster_id, PROVINCIA\n  HAVING COUNT(*) >= 3\n)\nSELECT cluster_id, PROVINCIA, census_areas_in_cluster, cluster_population,\n       avg_foreign_pct, total_buildings_cluster,\n       Area(cluster_boundary) as cluster_area_sqm,\n       ROUND((cluster_population::float / (Area(cluster_boundary) / 10000)), 1) as population_density_per_hectare\nFROM cluster_analysis\nORDER BY population_density_per_hectare DESC;", "sql_type": "SPATIAL_CLUSTERING", "sql_taxonomy": {"operation_type": "SPATIAL_CLUSTERING", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "6+", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cd", "sc", "cim_census", "c"], "tables": ["c.ST12", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "c.COMUNE", "c.P1", "c.E8", "spatial_clustering", "c.E9", "c.ST9", "c.ST10", "c.geometry", "c.E16", "c.PROVINCIA", "c.ST1", "c.E15", "sc.SEZ2011", "c.ST11", "c.E3", "cd.SEZ2011", "cd.geometry", "census_demographics", "cluster_analysis", "c.E1"], "columns": ["E3", "ST1", "SEZ2011", "E8", "E16", "ST10", "P1", "E15", "geometry", "ST11", "REGIONE", "census_geo", "PROVINCIA", "E1", "ST12", "COMUNE", "E9", "ST9"], "geometry_columns": ["c.geometry", "cd.geometry", "geometry"], "primary_schema": "cd", "table_count": 24, "schema_count": 4}, "spatial_functions": ["ST_CENTROID", "ST_CONVEXHULL", "ST_CLUSTERDBSCAN", "ST_COLLECT", "ST_AREA", "ST_2000_BUILDINGS"], "spatial_function_count": 6, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": ["ST_CONVEXHULL"], "clustering": ["ST_CLUSTERDBSCAN"], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": ["ST_COLLECT"]}, "evidence": {"database": "cim_wizard", "schemas": ["cd", "sc", "cim_census", "c"], "tables": ["c.ST12", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "c.COMUNE", "c.P1", "c.E8", "spatial_clustering", "c.E9", "c.ST9", "c.ST10", "c.geometry", "c.E16", "c.PROVINCIA", "c.ST1", "c.E15", "sc.SEZ2011", "c.ST11", "c.E3", "cd.SEZ2011", "cd.geometry", "census_demographics", "cluster_analysis", "c.E1"], "columns": ["E3", "ST1", "SEZ2011", "E8", "E16", "ST10", "P1", "E15", "geometry", "ST11", "REGIONE", "census_geo", "PROVINCIA", "E1", "ST12", "COMUNE", "E9", "ST9"], "functions": ["ST_ConvexHull", "ST_Centroid", "ST_Area", "ST_Collect", "ST_ClusterDBSCAN"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced spatial clustering analysis of demographic diversity and foreign population distribution patterns (Project: milan_smart_district, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C1_spatial_diversity_clustering_var_163", "complexity_level": "C", "tags": ["clustering", "density", "cim_census", "foreign_population", "freq_low", "freq_medium", "freq_critical", "cim_wizard", "freq_high", "diversity", "realistic_params", "spatial_analysis"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "renewable_2030", "building_type": "mixed_use", "hvac_type": "electric", "region": "Lazio", "province": "Torino", "voltage_kv": 220, "srid": 3857, "buffer_distance": 1000, "min_area": 72, "max_area": 1367, "min_height": 9, "max_height": 72, "min_people": 4, "max_people": 7, "year": 1955, "census_id": 8789286, "lon": 11.165757, "lat": 36.126214, "limit": 100, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 10, "min_points": 5, "min_areas": 5, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.723493"}
{"id": "cim_stage1_000934", "database_id": 1, "database_name": "cim_wizard", "question": "Find project scenarios that contain a specific geographic point (Project: florence_heritage_area, Scenario: renewable_2030)", "question_tone": "CONDITIONAL", "sql_postgis": "SELECT ps.project_name, ps.scenario_name, ST_Area(ps.project_boundary) as project_area_sqm\nFROM cim_vector.project_scenario ps\nWHERE ST_Intersects(ps.project_boundary, ST_SetSRID(ST_MakePoint(9.702523, 39.008797), 3857));", "sql_spatialite": "SELECT ps.project_name, ps.scenario_name, Area(ps.project_boundary) as project_area_sqm\nFROM cim_vector.project_scenario ps\nWHERE Intersects(ps.project_boundary, SetSRID(MakePoint(9.702523, 39.008797), 3857));", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["ps", "cim_vector", "39", "9"], "tables": ["ps.project_name", "39.008797", "cim_vector.project_scenario", "9.702523", "ps.project_boundary", "ps.scenario_name"], "columns": ["702523", "project_name", "project_boundary", "project_scenario", "scenario_name", "008797"], "geometry_columns": [], "primary_schema": "ps", "table_count": 6, "schema_count": 4}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_SETSRID", "ST_MAKEPOINT"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": ["ST_SETSRID"], "accessors": [], "constructors": ["ST_MAKEPOINT"]}, "evidence": {"database": "cim_wizard", "schemas": ["ps", "cim_vector", "39", "9"], "tables": ["ps.project_name", "39.008797", "cim_vector.project_scenario", "9.702523", "ps.project_boundary", "ps.scenario_name"], "columns": ["702523", "project_name", "project_boundary", "project_scenario", "scenario_name", "008797"], "functions": ["ST_SetSRID", "ST_Area", "ST_Intersects", "ST_MakePoint"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find project scenarios that contain a specific geographic point (Project: florence_heritage_area, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A2_project_at_location_var_111", "complexity_level": "A", "tags": ["cim_wizard", "point_in_polygon", "freq_critical", "cim_project", "freq_high", "freq_very_high", "realistic_params", "basic"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "zero_emission", "building_type": "residential", "hvac_type": "district_heating", "region": "Lazio", "province": "Bologna", "voltage_kv": 10, "srid": 4326, "buffer_distance": 2000, "min_area": 73, "max_area": 3937, "min_height": 6, "max_height": 76, "min_people": 3, "max_people": 19, "year": 2024, "census_id": 3443772, "lon": 12.954535, "lat": 45.06052, "limit": 100, "cluster_count": 5, "min_cluster_size": 3, "max_distance": 1000, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.734240"}
{"id": "cim_stage1_000988", "database_id": 1, "database_name": "cim_wizard", "question": "Find project scenarios that contain a specific geographic point (Project: bologna_energy_hub, Scenario: efficiency_max)", "question_tone": "CONDITIONAL", "sql_postgis": "SELECT ps.project_name, ps.scenario_name, ST_Area(ps.project_boundary) as project_area_sqm\nFROM cim_vector.project_scenario ps\nWHERE ST_Intersects(ps.project_boundary, ST_SetSRID(ST_MakePoint(17.404507, 44.018214), 4326));", "sql_spatialite": "SELECT ps.project_name, ps.scenario_name, Area(ps.project_boundary) as project_area_sqm\nFROM cim_vector.project_scenario ps\nWHERE Intersects(ps.project_boundary, SetSRID(MakePoint(17.404507, 44.018214), 4326));", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["ps", "cim_vector", "17", "44"], "tables": ["ps.project_name", "cim_vector.project_scenario", "ps.project_boundary", "17.404507", "44.018214", "ps.scenario_name"], "columns": ["404507", "project_name", "project_boundary", "project_scenario", "scenario_name", "018214"], "geometry_columns": [], "primary_schema": "ps", "table_count": 6, "schema_count": 4}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_SETSRID", "ST_MAKEPOINT"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": ["ST_SETSRID"], "accessors": [], "constructors": ["ST_MAKEPOINT"]}, "evidence": {"database": "cim_wizard", "schemas": ["ps", "cim_vector", "17", "44"], "tables": ["ps.project_name", "cim_vector.project_scenario", "ps.project_boundary", "17.404507", "44.018214", "ps.scenario_name"], "columns": ["404507", "project_name", "project_boundary", "project_scenario", "scenario_name", "018214"], "functions": ["ST_SetSRID", "ST_Area", "ST_Intersects", "ST_MakePoint"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find project scenarios that contain a specific geographic point (Project: bologna_energy_hub, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A2_project_at_location_var_165", "complexity_level": "A", "tags": ["cim_wizard", "point_in_polygon", "freq_critical", "cim_project", "freq_high", "freq_very_high", "realistic_params", "basic"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "baseline", "building_type": "industrial", "hvac_type": "heat_pump", "region": "Lazio", "province": "Bologna", "voltage_kv": 132, "srid": 32632, "buffer_distance": 500, "min_area": 144, "max_area": 3022, "min_height": 10, "max_height": 30, "min_people": 1, "max_people": 17, "year": 1974, "census_id": 3841886, "lon": 12.538973, "lat": 43.650299, "limit": 100, "cluster_count": 10, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 10, "min_points": 5, "min_areas": 5, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.737393"}
{"id": "cim_stage1_001037", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: bologna_energy_hub, Scenario: efficiency_max)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Milano' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 3\nORDER BY avg_diversity_index DESC;", "sql_spatialite": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Milano' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 3\nORDER BY avg_diversity_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "geometry_columns": [], "primary_schema": "1", "table_count": 16, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: bologna_energy_hub, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B4_foreign_population_diversity_var_14", "complexity_level": "B", "tags": ["foreign_population", "continental_analysis", "cim_wizard", "realistic_params", "diversity", "multiculturalism", "cim_census"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "renewable_2030", "building_type": "public", "hvac_type": "hybrid", "region": "Lombardia", "province": "Torino", "voltage_kv": 10, "srid": 32632, "buffer_distance": 100, "min_area": 69, "max_area": 4927, "min_height": 3, "max_height": 60, "min_people": 4, "max_people": 11, "year": 2003, "census_id": 9852927, "lon": 8.654326, "lat": 46.973194, "limit": 50, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 10, "min_points": 8, "min_areas": 3, "cluster_distance": 5000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.741499"}
{"id": "cim_stage1_001078", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: rome_green_quarter, Scenario: renewable_2030)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Torino' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 5\nORDER BY avg_diversity_index DESC;", "sql_spatialite": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Torino' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 5\nORDER BY avg_diversity_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "geometry_columns": [], "primary_schema": "1", "table_count": 16, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: rome_green_quarter, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B4_foreign_population_diversity_var_55", "complexity_level": "B", "tags": ["foreign_population", "continental_analysis", "cim_wizard", "realistic_params", "diversity", "multiculturalism", "cim_census"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "zero_emission", "building_type": "mixed_use", "hvac_type": "heat_pump", "region": "Emilia-Romagna", "province": "Milano", "voltage_kv": 400, "srid": 32632, "buffer_distance": 1000, "min_area": 115, "max_area": 1292, "min_height": 6, "max_height": 20, "min_people": 2, "max_people": 18, "year": 2024, "census_id": 3631260, "lon": 12.825407, "lat": 39.233827, "limit": 10, "cluster_count": 5, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 20, "min_points": 8, "min_areas": 3, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.746569"}
{"id": "cim_stage1_001085", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: florence_heritage_area, Scenario: baseline)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Torino' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 10\nORDER BY avg_diversity_index DESC;", "sql_spatialite": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Torino' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 10\nORDER BY avg_diversity_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "geometry_columns": [], "primary_schema": "1", "table_count": 16, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: florence_heritage_area, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B4_foreign_population_diversity_var_62", "complexity_level": "B", "tags": ["foreign_population", "continental_analysis", "cim_wizard", "realistic_params", "diversity", "multiculturalism", "cim_census"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "grid_modernization", "building_type": "mixed_use", "hvac_type": "electric", "region": "Lombardia", "province": "Bologna", "voltage_kv": 0.4, "srid": 32633, "buffer_distance": 1000, "min_area": 114, "max_area": 2366, "min_height": 3, "max_height": 54, "min_people": 5, "max_people": 7, "year": 1976, "census_id": 4229510, "lon": 17.012733, "lat": 38.878319, "limit": 25, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 10, "min_points": 3, "min_areas": 10, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.747403"}
{"id": "cim_stage1_001089", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: milan_smart_district, Scenario: zero_emission)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Firenze' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 3\nORDER BY avg_diversity_index DESC;", "sql_spatialite": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Firenze' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 3\nORDER BY avg_diversity_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "geometry_columns": [], "primary_schema": "1", "table_count": 16, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: milan_smart_district, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B4_foreign_population_diversity_var_66", "complexity_level": "B", "tags": ["foreign_population", "continental_analysis", "cim_wizard", "realistic_params", "diversity", "multiculturalism", "cim_census"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "grid_modernization", "building_type": "residential", "hvac_type": "electric", "region": "Emilia-Romagna", "province": "Torino", "voltage_kv": 0.4, "srid": 3857, "buffer_distance": 1000, "min_area": 306, "max_area": 4401, "min_height": 9, "max_height": 49, "min_people": 3, "max_people": 12, "year": 1959, "census_id": 4865631, "lon": 14.56476, "lat": 36.204192, "limit": 100, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 1000, "min_buildings": 5, "min_points": 5, "min_areas": 3, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.747874"}
{"id": "cim_stage1_001202", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: turin_innovation_zone, Scenario: efficiency_max)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Milano' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 10\nORDER BY avg_diversity_index DESC;", "sql_spatialite": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Milano' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 10\nORDER BY avg_diversity_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "geometry_columns": [], "primary_schema": "1", "table_count": 16, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: turin_innovation_zone, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B4_foreign_population_diversity_var_179", "complexity_level": "B", "tags": ["foreign_population", "continental_analysis", "cim_wizard", "realistic_params", "diversity", "multiculturalism", "cim_census"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "commercial", "hvac_type": "district_heating", "region": "Piemonte", "province": "Milano", "voltage_kv": 220, "srid": 3857, "buffer_distance": 500, "min_area": 138, "max_area": 4012, "min_height": 5, "max_height": 65, "min_people": 2, "max_people": 11, "year": 2009, "census_id": 5897531, "lon": 13.146312, "lat": 46.625043, "limit": 100, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 20, "min_points": 8, "min_areas": 5, "cluster_distance": 5000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.780910"}
{"id": "cim_stage1_001215", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: milan_smart_district, Scenario: grid_modernization)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Bologna' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 5\nORDER BY avg_diversity_index DESC;", "sql_spatialite": "WITH foreign_demographics AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as total_population,\n         c.ST1 as total_foreigners,\n         c.ST9 as european_foreigners,\n         c.ST10 as african_foreigners,\n         c.ST11 as american_foreigners,\n         c.ST12 as asian_foreigners,\n         c.ST13 as oceania_foreigners,\n         c.ST14 as stateless_persons\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Bologna' AND c.ST1 > 0\n),\ndiversity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, total_foreigners,\n         ROUND((total_foreigners::float / NULLIF(total_population, 0)) * 100, 1) as foreign_percentage,\n         ROUND((european_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as european_pct,\n         ROUND((african_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as african_pct,\n         ROUND((asian_foreigners::float / NULLIF(total_foreigners, 0)) * 100, 1) as asian_pct,\n         CASE \n           WHEN european_foreigners + african_foreigners + american_foreigners + asian_foreigners > 0 THEN\n             ROUND(1.0 - (POWER(european_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(african_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(american_foreigners::float / NULLIF(total_foreigners, 0), 2) + \n                         POWER(asian_foreigners::float / NULLIF(total_foreigners, 0), 2)), 3)\n           ELSE 0\n         END as diversity_index\n  FROM foreign_demographics\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(foreign_percentage), 1) as avg_foreign_pct,\n       ROUND(AVG(diversity_index), 3) as avg_diversity_index,\n       ROUND(AVG(european_pct), 1) as avg_european_pct,\n       ROUND(AVG(african_pct), 1) as avg_african_pct,\n       ROUND(AVG(asian_pct), 1) as avg_asian_pct,\n       SUM(total_foreigners) as total_foreign_population\nFROM diversity_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 5\nORDER BY avg_diversity_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "geometry_columns": [], "primary_schema": "1", "table_count": 16, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["1", "cim_census", "c"], "tables": ["c.ST11", "c.ST14", "c.ST12", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.ST1", "c.ST9", "c.ST10", "foreign_demographics", "diversity_indicators", "c.COMUNE", "c.P1", "c.ST13", "1.0"], "columns": ["ST1", "SEZ2011", "ST14", "ST10", "P1", "ST11", "REGIONE", "census_geo", "PROVINCIA", "0", "ST12", "COMUNE", "ST13", "ST9"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis of foreign population diversity with continental origin distribution and diversity indices (Project: milan_smart_district, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B4_foreign_population_diversity_var_192", "complexity_level": "B", "tags": ["foreign_population", "continental_analysis", "cim_wizard", "realistic_params", "diversity", "multiculturalism", "cim_census"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "zero_emission", "building_type": "residential", "hvac_type": "gas_boiler", "region": "Lazio", "province": "Milano", "voltage_kv": 220, "srid": 4326, "buffer_distance": 1000, "min_area": 120, "max_area": 1984, "min_height": 6, "max_height": 99, "min_people": 5, "max_people": 6, "year": 1954, "census_id": 3126660, "lon": 9.344535, "lat": 43.2932, "limit": 25, "cluster_count": 3, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.782474"}
{"id": "cim_stage1_001276", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced spatial clustering analysis across building properties with functional categorization and demographic insights (Project: milan_smart_district, Scenario: grid_modernization)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH project_buildings AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         ST_Centroid(b.building_geometry) as building_center,\n         CASE \n           WHEN bp.type = 'residential' THEN 'housing'\n           WHEN bp.type IN ('commercial', 'industrial') THEN 'economic'\n           ELSE 'other'\n         END as functional_category\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'grid_modernization'\n),\nspatial_clustering AS (\n  SELECT building_id, type, height, area, n_people, functional_category,\n         ST_ClusterKMeans(building_center, 10) OVER () as cluster_id\n  FROM project_buildings\n),\ncluster_analysis AS (\n  SELECT cluster_id, functional_category,\n         COUNT(*) as building_count,\n         ROUND(AVG(height), 1) as avg_height,\n         ROUND(SUM(area), 0) as total_area,\n         SUM(n_people) as total_residents,\n         ROUND(AVG(area), 0) as avg_building_size\n  FROM spatial_clustering\n  GROUP BY cluster_id, functional_category\n  HAVING COUNT(*) >= 10\n)\nSELECT cluster_id, functional_category, building_count, avg_height,\n       total_area, total_residents, avg_building_size,\n       ROUND(total_residents::float / NULLIF(building_count, 0), 1) as people_per_building,\n       ROUND(total_area::float / NULLIF(building_count, 0), 0) as area_per_building\nFROM cluster_analysis\nORDER BY cluster_id, functional_category;", "sql_spatialite": "WITH project_buildings AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         Centroid(b.building_geometry) as building_center,\n         CASE \n           WHEN bp.type = 'residential' THEN 'housing'\n           WHEN bp.type IN ('commercial', 'industrial') THEN 'economic'\n           ELSE 'other'\n         END as functional_category\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'grid_modernization'\n),\nspatial_clustering AS (\n  SELECT building_id, type, height, area, n_people, functional_category,\n         ST_ClusterKMeans(building_center, 10) OVER () as cluster_id\n  FROM project_buildings\n),\ncluster_analysis AS (\n  SELECT cluster_id, functional_category,\n         COUNT(*) as building_count,\n         ROUND(AVG(height), 1) as avg_height,\n         ROUND(SUM(area), 0) as total_area,\n         SUM(n_people) as total_residents,\n         ROUND(AVG(area), 0) as avg_building_size\n  FROM spatial_clustering\n  GROUP BY cluster_id, functional_category\n  HAVING COUNT(*) >= 10\n)\nSELECT cluster_id, functional_category, building_count, avg_height,\n       total_area, total_residents, avg_building_size,\n       ROUND(total_residents::float / NULLIF(building_count, 0), 1) as people_per_building,\n       ROUND(total_area::float / NULLIF(building_count, 0), 0) as area_per_building\nFROM cluster_analysis\nORDER BY cluster_id, functional_category;", "sql_type": "SPATIAL_CLUSTERING", "sql_taxonomy": {"operation_type": "SPATIAL_CLUSTERING", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "project_buildings", "bp.building_id", "cluster_analysis", "bp.type", "spatial_clustering"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 14, "schema_count": 3}, "spatial_functions": ["ST_CENTROID", "ST_CLUSTERKMEANS"], "spatial_function_count": 2, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": ["ST_CLUSTERKMEANS"], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "project_buildings", "bp.building_id", "cluster_analysis", "bp.type", "spatial_clustering"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "functions": ["ST_ClusterKMeans", "ST_Centroid"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced spatial clustering analysis across building properties with functional categorization and demographic insights (Project: milan_smart_district, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C6_multi_schema_clustering_var_53", "complexity_level": "C", "tags": ["cross_table", "cim_building", "multi_schema", "clustering", "cim_wizard", "freq_low", "freq_high", "demographics", "functional_analysis", "realistic_params"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "efficiency_max", "building_type": "mixed_use", "hvac_type": "gas_boiler", "region": "Lombardia", "province": "Torino", "voltage_kv": 400, "srid": 3857, "buffer_distance": 2000, "min_area": 134, "max_area": 4519, "min_height": 10, "max_height": 39, "min_people": 2, "max_people": 9, "year": 1986, "census_id": 2972804, "lon": 7.996071, "lat": 38.487322, "limit": 25, "cluster_count": 5, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 5, "min_points": 3, "min_areas": 10, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.788335"}
{"id": "cim_stage1_001291", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced spatial clustering analysis across building properties with functional categorization and demographic insights (Project: bologna_energy_hub, Scenario: efficiency_max)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH project_buildings AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         ST_Centroid(b.building_geometry) as building_center,\n         CASE \n           WHEN bp.type = 'residential' THEN 'housing'\n           WHEN bp.type IN ('commercial', 'industrial') THEN 'economic'\n           ELSE 'other'\n         END as functional_category\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'bologna_energy_hub' AND bp.scenario_id = 'efficiency_max'\n),\nspatial_clustering AS (\n  SELECT building_id, type, height, area, n_people, functional_category,\n         ST_ClusterKMeans(building_center, 3) OVER () as cluster_id\n  FROM project_buildings\n),\ncluster_analysis AS (\n  SELECT cluster_id, functional_category,\n         COUNT(*) as building_count,\n         ROUND(AVG(height), 1) as avg_height,\n         ROUND(SUM(area), 0) as total_area,\n         SUM(n_people) as total_residents,\n         ROUND(AVG(area), 0) as avg_building_size\n  FROM spatial_clustering\n  GROUP BY cluster_id, functional_category\n  HAVING COUNT(*) >= 10\n)\nSELECT cluster_id, functional_category, building_count, avg_height,\n       total_area, total_residents, avg_building_size,\n       ROUND(total_residents::float / NULLIF(building_count, 0), 1) as people_per_building,\n       ROUND(total_area::float / NULLIF(building_count, 0), 0) as area_per_building\nFROM cluster_analysis\nORDER BY cluster_id, functional_category;", "sql_spatialite": "WITH project_buildings AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         Centroid(b.building_geometry) as building_center,\n         CASE \n           WHEN bp.type = 'residential' THEN 'housing'\n           WHEN bp.type IN ('commercial', 'industrial') THEN 'economic'\n           ELSE 'other'\n         END as functional_category\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'bologna_energy_hub' AND bp.scenario_id = 'efficiency_max'\n),\nspatial_clustering AS (\n  SELECT building_id, type, height, area, n_people, functional_category,\n         ST_ClusterKMeans(building_center, 3) OVER () as cluster_id\n  FROM project_buildings\n),\ncluster_analysis AS (\n  SELECT cluster_id, functional_category,\n         COUNT(*) as building_count,\n         ROUND(AVG(height), 1) as avg_height,\n         ROUND(SUM(area), 0) as total_area,\n         SUM(n_people) as total_residents,\n         ROUND(AVG(area), 0) as avg_building_size\n  FROM spatial_clustering\n  GROUP BY cluster_id, functional_category\n  HAVING COUNT(*) >= 10\n)\nSELECT cluster_id, functional_category, building_count, avg_height,\n       total_area, total_residents, avg_building_size,\n       ROUND(total_residents::float / NULLIF(building_count, 0), 1) as people_per_building,\n       ROUND(total_area::float / NULLIF(building_count, 0), 0) as area_per_building\nFROM cluster_analysis\nORDER BY cluster_id, functional_category;", "sql_type": "SPATIAL_CLUSTERING", "sql_taxonomy": {"operation_type": "SPATIAL_CLUSTERING", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "project_buildings", "bp.building_id", "cluster_analysis", "bp.type", "spatial_clustering"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 14, "schema_count": 3}, "spatial_functions": ["ST_CENTROID", "ST_CLUSTERKMEANS"], "spatial_function_count": 2, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": ["ST_CLUSTERKMEANS"], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "project_buildings", "bp.building_id", "cluster_analysis", "bp.type", "spatial_clustering"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "functions": ["ST_ClusterKMeans", "ST_Centroid"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced spatial clustering analysis across building properties with functional categorization and demographic insights (Project: bologna_energy_hub, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C6_multi_schema_clustering_var_68", "complexity_level": "C", "tags": ["cross_table", "cim_building", "multi_schema", "clustering", "cim_wizard", "freq_low", "freq_high", "demographics", "functional_analysis", "realistic_params"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "industrial", "hvac_type": "heat_pump", "region": "Lazio", "province": "Bologna", "voltage_kv": 220, "srid": 32632, "buffer_distance": 1000, "min_area": 244, "max_area": 4003, "min_height": 6, "max_height": 17, "min_people": 5, "max_people": 10, "year": 1987, "census_id": 6515102, "lon": 7.766001, "lat": 38.858377, "limit": 10, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 20, "min_points": 3, "min_areas": 10, "cluster_distance": 5000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.789706"}
{"id": "cim_stage1_001394", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced spatial clustering analysis across building properties with functional categorization and demographic insights (Project: rome_green_quarter, Scenario: renewable_2030)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH project_buildings AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         ST_Centroid(b.building_geometry) as building_center,\n         CASE \n           WHEN bp.type = 'residential' THEN 'housing'\n           WHEN bp.type IN ('commercial', 'industrial') THEN 'economic'\n           ELSE 'other'\n         END as functional_category\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'rome_green_quarter' AND bp.scenario_id = 'renewable_2030'\n),\nspatial_clustering AS (\n  SELECT building_id, type, height, area, n_people, functional_category,\n         ST_ClusterKMeans(building_center, 10) OVER () as cluster_id\n  FROM project_buildings\n),\ncluster_analysis AS (\n  SELECT cluster_id, functional_category,\n         COUNT(*) as building_count,\n         ROUND(AVG(height), 1) as avg_height,\n         ROUND(SUM(area), 0) as total_area,\n         SUM(n_people) as total_residents,\n         ROUND(AVG(area), 0) as avg_building_size\n  FROM spatial_clustering\n  GROUP BY cluster_id, functional_category\n  HAVING COUNT(*) >= 3\n)\nSELECT cluster_id, functional_category, building_count, avg_height,\n       total_area, total_residents, avg_building_size,\n       ROUND(total_residents::float / NULLIF(building_count, 0), 1) as people_per_building,\n       ROUND(total_area::float / NULLIF(building_count, 0), 0) as area_per_building\nFROM cluster_analysis\nORDER BY cluster_id, functional_category;", "sql_spatialite": "WITH project_buildings AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         Centroid(b.building_geometry) as building_center,\n         CASE \n           WHEN bp.type = 'residential' THEN 'housing'\n           WHEN bp.type IN ('commercial', 'industrial') THEN 'economic'\n           ELSE 'other'\n         END as functional_category\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'rome_green_quarter' AND bp.scenario_id = 'renewable_2030'\n),\nspatial_clustering AS (\n  SELECT building_id, type, height, area, n_people, functional_category,\n         ST_ClusterKMeans(building_center, 10) OVER () as cluster_id\n  FROM project_buildings\n),\ncluster_analysis AS (\n  SELECT cluster_id, functional_category,\n         COUNT(*) as building_count,\n         ROUND(AVG(height), 1) as avg_height,\n         ROUND(SUM(area), 0) as total_area,\n         SUM(n_people) as total_residents,\n         ROUND(AVG(area), 0) as avg_building_size\n  FROM spatial_clustering\n  GROUP BY cluster_id, functional_category\n  HAVING COUNT(*) >= 3\n)\nSELECT cluster_id, functional_category, building_count, avg_height,\n       total_area, total_residents, avg_building_size,\n       ROUND(total_residents::float / NULLIF(building_count, 0), 1) as people_per_building,\n       ROUND(total_area::float / NULLIF(building_count, 0), 0) as area_per_building\nFROM cluster_analysis\nORDER BY cluster_id, functional_category;", "sql_type": "SPATIAL_CLUSTERING", "sql_taxonomy": {"operation_type": "SPATIAL_CLUSTERING", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "project_buildings", "bp.building_id", "cluster_analysis", "bp.type", "spatial_clustering"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 14, "schema_count": 3}, "spatial_functions": ["ST_CENTROID", "ST_CLUSTERKMEANS"], "spatial_function_count": 2, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": ["ST_CLUSTERKMEANS"], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "project_buildings", "bp.building_id", "cluster_analysis", "bp.type", "spatial_clustering"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "functions": ["ST_ClusterKMeans", "ST_Centroid"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced spatial clustering analysis across building properties with functional categorization and demographic insights (Project: rome_green_quarter, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C6_multi_schema_clustering_var_171", "complexity_level": "C", "tags": ["cross_table", "cim_building", "multi_schema", "clustering", "cim_wizard", "freq_low", "freq_high", "demographics", "functional_analysis", "realistic_params"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "renewable_2030", "building_type": "mixed_use", "hvac_type": "heat_pump", "region": "Toscana", "province": "Firenze", "voltage_kv": 132, "srid": 3857, "buffer_distance": 2000, "min_area": 252, "max_area": 1136, "min_height": 3, "max_height": 61, "min_people": 1, "max_people": 10, "year": 2000, "census_id": 9190722, "lon": 17.894924, "lat": 40.777943, "limit": 100, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 20, "min_points": 3, "min_areas": 10, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.799331"}
{"id": "cim_stage1_001447", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze building proximity to electrical grid infrastructure by voltage level (Project: milan_smart_district, Scenario: baseline)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH grid_network AS (\n  SELECT gl.line_id, gl.from_bus, gl.to_bus, gl.length_km, gl.max_loading_percent,\n         ST_StartPoint(gl.geometry) as start_point,\n         ST_EndPoint(gl.geometry) as end_point,\n         gl.geometry as line_geom\n  FROM cim_vector.grid_line gl\n  WHERE gl.project_id = 'milan_smart_district' AND gl.scenario_id = 'baseline'\n),\nbus_connectivity AS (\n  SELECT gb.bus_id, gb.voltage_kv, gb.geometry as bus_geom,\n         COUNT(gn.line_id) as connected_lines\n  FROM cim_vector.grid_bus gb\n  LEFT JOIN grid_network gn ON gb.bus_id = gn.from_bus OR gb.bus_id = gn.to_bus\n  WHERE gb.project_id = 'milan_smart_district' AND gb.scenario_id = 'baseline'\n  GROUP BY gb.bus_id, gb.voltage_kv, gb.geometry\n),\nbuilding_grid_proximity AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.area,\n         bp.n_people,\n         MIN(ST_Distance(b.building_geometry, bc.bus_geom)) as min_distance_to_bus,\n         (SELECT voltage_kv FROM bus_connectivity \n          WHERE ST_DWithin(bus_geom, b.building_geometry, 1000) \n          ORDER BY ST_Distance(bus_geom, b.building_geometry) \n          LIMIT 1) as nearest_voltage_level\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  CROSS JOIN bus_connectivity bc\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'baseline'\n  GROUP BY b.building_id, bp.type, bp.area, bp.n_people, b.building_geometry\n)\nSELECT type as building_type,\n       nearest_voltage_level,\n       COUNT(*) as building_count,\n       AVG(area) as avg_area,\n       SUM(n_people) as total_population,\n       AVG(min_distance_to_bus) as avg_distance_to_grid\nFROM building_grid_proximity\nWHERE nearest_voltage_level IS NOT NULL\nGROUP BY type, nearest_voltage_level\nORDER BY nearest_voltage_level DESC, building_count DESC;", "sql_spatialite": "WITH grid_network AS (\n  SELECT gl.line_id, gl.from_bus, gl.to_bus, gl.length_km, gl.max_loading_percent,\n         ST_StartPoint(gl.geometry) as start_point,\n         ST_EndPoint(gl.geometry) as end_point,\n         gl.geometry as line_geom\n  FROM cim_vector.grid_line gl\n  WHERE gl.project_id = 'milan_smart_district' AND gl.scenario_id = 'baseline'\n),\nbus_connectivity AS (\n  SELECT gb.bus_id, gb.voltage_kv, gb.geometry as bus_geom,\n         COUNT(gn.line_id) as connected_lines\n  FROM cim_vector.grid_bus gb\n  LEFT JOIN grid_network gn ON gb.bus_id = gn.from_bus OR gb.bus_id = gn.to_bus\n  WHERE gb.project_id = 'milan_smart_district' AND gb.scenario_id = 'baseline'\n  GROUP BY gb.bus_id, gb.voltage_kv, gb.geometry\n),\nbuilding_grid_proximity AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.area,\n         bp.n_people,\n         MIN(Distance(b.building_geometry, bc.bus_geom)) as min_distance_to_bus,\n         (SELECT voltage_kv FROM bus_connectivity \n          WHERE Distance(bus_geom, b.building_geometry, 1000) \n          ORDER BY Distance(bus_geom, b.building_geometry) \n          LIMIT 1) as nearest_voltage_level\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  CROSS JOIN bus_connectivity bc\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'baseline'\n  GROUP BY b.building_id, bp.type, bp.area, bp.n_people, b.building_geometry\n)\nSELECT type as building_type,\n       nearest_voltage_level,\n       COUNT(*) as building_count,\n       AVG(area) as avg_area,\n       SUM(n_people) as total_population,\n       AVG(min_distance_to_bus) as avg_distance_to_grid\nFROM building_grid_proximity\nWHERE nearest_voltage_level IS NOT NULL\nGROUP BY type, nearest_voltage_level\nORDER BY nearest_voltage_level DESC, building_count DESC;", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": true, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "HARD", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "HARD", "complexity_score": 5}, "difficulty_level": "HARD", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["gb", "bc", "gl", "bp", "gn", "cim_vector", "b"], "tables": ["gn.to_bus", "cim_vector.building", "gn.from_bus", "cim_vector.grid_line", "gn.line_id", "bp.scenario_id", "bp.n_people", "gl.to_bus", "bp.type", "gb.geometry", "gb.voltage_kv", "gl.from_bus", "gb.scenario_id", "b.building_geometry", "gl.max_loading_percent", "bp.project_id", "grid_network", "gb.bus_id", "gl.length_km", "gl.project_id", "cim_vector.grid_bus", "gb.project_id", "bp.building_id", "gl.geometry", "bc.bus_geom", "cim_vector.building_properties", "bp.area", "gl.line_id", "b.building_id", "gl.scenario_id", "bus_connectivity", "building_grid_proximity"], "columns": ["type", "bus_geom", "length_km", "bus_id", "n_people", "building_geometry", "area", "building", "geometry", "building_properties", "to_bus", "grid_line", "voltage_kv", "line_id", "from_bus", "max_loading_percent", "grid_bus"], "geometry_columns": ["gb.geometry", "b.building_geometry", "gl.geometry", "bc.bus_geom", "bus_geom", "building_geometry", "geometry"], "primary_schema": "gb", "table_count": 32, "schema_count": 7}, "spatial_functions": ["ST_DWITHIN", "ST_STARTPOINT", "ST_ENDPOINT", "ST_VOLTAGE_LEVEL", "ST_DISTANCE"], "spatial_function_count": 5, "spatial_function_categories": {"predicates": ["ST_DWITHIN"], "measurements": ["ST_DISTANCE"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_STARTPOINT", "ST_ENDPOINT"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["gb", "bc", "gl", "bp", "gn", "cim_vector", "b"], "tables": ["gn.to_bus", "cim_vector.building", "gn.from_bus", "cim_vector.grid_line", "gn.line_id", "bp.scenario_id", "bp.n_people", "gl.to_bus", "bp.type", "gb.geometry", "gb.voltage_kv", "gl.from_bus", "gb.scenario_id", "b.building_geometry", "gl.max_loading_percent", "bp.project_id", "grid_network", "gb.bus_id", "gl.length_km", "gl.project_id", "cim_vector.grid_bus", "gb.project_id", "bp.building_id", "gl.geometry", "bc.bus_geom", "cim_vector.building_properties", "bp.area", "gl.line_id", "b.building_id", "gl.scenario_id", "bus_connectivity", "building_grid_proximity"], "columns": ["type", "bus_geom", "length_km", "bus_id", "n_people", "building_geometry", "area", "building", "geometry", "building_properties", "to_bus", "grid_line", "voltage_kv", "line_id", "from_bus", "max_loading_percent", "grid_bus"], "functions": ["ST_EndPoint", "ST_DWithin", "ST_StartPoint", "ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze building proximity to electrical grid infrastructure by voltage level (Project: milan_smart_district, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C2_building_grid_proximity_analysis_var_24", "complexity_level": "C", "tags": ["proximity", "cim_building", "cim_grid", "freq_medium", "cim_wizard", "freq_critical", "network_analysis", "freq_high", "realistic_params", "advanced"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "baseline", "building_type": "residential", "hvac_type": "district_heating", "region": "Lazio", "province": "Firenze", "voltage_kv": 10, "srid": 4326, "buffer_distance": 1000, "min_area": 223, "max_area": 4362, "min_height": 9, "max_height": 38, "min_people": 3, "max_people": 17, "year": 1969, "census_id": 7644739, "lon": 13.600111, "lat": 45.263049, "limit": 50, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 20, "min_points": 3, "min_areas": 5, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.805073"}
{"id": "cim_stage1_001450", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze building proximity to electrical grid infrastructure by voltage level (Project: rome_green_quarter, Scenario: renewable_2030)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH grid_network AS (\n  SELECT gl.line_id, gl.from_bus, gl.to_bus, gl.length_km, gl.max_loading_percent,\n         ST_StartPoint(gl.geometry) as start_point,\n         ST_EndPoint(gl.geometry) as end_point,\n         gl.geometry as line_geom\n  FROM cim_vector.grid_line gl\n  WHERE gl.project_id = 'rome_green_quarter' AND gl.scenario_id = 'renewable_2030'\n),\nbus_connectivity AS (\n  SELECT gb.bus_id, gb.voltage_kv, gb.geometry as bus_geom,\n         COUNT(gn.line_id) as connected_lines\n  FROM cim_vector.grid_bus gb\n  LEFT JOIN grid_network gn ON gb.bus_id = gn.from_bus OR gb.bus_id = gn.to_bus\n  WHERE gb.project_id = 'rome_green_quarter' AND gb.scenario_id = 'renewable_2030'\n  GROUP BY gb.bus_id, gb.voltage_kv, gb.geometry\n),\nbuilding_grid_proximity AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.area,\n         bp.n_people,\n         MIN(ST_Distance(b.building_geometry, bc.bus_geom)) as min_distance_to_bus,\n         (SELECT voltage_kv FROM bus_connectivity \n          WHERE ST_DWithin(bus_geom, b.building_geometry, 1000) \n          ORDER BY ST_Distance(bus_geom, b.building_geometry) \n          LIMIT 1) as nearest_voltage_level\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  CROSS JOIN bus_connectivity bc\n  WHERE bp.project_id = 'rome_green_quarter' AND bp.scenario_id = 'renewable_2030'\n  GROUP BY b.building_id, bp.type, bp.area, bp.n_people, b.building_geometry\n)\nSELECT type as building_type,\n       nearest_voltage_level,\n       COUNT(*) as building_count,\n       AVG(area) as avg_area,\n       SUM(n_people) as total_population,\n       AVG(min_distance_to_bus) as avg_distance_to_grid\nFROM building_grid_proximity\nWHERE nearest_voltage_level IS NOT NULL\nGROUP BY type, nearest_voltage_level\nORDER BY nearest_voltage_level DESC, building_count DESC;", "sql_spatialite": "WITH grid_network AS (\n  SELECT gl.line_id, gl.from_bus, gl.to_bus, gl.length_km, gl.max_loading_percent,\n         ST_StartPoint(gl.geometry) as start_point,\n         ST_EndPoint(gl.geometry) as end_point,\n         gl.geometry as line_geom\n  FROM cim_vector.grid_line gl\n  WHERE gl.project_id = 'rome_green_quarter' AND gl.scenario_id = 'renewable_2030'\n),\nbus_connectivity AS (\n  SELECT gb.bus_id, gb.voltage_kv, gb.geometry as bus_geom,\n         COUNT(gn.line_id) as connected_lines\n  FROM cim_vector.grid_bus gb\n  LEFT JOIN grid_network gn ON gb.bus_id = gn.from_bus OR gb.bus_id = gn.to_bus\n  WHERE gb.project_id = 'rome_green_quarter' AND gb.scenario_id = 'renewable_2030'\n  GROUP BY gb.bus_id, gb.voltage_kv, gb.geometry\n),\nbuilding_grid_proximity AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.area,\n         bp.n_people,\n         MIN(Distance(b.building_geometry, bc.bus_geom)) as min_distance_to_bus,\n         (SELECT voltage_kv FROM bus_connectivity \n          WHERE Distance(bus_geom, b.building_geometry, 1000) \n          ORDER BY Distance(bus_geom, b.building_geometry) \n          LIMIT 1) as nearest_voltage_level\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  CROSS JOIN bus_connectivity bc\n  WHERE bp.project_id = 'rome_green_quarter' AND bp.scenario_id = 'renewable_2030'\n  GROUP BY b.building_id, bp.type, bp.area, bp.n_people, b.building_geometry\n)\nSELECT type as building_type,\n       nearest_voltage_level,\n       COUNT(*) as building_count,\n       AVG(area) as avg_area,\n       SUM(n_people) as total_population,\n       AVG(min_distance_to_bus) as avg_distance_to_grid\nFROM building_grid_proximity\nWHERE nearest_voltage_level IS NOT NULL\nGROUP BY type, nearest_voltage_level\nORDER BY nearest_voltage_level DESC, building_count DESC;", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": true, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "HARD", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "HARD", "complexity_score": 5}, "difficulty_level": "HARD", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["gb", "bc", "gl", "bp", "gn", "cim_vector", "b"], "tables": ["gn.to_bus", "cim_vector.building", "gn.from_bus", "cim_vector.grid_line", "gn.line_id", "bp.scenario_id", "bp.n_people", "gl.to_bus", "bp.type", "gb.geometry", "gb.voltage_kv", "gl.from_bus", "gb.scenario_id", "b.building_geometry", "gl.max_loading_percent", "bp.project_id", "grid_network", "gb.bus_id", "gl.length_km", "gl.project_id", "cim_vector.grid_bus", "gb.project_id", "bp.building_id", "gl.geometry", "bc.bus_geom", "cim_vector.building_properties", "bp.area", "gl.line_id", "b.building_id", "gl.scenario_id", "bus_connectivity", "building_grid_proximity"], "columns": ["type", "bus_geom", "length_km", "bus_id", "n_people", "building_geometry", "area", "building", "geometry", "building_properties", "to_bus", "grid_line", "voltage_kv", "line_id", "from_bus", "max_loading_percent", "grid_bus"], "geometry_columns": ["gb.geometry", "b.building_geometry", "gl.geometry", "bc.bus_geom", "bus_geom", "building_geometry", "geometry"], "primary_schema": "gb", "table_count": 32, "schema_count": 7}, "spatial_functions": ["ST_DWITHIN", "ST_STARTPOINT", "ST_ENDPOINT", "ST_VOLTAGE_LEVEL", "ST_DISTANCE"], "spatial_function_count": 5, "spatial_function_categories": {"predicates": ["ST_DWITHIN"], "measurements": ["ST_DISTANCE"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_STARTPOINT", "ST_ENDPOINT"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["gb", "bc", "gl", "bp", "gn", "cim_vector", "b"], "tables": ["gn.to_bus", "cim_vector.building", "gn.from_bus", "cim_vector.grid_line", "gn.line_id", "bp.scenario_id", "bp.n_people", "gl.to_bus", "bp.type", "gb.geometry", "gb.voltage_kv", "gl.from_bus", "gb.scenario_id", "b.building_geometry", "gl.max_loading_percent", "bp.project_id", "grid_network", "gb.bus_id", "gl.length_km", "gl.project_id", "cim_vector.grid_bus", "gb.project_id", "bp.building_id", "gl.geometry", "bc.bus_geom", "cim_vector.building_properties", "bp.area", "gl.line_id", "b.building_id", "gl.scenario_id", "bus_connectivity", "building_grid_proximity"], "columns": ["type", "bus_geom", "length_km", "bus_id", "n_people", "building_geometry", "area", "building", "geometry", "building_properties", "to_bus", "grid_line", "voltage_kv", "line_id", "from_bus", "max_loading_percent", "grid_bus"], "functions": ["ST_EndPoint", "ST_DWithin", "ST_StartPoint", "ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze building proximity to electrical grid infrastructure by voltage level (Project: rome_green_quarter, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C2_building_grid_proximity_analysis_var_27", "complexity_level": "C", "tags": ["proximity", "cim_building", "cim_grid", "freq_medium", "cim_wizard", "freq_critical", "network_analysis", "freq_high", "realistic_params", "advanced"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "baseline", "building_type": "industrial", "hvac_type": "electric", "region": "Emilia-Romagna", "province": "Firenze", "voltage_kv": 0.4, "srid": 3857, "buffer_distance": 1000, "min_area": 51, "max_area": 4574, "min_height": 6, "max_height": 51, "min_people": 2, "max_people": 14, "year": 2021, "census_id": 3575275, "lon": 14.673799, "lat": 41.458717, "limit": 10, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 500, "min_buildings": 10, "min_points": 3, "min_areas": 5, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.805417"}
{"id": "cim_stage1_001521", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze building proximity to electrical grid infrastructure by voltage level (Project: rome_green_quarter, Scenario: zero_emission)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH grid_network AS (\n  SELECT gl.line_id, gl.from_bus, gl.to_bus, gl.length_km, gl.max_loading_percent,\n         ST_StartPoint(gl.geometry) as start_point,\n         ST_EndPoint(gl.geometry) as end_point,\n         gl.geometry as line_geom\n  FROM cim_vector.grid_line gl\n  WHERE gl.project_id = 'rome_green_quarter' AND gl.scenario_id = 'zero_emission'\n),\nbus_connectivity AS (\n  SELECT gb.bus_id, gb.voltage_kv, gb.geometry as bus_geom,\n         COUNT(gn.line_id) as connected_lines\n  FROM cim_vector.grid_bus gb\n  LEFT JOIN grid_network gn ON gb.bus_id = gn.from_bus OR gb.bus_id = gn.to_bus\n  WHERE gb.project_id = 'rome_green_quarter' AND gb.scenario_id = 'zero_emission'\n  GROUP BY gb.bus_id, gb.voltage_kv, gb.geometry\n),\nbuilding_grid_proximity AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.area,\n         bp.n_people,\n         MIN(ST_Distance(b.building_geometry, bc.bus_geom)) as min_distance_to_bus,\n         (SELECT voltage_kv FROM bus_connectivity \n          WHERE ST_DWithin(bus_geom, b.building_geometry, 1000) \n          ORDER BY ST_Distance(bus_geom, b.building_geometry) \n          LIMIT 1) as nearest_voltage_level\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  CROSS JOIN bus_connectivity bc\n  WHERE bp.project_id = 'rome_green_quarter' AND bp.scenario_id = 'zero_emission'\n  GROUP BY b.building_id, bp.type, bp.area, bp.n_people, b.building_geometry\n)\nSELECT type as building_type,\n       nearest_voltage_level,\n       COUNT(*) as building_count,\n       AVG(area) as avg_area,\n       SUM(n_people) as total_population,\n       AVG(min_distance_to_bus) as avg_distance_to_grid\nFROM building_grid_proximity\nWHERE nearest_voltage_level IS NOT NULL\nGROUP BY type, nearest_voltage_level\nORDER BY nearest_voltage_level DESC, building_count DESC;", "sql_spatialite": "WITH grid_network AS (\n  SELECT gl.line_id, gl.from_bus, gl.to_bus, gl.length_km, gl.max_loading_percent,\n         ST_StartPoint(gl.geometry) as start_point,\n         ST_EndPoint(gl.geometry) as end_point,\n         gl.geometry as line_geom\n  FROM cim_vector.grid_line gl\n  WHERE gl.project_id = 'rome_green_quarter' AND gl.scenario_id = 'zero_emission'\n),\nbus_connectivity AS (\n  SELECT gb.bus_id, gb.voltage_kv, gb.geometry as bus_geom,\n         COUNT(gn.line_id) as connected_lines\n  FROM cim_vector.grid_bus gb\n  LEFT JOIN grid_network gn ON gb.bus_id = gn.from_bus OR gb.bus_id = gn.to_bus\n  WHERE gb.project_id = 'rome_green_quarter' AND gb.scenario_id = 'zero_emission'\n  GROUP BY gb.bus_id, gb.voltage_kv, gb.geometry\n),\nbuilding_grid_proximity AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.area,\n         bp.n_people,\n         MIN(Distance(b.building_geometry, bc.bus_geom)) as min_distance_to_bus,\n         (SELECT voltage_kv FROM bus_connectivity \n          WHERE Distance(bus_geom, b.building_geometry, 1000) \n          ORDER BY Distance(bus_geom, b.building_geometry) \n          LIMIT 1) as nearest_voltage_level\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  CROSS JOIN bus_connectivity bc\n  WHERE bp.project_id = 'rome_green_quarter' AND bp.scenario_id = 'zero_emission'\n  GROUP BY b.building_id, bp.type, bp.area, bp.n_people, b.building_geometry\n)\nSELECT type as building_type,\n       nearest_voltage_level,\n       COUNT(*) as building_count,\n       AVG(area) as avg_area,\n       SUM(n_people) as total_population,\n       AVG(min_distance_to_bus) as avg_distance_to_grid\nFROM building_grid_proximity\nWHERE nearest_voltage_level IS NOT NULL\nGROUP BY type, nearest_voltage_level\nORDER BY nearest_voltage_level DESC, building_count DESC;", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": true, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "HARD", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "HARD", "complexity_score": 5}, "difficulty_level": "HARD", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["gb", "bc", "gl", "bp", "gn", "cim_vector", "b"], "tables": ["gn.to_bus", "cim_vector.building", "gn.from_bus", "cim_vector.grid_line", "gn.line_id", "bp.scenario_id", "bp.n_people", "gl.to_bus", "bp.type", "gb.geometry", "gb.voltage_kv", "gl.from_bus", "gb.scenario_id", "b.building_geometry", "gl.max_loading_percent", "bp.project_id", "grid_network", "gb.bus_id", "gl.length_km", "gl.project_id", "cim_vector.grid_bus", "gb.project_id", "bp.building_id", "gl.geometry", "bc.bus_geom", "cim_vector.building_properties", "bp.area", "gl.line_id", "b.building_id", "gl.scenario_id", "bus_connectivity", "building_grid_proximity"], "columns": ["type", "bus_geom", "length_km", "bus_id", "n_people", "building_geometry", "area", "building", "geometry", "building_properties", "to_bus", "grid_line", "voltage_kv", "line_id", "from_bus", "max_loading_percent", "grid_bus"], "geometry_columns": ["gb.geometry", "b.building_geometry", "gl.geometry", "bc.bus_geom", "bus_geom", "building_geometry", "geometry"], "primary_schema": "gb", "table_count": 32, "schema_count": 7}, "spatial_functions": ["ST_DWITHIN", "ST_STARTPOINT", "ST_ENDPOINT", "ST_VOLTAGE_LEVEL", "ST_DISTANCE"], "spatial_function_count": 5, "spatial_function_categories": {"predicates": ["ST_DWITHIN"], "measurements": ["ST_DISTANCE"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_STARTPOINT", "ST_ENDPOINT"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["gb", "bc", "gl", "bp", "gn", "cim_vector", "b"], "tables": ["gn.to_bus", "cim_vector.building", "gn.from_bus", "cim_vector.grid_line", "gn.line_id", "bp.scenario_id", "bp.n_people", "gl.to_bus", "bp.type", "gb.geometry", "gb.voltage_kv", "gl.from_bus", "gb.scenario_id", "b.building_geometry", "gl.max_loading_percent", "bp.project_id", "grid_network", "gb.bus_id", "gl.length_km", "gl.project_id", "cim_vector.grid_bus", "gb.project_id", "bp.building_id", "gl.geometry", "bc.bus_geom", "cim_vector.building_properties", "bp.area", "gl.line_id", "b.building_id", "gl.scenario_id", "bus_connectivity", "building_grid_proximity"], "columns": ["type", "bus_geom", "length_km", "bus_id", "n_people", "building_geometry", "area", "building", "geometry", "building_properties", "to_bus", "grid_line", "voltage_kv", "line_id", "from_bus", "max_loading_percent", "grid_bus"], "functions": ["ST_EndPoint", "ST_DWithin", "ST_StartPoint", "ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze building proximity to electrical grid infrastructure by voltage level (Project: rome_green_quarter, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C2_building_grid_proximity_analysis_var_98", "complexity_level": "C", "tags": ["proximity", "cim_building", "cim_grid", "freq_medium", "cim_wizard", "freq_critical", "network_analysis", "freq_high", "realistic_params", "advanced"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "efficiency_max", "building_type": "commercial", "hvac_type": "gas_boiler", "region": "Toscana", "province": "Bologna", "voltage_kv": 220, "srid": 3857, "buffer_distance": 2000, "min_area": 308, "max_area": 1038, "min_height": 4, "max_height": 73, "min_people": 3, "max_people": 18, "year": 1981, "census_id": 8574492, "lon": 17.082769, "lat": 39.125116, "limit": 10, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 2000, "min_buildings": 20, "min_points": 5, "min_areas": 10, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.813803"}
{"id": "cim_stage1_001742", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze housing characteristics including vacancy rates, rental patterns, and living space per person (Project: florence_heritage_area, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH housing_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.A2 as occupied_homes,\n         c.A6 as empty_homes,\n         c.A46 as rented_families,\n         c.A47 as owned_families,\n         c.A44 as total_housing_surface,\n         c.PF1 as total_families,\n         c.PF2 as total_family_members\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.A2 > 0 AND c.PF1 > 0\n),\nhousing_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((empty_homes::float / NULLIF((occupied_homes + empty_homes), 0)) * 100, 1) as vacancy_rate,\n         ROUND((rented_families::float / NULLIF(total_families, 0)) * 100, 1) as rental_rate,\n         ROUND((total_housing_surface::float / NULLIF(occupied_homes, 0)), 1) as avg_home_size_sqm,\n         ROUND((total_family_members::float / NULLIF(total_families, 0)), 1) as avg_family_size,\n         ROUND((total_housing_surface::float / NULLIF(total_family_members, 0)), 1) as sqm_per_person\n  FROM housing_analysis\n)\nSELECT PROVINCIA,\n       COUNT(*) as census_sections,\n       ROUND(AVG(vacancy_rate), 1) as avg_vacancy_rate,\n       ROUND(AVG(rental_rate), 1) as avg_rental_rate,\n       ROUND(AVG(avg_home_size_sqm), 0) as avg_home_size,\n       ROUND(AVG(avg_family_size), 1) as avg_family_size,\n       ROUND(AVG(sqm_per_person), 1) as avg_sqm_per_person\nFROM housing_indicators\nGROUP BY PROVINCIA\nORDER BY avg_vacancy_rate DESC;", "sql_spatialite": "WITH housing_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.A2 as occupied_homes,\n         c.A6 as empty_homes,\n         c.A46 as rented_families,\n         c.A47 as owned_families,\n         c.A44 as total_housing_surface,\n         c.PF1 as total_families,\n         c.PF2 as total_family_members\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.A2 > 0 AND c.PF1 > 0\n),\nhousing_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((empty_homes::float / NULLIF((occupied_homes + empty_homes), 0)) * 100, 1) as vacancy_rate,\n         ROUND((rented_families::float / NULLIF(total_families, 0)) * 100, 1) as rental_rate,\n         ROUND((total_housing_surface::float / NULLIF(occupied_homes, 0)), 1) as avg_home_size_sqm,\n         ROUND((total_family_members::float / NULLIF(total_families, 0)), 1) as avg_family_size,\n         ROUND((total_housing_surface::float / NULLIF(total_family_members, 0)), 1) as sqm_per_person\n  FROM housing_analysis\n)\nSELECT PROVINCIA,\n       COUNT(*) as census_sections,\n       ROUND(AVG(vacancy_rate), 1) as avg_vacancy_rate,\n       ROUND(AVG(rental_rate), 1) as avg_rental_rate,\n       ROUND(AVG(avg_home_size_sqm), 0) as avg_home_size,\n       ROUND(AVG(avg_family_size), 1) as avg_family_size,\n       ROUND(AVG(sqm_per_person), 1) as avg_sqm_per_person\nFROM housing_indicators\nGROUP BY PROVINCIA\nORDER BY avg_vacancy_rate DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.A6", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.A2", "c.A47", "c.COMUNE", "c.A44", "housing_analysis", "c.PF2", "c.PF1", "housing_indicators", "c.A46"], "columns": ["SEZ2011", "PF1", "A44", "PF2", "REGIONE", "census_geo", "PROVINCIA", "A6", "A47", "A46", "A2", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 14, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.A6", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.A2", "c.A47", "c.COMUNE", "c.A44", "housing_analysis", "c.PF2", "c.PF1", "housing_indicators", "c.A46"], "columns": ["SEZ2011", "PF1", "A44", "PF2", "REGIONE", "census_geo", "PROVINCIA", "A6", "A47", "A46", "A2", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze housing characteristics including vacancy rates, rental patterns, and living space per person (Project: florence_heritage_area, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B3_housing_characteristics_var_119", "complexity_level": "B", "tags": ["living_space", "housing", "rental_market", "vacancy", "realistic_params", "cim_wizard", "cim_census"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "grid_modernization", "building_type": "industrial", "hvac_type": "gas_boiler", "region": "Piemonte", "province": "Firenze", "voltage_kv": 220, "srid": 32633, "buffer_distance": 1000, "min_area": 196, "max_area": 2407, "min_height": 7, "max_height": 63, "min_people": 1, "max_people": 10, "year": 1977, "census_id": 6980147, "lon": 7.733791, "lat": 41.099561, "limit": 10, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 500, "min_buildings": 10, "min_points": 3, "min_areas": 5, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.836780"}
{"id": "cim_stage1_001750", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze housing characteristics including vacancy rates, rental patterns, and living space per person (Project: florence_heritage_area, Scenario: renewable_2030)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH housing_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.A2 as occupied_homes,\n         c.A6 as empty_homes,\n         c.A46 as rented_families,\n         c.A47 as owned_families,\n         c.A44 as total_housing_surface,\n         c.PF1 as total_families,\n         c.PF2 as total_family_members\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.A2 > 0 AND c.PF1 > 0\n),\nhousing_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((empty_homes::float / NULLIF((occupied_homes + empty_homes), 0)) * 100, 1) as vacancy_rate,\n         ROUND((rented_families::float / NULLIF(total_families, 0)) * 100, 1) as rental_rate,\n         ROUND((total_housing_surface::float / NULLIF(occupied_homes, 0)), 1) as avg_home_size_sqm,\n         ROUND((total_family_members::float / NULLIF(total_families, 0)), 1) as avg_family_size,\n         ROUND((total_housing_surface::float / NULLIF(total_family_members, 0)), 1) as sqm_per_person\n  FROM housing_analysis\n)\nSELECT PROVINCIA,\n       COUNT(*) as census_sections,\n       ROUND(AVG(vacancy_rate), 1) as avg_vacancy_rate,\n       ROUND(AVG(rental_rate), 1) as avg_rental_rate,\n       ROUND(AVG(avg_home_size_sqm), 0) as avg_home_size,\n       ROUND(AVG(avg_family_size), 1) as avg_family_size,\n       ROUND(AVG(sqm_per_person), 1) as avg_sqm_per_person\nFROM housing_indicators\nGROUP BY PROVINCIA\nORDER BY avg_vacancy_rate DESC;", "sql_spatialite": "WITH housing_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.A2 as occupied_homes,\n         c.A6 as empty_homes,\n         c.A46 as rented_families,\n         c.A47 as owned_families,\n         c.A44 as total_housing_surface,\n         c.PF1 as total_families,\n         c.PF2 as total_family_members\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.A2 > 0 AND c.PF1 > 0\n),\nhousing_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((empty_homes::float / NULLIF((occupied_homes + empty_homes), 0)) * 100, 1) as vacancy_rate,\n         ROUND((rented_families::float / NULLIF(total_families, 0)) * 100, 1) as rental_rate,\n         ROUND((total_housing_surface::float / NULLIF(occupied_homes, 0)), 1) as avg_home_size_sqm,\n         ROUND((total_family_members::float / NULLIF(total_families, 0)), 1) as avg_family_size,\n         ROUND((total_housing_surface::float / NULLIF(total_family_members, 0)), 1) as sqm_per_person\n  FROM housing_analysis\n)\nSELECT PROVINCIA,\n       COUNT(*) as census_sections,\n       ROUND(AVG(vacancy_rate), 1) as avg_vacancy_rate,\n       ROUND(AVG(rental_rate), 1) as avg_rental_rate,\n       ROUND(AVG(avg_home_size_sqm), 0) as avg_home_size,\n       ROUND(AVG(avg_family_size), 1) as avg_family_size,\n       ROUND(AVG(sqm_per_person), 1) as avg_sqm_per_person\nFROM housing_indicators\nGROUP BY PROVINCIA\nORDER BY avg_vacancy_rate DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.A6", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.A2", "c.A47", "c.COMUNE", "c.A44", "housing_analysis", "c.PF2", "c.PF1", "housing_indicators", "c.A46"], "columns": ["SEZ2011", "PF1", "A44", "PF2", "REGIONE", "census_geo", "PROVINCIA", "A6", "A47", "A46", "A2", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 14, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.A6", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.A2", "c.A47", "c.COMUNE", "c.A44", "housing_analysis", "c.PF2", "c.PF1", "housing_indicators", "c.A46"], "columns": ["SEZ2011", "PF1", "A44", "PF2", "REGIONE", "census_geo", "PROVINCIA", "A6", "A47", "A46", "A2", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze housing characteristics including vacancy rates, rental patterns, and living space per person (Project: florence_heritage_area, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B3_housing_characteristics_var_127", "complexity_level": "B", "tags": ["living_space", "housing", "rental_market", "vacancy", "realistic_params", "cim_wizard", "cim_census"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "efficiency_max", "building_type": "industrial", "hvac_type": "heat_pump", "region": "Toscana", "province": "Torino", "voltage_kv": 10, "srid": 32633, "buffer_distance": 2000, "min_area": 148, "max_area": 1413, "min_height": 8, "max_height": 91, "min_people": 4, "max_people": 6, "year": 1982, "census_id": 9867232, "lon": 8.815893, "lat": 37.663432, "limit": 10, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.837483"}
{"id": "cim_stage1_001907", "database_id": 1, "database_name": "cim_wizard", "question": "Find buildings of specific type with area above threshold in a project scenario (Project: florence_heritage_area, Scenario: efficiency_max)", "question_tone": "CONDITIONAL", "sql_postgis": "SELECT b.building_id, b.lod, ST_Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'florence_heritage_area' \n  AND bp.scenario_id = 'efficiency_max'\n  AND bp.type = 'residential'\n  AND ST_Area(b.building_geometry) > 422;", "sql_spatialite": "SELECT b.building_id, b.lod, Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'florence_heritage_area' \n  AND bp.scenario_id = 'efficiency_max'\n  AND bp.type = 'residential'\n  AND Area(b.building_geometry) > 422;", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 9, "schema_count": 3}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find buildings of specific type with area above threshold in a project scenario (Project: florence_heritage_area, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A1_buildings_by_type_area_var_84", "complexity_level": "A", "tags": ["freq_critical", "cim_building", "realistic_params", "type_filter", "basic", "area_filter", "cim_wizard"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "zero_emission", "building_type": "mixed_use", "hvac_type": "district_heating", "region": "Emilia-Romagna", "province": "Firenze", "voltage_kv": 20, "srid": 3857, "buffer_distance": 2000, "min_area": 262, "max_area": 1207, "min_height": 3, "max_height": 73, "min_people": 5, "max_people": 8, "year": 2004, "census_id": 8232864, "lon": 8.898536, "lat": 43.039624, "limit": 25, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 1000, "min_buildings": 20, "min_points": 8, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.849254"}
{"id": "cim_stage1_001972", "database_id": 1, "database_name": "cim_wizard", "question": "Find buildings of specific type with area above threshold in a project scenario (Project: bologna_energy_hub, Scenario: renewable_2030)", "question_tone": "CONDITIONAL", "sql_postgis": "SELECT b.building_id, b.lod, ST_Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'bologna_energy_hub' \n  AND bp.scenario_id = 'renewable_2030'\n  AND bp.type = 'public'\n  AND ST_Area(b.building_geometry) > 151;", "sql_spatialite": "SELECT b.building_id, b.lod, Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'bologna_energy_hub' \n  AND bp.scenario_id = 'renewable_2030'\n  AND bp.type = 'public'\n  AND Area(b.building_geometry) > 151;", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 9, "schema_count": 3}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find buildings of specific type with area above threshold in a project scenario (Project: bologna_energy_hub, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A1_buildings_by_type_area_var_149", "complexity_level": "A", "tags": ["freq_critical", "cim_building", "realistic_params", "type_filter", "basic", "area_filter", "cim_wizard"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "grid_modernization", "building_type": "mixed_use", "hvac_type": "electric", "region": "Emilia-Romagna", "province": "Firenze", "voltage_kv": 20, "srid": 3857, "buffer_distance": 1000, "min_area": 159, "max_area": 2455, "min_height": 10, "max_height": 44, "min_people": 1, "max_people": 13, "year": 1984, "census_id": 8811492, "lon": 9.39896, "lat": 42.864097, "limit": 25, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 10, "min_points": 8, "min_areas": 10, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.853629"}
{"id": "cim_stage1_001974", "database_id": 1, "database_name": "cim_wizard", "question": "Find buildings of specific type with area above threshold in a project scenario (Project: florence_heritage_area, Scenario: zero_emission)", "question_tone": "CONDITIONAL", "sql_postgis": "SELECT b.building_id, b.lod, ST_Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'florence_heritage_area' \n  AND bp.scenario_id = 'zero_emission'\n  AND bp.type = 'residential'\n  AND ST_Area(b.building_geometry) > 255;", "sql_spatialite": "SELECT b.building_id, b.lod, Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'florence_heritage_area' \n  AND bp.scenario_id = 'zero_emission'\n  AND bp.type = 'residential'\n  AND Area(b.building_geometry) > 255;", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 9, "schema_count": 3}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find buildings of specific type with area above threshold in a project scenario (Project: florence_heritage_area, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A1_buildings_by_type_area_var_151", "complexity_level": "A", "tags": ["freq_critical", "cim_building", "realistic_params", "type_filter", "basic", "area_filter", "cim_wizard"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "zero_emission", "building_type": "commercial", "hvac_type": "hybrid", "region": "Lombardia", "province": "Roma", "voltage_kv": 220, "srid": 32632, "buffer_distance": 100, "min_area": 327, "max_area": 2010, "min_height": 7, "max_height": 70, "min_people": 2, "max_people": 8, "year": 1955, "census_id": 6090614, "lon": 7.940946, "lat": 46.303681, "limit": 100, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 20, "min_points": 3, "min_areas": 10, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.853750"}
{"id": "cim_stage1_002015", "database_id": 1, "database_name": "cim_wizard", "question": "Find buildings of specific type with area above threshold in a project scenario (Project: florence_heritage_area, Scenario: zero_emission)", "question_tone": "CONDITIONAL", "sql_postgis": "SELECT b.building_id, b.lod, ST_Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'florence_heritage_area' \n  AND bp.scenario_id = 'zero_emission'\n  AND bp.type = 'residential'\n  AND ST_Area(b.building_geometry) > 138;", "sql_spatialite": "SELECT b.building_id, b.lod, Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'florence_heritage_area' \n  AND bp.scenario_id = 'zero_emission'\n  AND bp.type = 'residential'\n  AND Area(b.building_geometry) > 138;", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 9, "schema_count": 3}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find buildings of specific type with area above threshold in a project scenario (Project: florence_heritage_area, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A1_buildings_by_type_area_var_192", "complexity_level": "A", "tags": ["freq_critical", "cim_building", "realistic_params", "type_filter", "basic", "area_filter", "cim_wizard"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "public", "hvac_type": "district_heating", "region": "Emilia-Romagna", "province": "Firenze", "voltage_kv": 20, "srid": 4326, "buffer_distance": 500, "min_area": 120, "max_area": 4517, "min_height": 8, "max_height": 68, "min_people": 5, "max_people": 11, "year": 2003, "census_id": 8067704, "lon": 16.285199, "lat": 43.528848, "limit": 10, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 5, "min_points": 3, "min_areas": 5, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.856323"}
{"id": "cim_stage1_002019", "database_id": 1, "database_name": "cim_wizard", "question": "Find buildings of specific type with area above threshold in a project scenario (Project: milan_smart_district, Scenario: efficiency_max)", "question_tone": "CONDITIONAL", "sql_postgis": "SELECT b.building_id, b.lod, ST_Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'milan_smart_district' \n  AND bp.scenario_id = 'efficiency_max'\n  AND bp.type = 'commercial'\n  AND ST_Area(b.building_geometry) > 467;", "sql_spatialite": "SELECT b.building_id, b.lod, Area(b.building_geometry) as area_sqm\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nWHERE bp.project_id = 'milan_smart_district' \n  AND bp.scenario_id = 'efficiency_max'\n  AND bp.type = 'commercial'\n  AND Area(b.building_geometry) > 467;", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 9, "schema_count": 3}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "b.lod", "bp.project_id", "cim_vector.building", "cim_vector.building_properties", "bp.scenario_id", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "lod", "building_geometry", "building", "building_properties"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find buildings of specific type with area above threshold in a project scenario (Project: milan_smart_district, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A1_buildings_by_type_area_var_196", "complexity_level": "A", "tags": ["freq_critical", "cim_building", "realistic_params", "type_filter", "basic", "area_filter", "cim_wizard"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "grid_modernization", "building_type": "commercial", "hvac_type": "gas_boiler", "region": "Lazio", "province": "Milano", "voltage_kv": 20, "srid": 32633, "buffer_distance": 100, "min_area": 175, "max_area": 4669, "min_height": 9, "max_height": 94, "min_people": 2, "max_people": 13, "year": 2017, "census_id": 8931195, "lon": 13.588085, "lat": 41.295902, "limit": 10, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 20, "min_points": 3, "min_areas": 5, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.856604"}
{"id": "cim_stage1_002032", "database_id": 1, "database_name": "cim_wizard", "question": "Find buildings closest to high-voltage grid infrastructure (Project: turin_innovation_zone, Scenario: baseline)", "question_tone": "DIRECT", "sql_postgis": "SELECT b.building_id, \n       bp.height,\n       ST_Distance(b.building_geometry, gb.geometry) as distance_to_grid_m\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nJOIN cim_vector.grid_bus gb ON bp.project_id = gb.project_id AND bp.scenario_id = gb.scenario_id\nWHERE bp.project_id = 'turin_innovation_zone' \n  AND bp.scenario_id = 'baseline'\n  AND gb.voltage_kv >= 400\nORDER BY distance_to_grid_m ASC\nLIMIT 25;", "sql_spatialite": "SELECT b.building_id, \n       bp.height,\n       Distance(b.building_geometry, gb.geometry) as distance_to_grid_m\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nJOIN cim_vector.grid_bus gb ON bp.project_id = gb.project_id AND bp.scenario_id = gb.scenario_id\nWHERE bp.project_id = 'turin_innovation_zone' \n  AND bp.scenario_id = 'baseline'\n  AND gb.voltage_kv >= 400\nORDER BY distance_to_grid_m ASC\nLIMIT 25;", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "gb", "b"], "tables": ["gb.scenario_id", "b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_vector.grid_bus", "bp.scenario_id", "gb.project_id", "b.building_id", "bp.building_id", "gb.geometry", "gb.voltage_kv"], "columns": ["height", "building_geometry", "building", "geometry", "building_properties", "voltage_kv", "grid_bus"], "geometry_columns": ["b.building_geometry", "gb.geometry", "building_geometry", "geometry"], "primary_schema": "cim_vector", "table_count": 13, "schema_count": 4}, "spatial_functions": ["ST_DISTANCE"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_DISTANCE"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "gb", "b"], "tables": ["gb.scenario_id", "b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_vector.grid_bus", "bp.scenario_id", "gb.project_id", "b.building_id", "bp.building_id", "gb.geometry", "gb.voltage_kv"], "columns": ["height", "building_geometry", "building", "geometry", "building_properties", "voltage_kv", "grid_bus"], "functions": ["ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find buildings closest to high-voltage grid infrastructure (Project: turin_innovation_zone, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B2_buildings_near_grid_var_9", "complexity_level": "B", "tags": ["proximity", "freq_critical", "cim_building", "cim_wizard", "realistic_params", "cim_grid", "distance"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "efficiency_max", "building_type": "mixed_use", "hvac_type": "hybrid", "region": "Piemonte", "province": "Roma", "voltage_kv": 0.4, "srid": 32632, "buffer_distance": 500, "min_area": 309, "max_area": 3310, "min_height": 6, "max_height": 97, "min_people": 2, "max_people": 8, "year": 1995, "census_id": 7698026, "lon": 9.388533, "lat": 38.949284, "limit": 10, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 500, "min_buildings": 10, "min_points": 5, "min_areas": 5, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.857726"}
{"id": "cim_stage1_002038", "database_id": 1, "database_name": "cim_wizard", "question": "Find buildings closest to high-voltage grid infrastructure (Project: turin_innovation_zone, Scenario: renewable_2030)", "question_tone": "DIRECT", "sql_postgis": "SELECT b.building_id, \n       bp.height,\n       ST_Distance(b.building_geometry, gb.geometry) as distance_to_grid_m\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nJOIN cim_vector.grid_bus gb ON bp.project_id = gb.project_id AND bp.scenario_id = gb.scenario_id\nWHERE bp.project_id = 'turin_innovation_zone' \n  AND bp.scenario_id = 'renewable_2030'\n  AND gb.voltage_kv >= 220\nORDER BY distance_to_grid_m ASC\nLIMIT 25;", "sql_spatialite": "SELECT b.building_id, \n       bp.height,\n       Distance(b.building_geometry, gb.geometry) as distance_to_grid_m\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nJOIN cim_vector.grid_bus gb ON bp.project_id = gb.project_id AND bp.scenario_id = gb.scenario_id\nWHERE bp.project_id = 'turin_innovation_zone' \n  AND bp.scenario_id = 'renewable_2030'\n  AND gb.voltage_kv >= 220\nORDER BY distance_to_grid_m ASC\nLIMIT 25;", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "gb", "b"], "tables": ["gb.scenario_id", "b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_vector.grid_bus", "bp.scenario_id", "gb.project_id", "b.building_id", "bp.building_id", "gb.geometry", "gb.voltage_kv"], "columns": ["height", "building_geometry", "building", "geometry", "building_properties", "voltage_kv", "grid_bus"], "geometry_columns": ["b.building_geometry", "gb.geometry", "building_geometry", "geometry"], "primary_schema": "cim_vector", "table_count": 13, "schema_count": 4}, "spatial_functions": ["ST_DISTANCE"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_DISTANCE"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "gb", "b"], "tables": ["gb.scenario_id", "b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_vector.grid_bus", "bp.scenario_id", "gb.project_id", "b.building_id", "bp.building_id", "gb.geometry", "gb.voltage_kv"], "columns": ["height", "building_geometry", "building", "geometry", "building_properties", "voltage_kv", "grid_bus"], "functions": ["ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find buildings closest to high-voltage grid infrastructure (Project: turin_innovation_zone, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B2_buildings_near_grid_var_15", "complexity_level": "B", "tags": ["proximity", "freq_critical", "cim_building", "cim_wizard", "realistic_params", "cim_grid", "distance"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "efficiency_max", "building_type": "residential", "hvac_type": "district_heating", "region": "Lazio", "province": "Firenze", "voltage_kv": 220, "srid": 3857, "buffer_distance": 100, "min_area": 205, "max_area": 3948, "min_height": 10, "max_height": 48, "min_people": 3, "max_people": 18, "year": 1956, "census_id": 1197708, "lon": 11.799677, "lat": 38.051179, "limit": 50, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.858181"}
{"id": "cim_stage1_002082", "database_id": 1, "database_name": "cim_wizard", "question": "Find buildings closest to high-voltage grid infrastructure (Project: rome_green_quarter, Scenario: grid_modernization)", "question_tone": "DIRECT", "sql_postgis": "SELECT b.building_id, \n       bp.height,\n       ST_Distance(b.building_geometry, gb.geometry) as distance_to_grid_m\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nJOIN cim_vector.grid_bus gb ON bp.project_id = gb.project_id AND bp.scenario_id = gb.scenario_id\nWHERE bp.project_id = 'rome_green_quarter' \n  AND bp.scenario_id = 'grid_modernization'\n  AND gb.voltage_kv >= 132\nORDER BY distance_to_grid_m ASC\nLIMIT 50;", "sql_spatialite": "SELECT b.building_id, \n       bp.height,\n       Distance(b.building_geometry, gb.geometry) as distance_to_grid_m\nFROM cim_vector.building b\nJOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\nJOIN cim_vector.grid_bus gb ON bp.project_id = gb.project_id AND bp.scenario_id = gb.scenario_id\nWHERE bp.project_id = 'rome_green_quarter' \n  AND bp.scenario_id = 'grid_modernization'\n  AND gb.voltage_kv >= 132\nORDER BY distance_to_grid_m ASC\nLIMIT 50;", "sql_type": "SPATIAL_MEASUREMENT", "sql_taxonomy": {"operation_type": "SPATIAL_MEASUREMENT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "bp", "gb", "b"], "tables": ["gb.scenario_id", "b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_vector.grid_bus", "bp.scenario_id", "gb.project_id", "b.building_id", "bp.building_id", "gb.geometry", "gb.voltage_kv"], "columns": ["height", "building_geometry", "building", "geometry", "building_properties", "voltage_kv", "grid_bus"], "geometry_columns": ["b.building_geometry", "gb.geometry", "building_geometry", "geometry"], "primary_schema": "cim_vector", "table_count": 13, "schema_count": 4}, "spatial_functions": ["ST_DISTANCE"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_DISTANCE"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "gb", "b"], "tables": ["gb.scenario_id", "b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_vector.grid_bus", "bp.scenario_id", "gb.project_id", "b.building_id", "bp.building_id", "gb.geometry", "gb.voltage_kv"], "columns": ["height", "building_geometry", "building", "geometry", "building_properties", "voltage_kv", "grid_bus"], "functions": ["ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find buildings closest to high-voltage grid infrastructure (Project: rome_green_quarter, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B2_buildings_near_grid_var_59", "complexity_level": "B", "tags": ["proximity", "freq_critical", "cim_building", "cim_wizard", "realistic_params", "cim_grid", "distance"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "efficiency_max", "building_type": "residential", "hvac_type": "gas_boiler", "region": "Lombardia", "province": "Milano", "voltage_kv": 132, "srid": 32633, "buffer_distance": 1000, "min_area": 392, "max_area": 2525, "min_height": 6, "max_height": 49, "min_people": 4, "max_people": 16, "year": 1974, "census_id": 8760278, "lon": 7.879805, "lat": 39.004153, "limit": 10, "cluster_count": 5, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 20, "min_points": 5, "min_areas": 5, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.861443"}
{"id": "cim_stage1_002231", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: rome_green_quarter, Scenario: zero_emission)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Firenze' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 10\nORDER BY avg_unemployment_rate DESC;", "sql_spatialite": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Firenze' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 10\nORDER BY avg_unemployment_rate DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 15, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: rome_green_quarter, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B2_employment_labor_analysis_var_8", "complexity_level": "B", "tags": ["cim_wizard", "economic_indicators", "labor_force", "realistic_params", "employment", "cim_census"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "zero_emission", "building_type": "public", "hvac_type": "gas_boiler", "region": "Emilia-Romagna", "province": "Milano", "voltage_kv": 400, "srid": 32632, "buffer_distance": 1000, "min_area": 425, "max_area": 2164, "min_height": 3, "max_height": 82, "min_people": 4, "max_people": 10, "year": 1981, "census_id": 1680023, "lon": 17.808248, "lat": 39.724196, "limit": 100, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 10, "min_points": 3, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.872300"}
{"id": "cim_stage1_002271", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: bologna_energy_hub, Scenario: efficiency_max)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Firenze' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 5\nORDER BY avg_unemployment_rate DESC;", "sql_spatialite": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Firenze' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 5\nORDER BY avg_unemployment_rate DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 15, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: bologna_energy_hub, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B2_employment_labor_analysis_var_48", "complexity_level": "B", "tags": ["cim_wizard", "economic_indicators", "labor_force", "realistic_params", "employment", "cim_census"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "grid_modernization", "building_type": "industrial", "hvac_type": "district_heating", "region": "Toscana", "province": "Firenze", "voltage_kv": 20, "srid": 32633, "buffer_distance": 2000, "min_area": 361, "max_area": 1631, "min_height": 3, "max_height": 18, "min_people": 3, "max_people": 15, "year": 2020, "census_id": 1479322, "lon": 11.521938, "lat": 46.785111, "limit": 50, "cluster_count": 5, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 10, "min_points": 3, "min_areas": 3, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.876230"}
{"id": "cim_stage1_002275", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: florence_heritage_area, Scenario: zero_emission)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Torino' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 3\nORDER BY avg_unemployment_rate DESC;", "sql_spatialite": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Torino' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 3\nORDER BY avg_unemployment_rate DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 15, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: florence_heritage_area, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B2_employment_labor_analysis_var_52", "complexity_level": "B", "tags": ["cim_wizard", "economic_indicators", "labor_force", "realistic_params", "employment", "cim_census"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "renewable_2030", "building_type": "public", "hvac_type": "electric", "region": "Piemonte", "province": "Torino", "voltage_kv": 400, "srid": 4326, "buffer_distance": 2000, "min_area": 76, "max_area": 4576, "min_height": 3, "max_height": 35, "min_people": 1, "max_people": 8, "year": 1990, "census_id": 6083846, "lon": 17.302096, "lat": 41.347602, "limit": 10, "cluster_count": 5, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 20, "min_points": 3, "min_areas": 5, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.876677"}
{"id": "cim_stage1_002300", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: milan_smart_district, Scenario: zero_emission)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Milano' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 10\nORDER BY avg_unemployment_rate DESC;", "sql_spatialite": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Milano' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 10\nORDER BY avg_unemployment_rate DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 15, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: milan_smart_district, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B2_employment_labor_analysis_var_77", "complexity_level": "B", "tags": ["cim_wizard", "economic_indicators", "labor_force", "realistic_params", "employment", "cim_census"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "baseline", "building_type": "residential", "hvac_type": "gas_boiler", "region": "Toscana", "province": "Roma", "voltage_kv": 10, "srid": 32632, "buffer_distance": 100, "min_area": 286, "max_area": 3527, "min_height": 4, "max_height": 46, "min_people": 2, "max_people": 16, "year": 2020, "census_id": 4370786, "lon": 14.064625, "lat": 39.247547, "limit": 50, "cluster_count": 8, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 20, "min_points": 3, "min_areas": 3, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.879106"}
{"id": "cim_stage1_002393", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: florence_heritage_area, Scenario: renewable_2030)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Roma' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 3\nORDER BY avg_unemployment_rate DESC;", "sql_spatialite": "WITH employment_stats AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P60 as labor_force_total,\n         c.P61 as employed_total,\n         c.P62 as unemployed_total,\n         c.P128 as not_in_labor_force,\n         c.P130 as housewives,\n         c.P131 as students,\n         c.P139 as income_earners,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Roma' AND c.P60 > 0\n),\nemployment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((unemployed_total::float / NULLIF(labor_force_total, 0)) * 100, 1) as unemployment_rate,\n         ROUND((employed_total::float / NULLIF(total_population, 0)) * 100, 1) as employment_ratio,\n         ROUND((labor_force_total::float / NULLIF(total_population, 0)) * 100, 1) as participation_rate,\n         ROUND((income_earners::float / NULLIF(total_population, 0)) * 100, 1) as income_earner_rate\n  FROM employment_stats\n  WHERE labor_force_total > 0\n)\nSELECT COMUNE,\n       COUNT(*) as census_areas,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(employment_ratio), 1) as avg_employment_ratio,\n       ROUND(AVG(participation_rate), 1) as avg_participation_rate,\n       ROUND(AVG(income_earner_rate), 1) as avg_income_earner_rate\nFROM employment_indicators\nGROUP BY COMUNE\nHAVING COUNT(*) >= 3\nORDER BY avg_unemployment_rate DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 15, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P128", "employment_stats", "c.P131", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P130", "c.P62", "c.COMUNE", "c.P1", "c.P60", "c.P139", "employment_indicators", "c.P61"], "columns": ["P128", "P60", "SEZ2011", "P130", "P139", "P61", "P1", "P62", "REGIONE", "census_geo", "PROVINCIA", "P131", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive employment and labor force analysis with unemployment rates and participation indicators (Project: florence_heritage_area, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B2_employment_labor_analysis_var_170", "complexity_level": "B", "tags": ["cim_wizard", "economic_indicators", "labor_force", "realistic_params", "employment", "cim_census"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "renewable_2030", "building_type": "industrial", "hvac_type": "district_heating", "region": "Lazio", "province": "Firenze", "voltage_kv": 0.4, "srid": 3857, "buffer_distance": 2000, "min_area": 363, "max_area": 3340, "min_height": 4, "max_height": 41, "min_people": 2, "max_people": 6, "year": 1974, "census_id": 7239439, "lon": 16.121591, "lat": 39.917006, "limit": 50, "cluster_count": 10, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 10, "min_points": 5, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.888751"}
{"id": "cim_stage1_002476", "database_id": 1, "database_name": "cim_wizard", "question": "Validate building heights using raster elevation data and analyze discrepancies (Project: turin_innovation_zone, Scenario: efficiency_max)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         ST_Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'efficiency_max'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_spatialite": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'efficiency_max'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "bp", "table_count": 15, "schema_count": 5}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Validate building heights using raster elevation data and analyze discrepancies (Project: turin_innovation_zone, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C1_building_height_validation_var_53", "complexity_level": "C", "tags": ["cim_building", "height_analysis", "cim_wizard", "validation", "freq_critical", "realistic_params", "advanced", "cim_raster"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "baseline", "building_type": "commercial", "hvac_type": "electric", "region": "Piemonte", "province": "Milano", "voltage_kv": 20, "srid": 4326, "buffer_distance": 100, "min_area": 368, "max_area": 4692, "min_height": 9, "max_height": 80, "min_people": 3, "max_people": 19, "year": 2016, "census_id": 5070510, "lon": 16.447192, "lat": 43.139826, "limit": 100, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 20, "min_points": 8, "min_areas": 5, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.897037"}
{"id": "cim_stage1_002495", "database_id": 1, "database_name": "cim_wizard", "question": "Validate building heights using raster elevation data and analyze discrepancies (Project: turin_innovation_zone, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         ST_Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'grid_modernization'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_spatialite": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'grid_modernization'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "bp", "table_count": 15, "schema_count": 5}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Validate building heights using raster elevation data and analyze discrepancies (Project: turin_innovation_zone, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C1_building_height_validation_var_72", "complexity_level": "C", "tags": ["cim_building", "height_analysis", "cim_wizard", "validation", "freq_critical", "realistic_params", "advanced", "cim_raster"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "baseline", "building_type": "mixed_use", "hvac_type": "hybrid", "region": "Piemonte", "province": "Bologna", "voltage_kv": 400, "srid": 32633, "buffer_distance": 100, "min_area": 375, "max_area": 1214, "min_height": 4, "max_height": 18, "min_people": 2, "max_people": 14, "year": 2008, "census_id": 9225779, "lon": 8.393115, "lat": 38.009855, "limit": 25, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 20, "min_points": 5, "min_areas": 3, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.898817"}
{"id": "cim_stage1_002538", "database_id": 1, "database_name": "cim_wizard", "question": "Validate building heights using raster elevation data and analyze discrepancies (Project: turin_innovation_zone, Scenario: efficiency_max)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         ST_Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'efficiency_max'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_spatialite": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'efficiency_max'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "bp", "table_count": 15, "schema_count": 5}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Validate building heights using raster elevation data and analyze discrepancies (Project: turin_innovation_zone, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C1_building_height_validation_var_115", "complexity_level": "C", "tags": ["cim_building", "height_analysis", "cim_wizard", "validation", "freq_critical", "realistic_params", "advanced", "cim_raster"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "grid_modernization", "building_type": "industrial", "hvac_type": "heat_pump", "region": "Lombardia", "province": "Firenze", "voltage_kv": 20, "srid": 4326, "buffer_distance": 1000, "min_area": 452, "max_area": 3340, "min_height": 10, "max_height": 70, "min_people": 2, "max_people": 12, "year": 1964, "census_id": 8657166, "lon": 14.75841, "lat": 38.334764, "limit": 100, "cluster_count": 3, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 20, "min_points": 8, "min_areas": 3, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.903408"}
{"id": "cim_stage1_002549", "database_id": 1, "database_name": "cim_wizard", "question": "Validate building heights using raster elevation data and analyze discrepancies (Project: florence_heritage_area, Scenario: zero_emission)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         ST_Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'zero_emission'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_spatialite": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'zero_emission'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "bp", "table_count": 15, "schema_count": 5}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Validate building heights using raster elevation data and analyze discrepancies (Project: florence_heritage_area, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C1_building_height_validation_var_126", "complexity_level": "C", "tags": ["cim_building", "height_analysis", "cim_wizard", "validation", "freq_critical", "realistic_params", "advanced", "cim_raster"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "industrial", "hvac_type": "gas_boiler", "region": "Emilia-Romagna", "province": "Milano", "voltage_kv": 20, "srid": 32633, "buffer_distance": 2000, "min_area": 399, "max_area": 4881, "min_height": 5, "max_height": 63, "min_people": 2, "max_people": 19, "year": 1999, "census_id": 4470824, "lon": 8.730137, "lat": 45.93703, "limit": 25, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 10, "min_points": 5, "min_areas": 5, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.904439"}
{"id": "cim_stage1_002564", "database_id": 1, "database_name": "cim_wizard", "question": "Validate building heights using raster elevation data and analyze discrepancies (Project: florence_heritage_area, Scenario: baseline)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         ST_Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'baseline'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_spatialite": "WITH building_elevation AS (\n  SELECT b.building_id,\n         bp.height as declared_height,\n         bhc.building_height as raster_height,\n         Area(b.building_geometry) as footprint_area,\n         bp.volume,\n         bp.n_people\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.building_height_cache bhc ON b.building_id = bhc.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'baseline'\n),\nheight_analysis AS (\n  SELECT building_id,\n         declared_height,\n         raster_height,\n         ABS(declared_height - raster_height) as height_difference,\n         footprint_area,\n         volume,\n         n_people,\n         CASE \n           WHEN ABS(declared_height - raster_height) > 5 THEN 'significant_difference'\n           WHEN ABS(declared_height - raster_height) > 2 THEN 'moderate_difference'\n           ELSE 'consistent'\n         END as height_consistency\n  FROM building_elevation\n  WHERE raster_height IS NOT NULL\n)\nSELECT height_consistency,\n       COUNT(*) as building_count,\n       AVG(height_difference) as avg_height_diff,\n       AVG(footprint_area) as avg_footprint_area,\n       SUM(n_people) as total_population\nFROM height_analysis\nGROUP BY height_consistency\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "bp", "table_count": 15, "schema_count": 5}, "spatial_functions": ["ST_AREA"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "bhc", "cim_vector", "cim_raster", "b"], "tables": ["bhc.building_height", "bp.volume", "b.building_geometry", "cim_raster.building_height_cache", "bhc.building_id", "cim_vector.building", "bp.height", "bp.project_id", "cim_vector.building_properties", "building_elevation", "height_analysis", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id"], "columns": ["height", "building_geometry", "n_people", "volume", "building_height_cache", "building", "building_properties", "building_height"], "functions": ["ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Validate building heights using raster elevation data and analyze discrepancies (Project: florence_heritage_area, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C1_building_height_validation_var_141", "complexity_level": "C", "tags": ["cim_building", "height_analysis", "cim_wizard", "validation", "freq_critical", "realistic_params", "advanced", "cim_raster"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "renewable_2030", "building_type": "commercial", "hvac_type": "hybrid", "region": "Lazio", "province": "Bologna", "voltage_kv": 400, "srid": 32633, "buffer_distance": 100, "min_area": 335, "max_area": 2321, "min_height": 8, "max_height": 72, "min_people": 5, "max_people": 14, "year": 2017, "census_id": 8485668, "lon": 10.507377, "lat": 46.2204, "limit": 50, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 10, "min_points": 3, "min_areas": 5, "cluster_distance": 5000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.905866"}
{"id": "cim_stage1_002628", "database_id": 1, "database_name": "cim_wizard", "question": "Aggregate building data by census municipality boundaries (Project: florence_heritage_area, Scenario: baseline)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH building_census AS (\n  SELECT b.building_id, \n         b.census_id,\n         bp.n_people,\n         bp.area,\n         ST_Centroid(b.building_geometry) as building_center\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'baseline'\n)\nSELECT cg.COMUNE as municipality,\n       COUNT(bc.building_id) as buildings_count,\n       SUM(bc.n_people) as total_population,\n       AVG(bc.area) as avg_building_area\nFROM building_census bc\nJOIN cim_census.census_geo cg ON bc.census_id = cg.SEZ2011\nGROUP BY cg.COMUNE\nORDER BY total_population DESC;", "sql_spatialite": "WITH building_census AS (\n  SELECT b.building_id, \n         b.census_id,\n         bp.n_people,\n         bp.area,\n         Centroid(b.building_geometry) as building_center\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'baseline'\n)\nSELECT cg.COMUNE as municipality,\n       COUNT(bc.building_id) as buildings_count,\n       SUM(bc.n_people) as total_population,\n       AVG(bc.area) as avg_building_area\nFROM building_census bc\nJOIN cim_census.census_geo cg ON bc.census_id = cg.SEZ2011\nGROUP BY cg.COMUNE\nORDER BY total_population DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bc", "cg", "bp", "cim_census", "cim_vector", "b"], "tables": ["bc.n_people", "b.building_geometry", "bc.area", "cim_census.census_geo", "bp.project_id", "cim_vector.building", "cg.SEZ2011", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.census_id", "bc.census_id", "b.building_id", "bp.building_id", "bc.building_id", "building_census", "cg.COMUNE"], "columns": ["SEZ2011", "building_geometry", "n_people", "area", "building", "building_properties", "census_geo", "COMUNE", "census_id"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "bc", "table_count": 18, "schema_count": 6}, "spatial_functions": ["ST_CENTROID"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bc", "cg", "bp", "cim_census", "cim_vector", "b"], "tables": ["bc.n_people", "b.building_geometry", "bc.area", "cim_census.census_geo", "bp.project_id", "cim_vector.building", "cg.SEZ2011", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.census_id", "bc.census_id", "b.building_id", "bp.building_id", "bc.building_id", "building_census", "cg.COMUNE"], "columns": ["SEZ2011", "building_geometry", "n_people", "area", "building", "building_properties", "census_geo", "COMUNE", "census_id"], "functions": ["ST_Centroid"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Aggregate building data by census municipality boundaries (Project: florence_heritage_area, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B3_building_census_aggregation_var_5", "complexity_level": "B", "tags": ["cim_building", "cim_wizard", "freq_high", "aggregation", "realistic_params", "demographic", "cim_census"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "efficiency_max", "building_type": "public", "hvac_type": "district_heating", "region": "Lazio", "province": "Bologna", "voltage_kv": 20, "srid": 32633, "buffer_distance": 500, "min_area": 134, "max_area": 2786, "min_height": 9, "max_height": 84, "min_people": 1, "max_people": 17, "year": 1993, "census_id": 5017236, "lon": 17.168379, "lat": 38.438483, "limit": 25, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 10, "min_points": 3, "min_areas": 10, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.911896"}
{"id": "cim_stage1_002650", "database_id": 1, "database_name": "cim_wizard", "question": "Aggregate building data by census municipality boundaries (Project: florence_heritage_area, Scenario: renewable_2030)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH building_census AS (\n  SELECT b.building_id, \n         b.census_id,\n         bp.n_people,\n         bp.area,\n         ST_Centroid(b.building_geometry) as building_center\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'renewable_2030'\n)\nSELECT cg.COMUNE as municipality,\n       COUNT(bc.building_id) as buildings_count,\n       SUM(bc.n_people) as total_population,\n       AVG(bc.area) as avg_building_area\nFROM building_census bc\nJOIN cim_census.census_geo cg ON bc.census_id = cg.SEZ2011\nGROUP BY cg.COMUNE\nORDER BY total_population DESC;", "sql_spatialite": "WITH building_census AS (\n  SELECT b.building_id, \n         b.census_id,\n         bp.n_people,\n         bp.area,\n         Centroid(b.building_geometry) as building_center\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'renewable_2030'\n)\nSELECT cg.COMUNE as municipality,\n       COUNT(bc.building_id) as buildings_count,\n       SUM(bc.n_people) as total_population,\n       AVG(bc.area) as avg_building_area\nFROM building_census bc\nJOIN cim_census.census_geo cg ON bc.census_id = cg.SEZ2011\nGROUP BY cg.COMUNE\nORDER BY total_population DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bc", "cg", "bp", "cim_census", "cim_vector", "b"], "tables": ["bc.n_people", "b.building_geometry", "bc.area", "cim_census.census_geo", "bp.project_id", "cim_vector.building", "cg.SEZ2011", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.census_id", "bc.census_id", "b.building_id", "bp.building_id", "bc.building_id", "building_census", "cg.COMUNE"], "columns": ["SEZ2011", "building_geometry", "n_people", "area", "building", "building_properties", "census_geo", "COMUNE", "census_id"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "bc", "table_count": 18, "schema_count": 6}, "spatial_functions": ["ST_CENTROID"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bc", "cg", "bp", "cim_census", "cim_vector", "b"], "tables": ["bc.n_people", "b.building_geometry", "bc.area", "cim_census.census_geo", "bp.project_id", "cim_vector.building", "cg.SEZ2011", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.census_id", "bc.census_id", "b.building_id", "bp.building_id", "bc.building_id", "building_census", "cg.COMUNE"], "columns": ["SEZ2011", "building_geometry", "n_people", "area", "building", "building_properties", "census_geo", "COMUNE", "census_id"], "functions": ["ST_Centroid"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Aggregate building data by census municipality boundaries (Project: florence_heritage_area, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B3_building_census_aggregation_var_27", "complexity_level": "B", "tags": ["cim_building", "cim_wizard", "freq_high", "aggregation", "realistic_params", "demographic", "cim_census"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "efficiency_max", "building_type": "mixed_use", "hvac_type": "gas_boiler", "region": "Lombardia", "province": "Firenze", "voltage_kv": 220, "srid": 32633, "buffer_distance": 500, "min_area": 239, "max_area": 3992, "min_height": 7, "max_height": 27, "min_people": 1, "max_people": 20, "year": 1973, "census_id": 3173983, "lon": 8.936501, "lat": 41.279858, "limit": 50, "cluster_count": 3, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 10, "min_points": 3, "min_areas": 3, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.913793"}
{"id": "cim_stage1_002785", "database_id": 1, "database_name": "cim_wizard", "question": "Aggregate building data by census municipality boundaries (Project: bologna_energy_hub, Scenario: efficiency_max)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH building_census AS (\n  SELECT b.building_id, \n         b.census_id,\n         bp.n_people,\n         bp.area,\n         ST_Centroid(b.building_geometry) as building_center\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'bologna_energy_hub' AND bp.scenario_id = 'efficiency_max'\n)\nSELECT cg.COMUNE as municipality,\n       COUNT(bc.building_id) as buildings_count,\n       SUM(bc.n_people) as total_population,\n       AVG(bc.area) as avg_building_area\nFROM building_census bc\nJOIN cim_census.census_geo cg ON bc.census_id = cg.SEZ2011\nGROUP BY cg.COMUNE\nORDER BY total_population DESC;", "sql_spatialite": "WITH building_census AS (\n  SELECT b.building_id, \n         b.census_id,\n         bp.n_people,\n         bp.area,\n         Centroid(b.building_geometry) as building_center\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'bologna_energy_hub' AND bp.scenario_id = 'efficiency_max'\n)\nSELECT cg.COMUNE as municipality,\n       COUNT(bc.building_id) as buildings_count,\n       SUM(bc.n_people) as total_population,\n       AVG(bc.area) as avg_building_area\nFROM building_census bc\nJOIN cim_census.census_geo cg ON bc.census_id = cg.SEZ2011\nGROUP BY cg.COMUNE\nORDER BY total_population DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 2}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bc", "cg", "bp", "cim_census", "cim_vector", "b"], "tables": ["bc.n_people", "b.building_geometry", "bc.area", "cim_census.census_geo", "bp.project_id", "cim_vector.building", "cg.SEZ2011", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.census_id", "bc.census_id", "b.building_id", "bp.building_id", "bc.building_id", "building_census", "cg.COMUNE"], "columns": ["SEZ2011", "building_geometry", "n_people", "area", "building", "building_properties", "census_geo", "COMUNE", "census_id"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "bc", "table_count": 18, "schema_count": 6}, "spatial_functions": ["ST_CENTROID"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bc", "cg", "bp", "cim_census", "cim_vector", "b"], "tables": ["bc.n_people", "b.building_geometry", "bc.area", "cim_census.census_geo", "bp.project_id", "cim_vector.building", "cg.SEZ2011", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.census_id", "bc.census_id", "b.building_id", "bp.building_id", "bc.building_id", "building_census", "cg.COMUNE"], "columns": ["SEZ2011", "building_geometry", "n_people", "area", "building", "building_properties", "census_geo", "COMUNE", "census_id"], "functions": ["ST_Centroid"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Aggregate building data by census municipality boundaries (Project: bologna_energy_hub, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B3_building_census_aggregation_var_162", "complexity_level": "B", "tags": ["cim_building", "cim_wizard", "freq_high", "aggregation", "realistic_params", "demographic", "cim_census"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "commercial", "hvac_type": "district_heating", "region": "Lazio", "province": "Roma", "voltage_kv": 0.4, "srid": 32633, "buffer_distance": 1000, "min_area": 355, "max_area": 2287, "min_height": 3, "max_height": 54, "min_people": 2, "max_people": 9, "year": 1954, "census_id": 6852807, "lon": 16.342518, "lat": 38.209888, "limit": 25, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 10, "min_points": 8, "min_areas": 10, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.925093"}
{"id": "cim_stage1_002890", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze education levels and university graduation rates in census areas (Project: milan_smart_district, Scenario: efficiency_max)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.COMUNE,\n       c.P47 as university_graduates,\n       c.P48 as high_school_graduates,\n       c.P50 as elementary_only,\n       c.P52 as illiterate,\n       c.P46 as population_6_plus,\n       ROUND((c.P47::float / NULLIF(c.P46, 0)) * 100, 1) as university_rate\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Toscana'\n  AND c.P46 >= 1000\nORDER BY university_rate DESC\nLIMIT 100;", "sql_spatialite": "SELECT c.SEZ2011, c.COMUNE,\n       c.P47 as university_graduates,\n       c.P48 as high_school_graduates,\n       c.P50 as elementary_only,\n       c.P52 as illiterate,\n       c.P46 as population_6_plus,\n       ROUND((c.P47::float / NULLIF(c.P46, 0)) * 100, 1) as university_rate\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Toscana'\n  AND c.P46 >= 1000\nORDER BY university_rate DESC\nLIMIT 100;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P52", "cim_census.census_geo", "c.REGIONE", "c.P48", "c.SEZ2011", "c.COMUNE", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P47", "census_geo", "REGIONE", "P48", "P46", "P50", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 9, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P52", "cim_census.census_geo", "c.REGIONE", "c.P48", "c.SEZ2011", "c.COMUNE", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P47", "census_geo", "REGIONE", "P48", "P46", "P50", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze education levels and university graduation rates in census areas (Project: milan_smart_district, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A3_education_levels_var_67", "complexity_level": "A", "tags": ["cim_census", "cim_wizard", "realistic_params", "literacy", "education", "qualification"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "grid_modernization", "building_type": "mixed_use", "hvac_type": "hybrid", "region": "Emilia-Romagna", "province": "Firenze", "voltage_kv": 10, "srid": 3857, "buffer_distance": 1000, "min_area": 445, "max_area": 1309, "min_height": 7, "max_height": 82, "min_people": 1, "max_people": 7, "year": 1995, "census_id": 8711301, "lon": 8.313539, "lat": 46.340198, "limit": 100, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 20, "min_points": 5, "min_areas": 10, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.931993"}
{"id": "cim_stage1_002900", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze education levels and university graduation rates in census areas (Project: florence_heritage_area, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.COMUNE,\n       c.P47 as university_graduates,\n       c.P48 as high_school_graduates,\n       c.P50 as elementary_only,\n       c.P52 as illiterate,\n       c.P46 as population_6_plus,\n       ROUND((c.P47::float / NULLIF(c.P46, 0)) * 100, 1) as university_rate\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Emilia-Romagna'\n  AND c.P46 >= 1000\nORDER BY university_rate DESC\nLIMIT 25;", "sql_spatialite": "SELECT c.SEZ2011, c.COMUNE,\n       c.P47 as university_graduates,\n       c.P48 as high_school_graduates,\n       c.P50 as elementary_only,\n       c.P52 as illiterate,\n       c.P46 as population_6_plus,\n       ROUND((c.P47::float / NULLIF(c.P46, 0)) * 100, 1) as university_rate\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Emilia-Romagna'\n  AND c.P46 >= 1000\nORDER BY university_rate DESC\nLIMIT 25;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P52", "cim_census.census_geo", "c.REGIONE", "c.P48", "c.SEZ2011", "c.COMUNE", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P47", "census_geo", "REGIONE", "P48", "P46", "P50", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 9, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P52", "cim_census.census_geo", "c.REGIONE", "c.P48", "c.SEZ2011", "c.COMUNE", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P47", "census_geo", "REGIONE", "P48", "P46", "P50", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze education levels and university graduation rates in census areas (Project: florence_heritage_area, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A3_education_levels_var_77", "complexity_level": "A", "tags": ["cim_census", "cim_wizard", "realistic_params", "literacy", "education", "qualification"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "efficiency_max", "building_type": "residential", "hvac_type": "gas_boiler", "region": "Toscana", "province": "Bologna", "voltage_kv": 10, "srid": 3857, "buffer_distance": 500, "min_area": 369, "max_area": 3039, "min_height": 5, "max_height": 29, "min_people": 3, "max_people": 15, "year": 2017, "census_id": 8691263, "lon": 16.311486, "lat": 40.873252, "limit": 10, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 1000, "min_buildings": 10, "min_points": 3, "min_areas": 3, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.932545"}
{"id": "cim_stage1_002993", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze education levels and university graduation rates in census areas (Project: turin_innovation_zone, Scenario: renewable_2030)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.COMUNE,\n       c.P47 as university_graduates,\n       c.P48 as high_school_graduates,\n       c.P50 as elementary_only,\n       c.P52 as illiterate,\n       c.P46 as population_6_plus,\n       ROUND((c.P47::float / NULLIF(c.P46, 0)) * 100, 1) as university_rate\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Lazio'\n  AND c.P46 >= 1000\nORDER BY university_rate DESC\nLIMIT 25;", "sql_spatialite": "SELECT c.SEZ2011, c.COMUNE,\n       c.P47 as university_graduates,\n       c.P48 as high_school_graduates,\n       c.P50 as elementary_only,\n       c.P52 as illiterate,\n       c.P46 as population_6_plus,\n       ROUND((c.P47::float / NULLIF(c.P46, 0)) * 100, 1) as university_rate\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Lazio'\n  AND c.P46 >= 1000\nORDER BY university_rate DESC\nLIMIT 25;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P52", "cim_census.census_geo", "c.REGIONE", "c.P48", "c.SEZ2011", "c.COMUNE", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P47", "census_geo", "REGIONE", "P48", "P46", "P50", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 9, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P52", "cim_census.census_geo", "c.REGIONE", "c.P48", "c.SEZ2011", "c.COMUNE", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P47", "census_geo", "REGIONE", "P48", "P46", "P50", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze education levels and university graduation rates in census areas (Project: turin_innovation_zone, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A3_education_levels_var_170", "complexity_level": "A", "tags": ["cim_census", "cim_wizard", "realistic_params", "literacy", "education", "qualification"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "grid_modernization", "building_type": "industrial", "hvac_type": "gas_boiler", "region": "Lazio", "province": "Roma", "voltage_kv": 20, "srid": 3857, "buffer_distance": 1000, "min_area": 332, "max_area": 4461, "min_height": 4, "max_height": 41, "min_people": 2, "max_people": 15, "year": 2001, "census_id": 6408922, "lon": 15.305463, "lat": 37.385758, "limit": 25, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 2000, "min_buildings": 5, "min_points": 8, "min_areas": 3, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.937833"}
{"id": "cim_stage1_003016", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze education levels and university graduation rates in census areas (Project: florence_heritage_area, Scenario: baseline)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.COMUNE,\n       c.P47 as university_graduates,\n       c.P48 as high_school_graduates,\n       c.P50 as elementary_only,\n       c.P52 as illiterate,\n       c.P46 as population_6_plus,\n       ROUND((c.P47::float / NULLIF(c.P46, 0)) * 100, 1) as university_rate\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Piemonte'\n  AND c.P46 >= 1000\nORDER BY university_rate DESC\nLIMIT 50;", "sql_spatialite": "SELECT c.SEZ2011, c.COMUNE,\n       c.P47 as university_graduates,\n       c.P48 as high_school_graduates,\n       c.P50 as elementary_only,\n       c.P52 as illiterate,\n       c.P46 as population_6_plus,\n       ROUND((c.P47::float / NULLIF(c.P46, 0)) * 100, 1) as university_rate\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Piemonte'\n  AND c.P46 >= 1000\nORDER BY university_rate DESC\nLIMIT 50;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P52", "cim_census.census_geo", "c.REGIONE", "c.P48", "c.SEZ2011", "c.COMUNE", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P47", "census_geo", "REGIONE", "P48", "P46", "P50", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 9, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P52", "cim_census.census_geo", "c.REGIONE", "c.P48", "c.SEZ2011", "c.COMUNE", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P47", "census_geo", "REGIONE", "P48", "P46", "P50", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze education levels and university graduation rates in census areas (Project: florence_heritage_area, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A3_education_levels_var_193", "complexity_level": "A", "tags": ["cim_census", "cim_wizard", "realistic_params", "literacy", "education", "qualification"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "renewable_2030", "building_type": "industrial", "hvac_type": "gas_boiler", "region": "Lombardia", "province": "Bologna", "voltage_kv": 132, "srid": 32632, "buffer_distance": 2000, "min_area": 295, "max_area": 3429, "min_height": 8, "max_height": 27, "min_people": 5, "max_people": 13, "year": 1966, "census_id": 3240277, "lon": 16.672551, "lat": 39.191256, "limit": 25, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 5000, "min_buildings": 20, "min_points": 5, "min_areas": 10, "cluster_distance": 5000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.939212"}
{"id": "cim_stage1_003171", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze building height distribution and interior complexity in census areas (Project: milan_smart_district, Scenario: renewable_2030)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.PROVINCIA, c.COMUNE,\n       c.E17 as single_floor_buildings,\n       c.E18 as two_floor_buildings,\n       c.E19 as three_floor_buildings,\n       c.E20 as four_plus_floor_buildings,\n       c.E21 as single_interior_buildings,\n       c.E22 as two_interior_buildings,\n       c.E26 as buildings_16plus_interiors,\n       c.E1 as total_buildings,\n       ROUND((c.E20::float / NULLIF(c.E1, 0)) * 100, 1) as high_rise_percentage,\n       ROUND((c.E26::float / NULLIF(c.E1, 0)) * 100, 1) as large_complex_percentage\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Bologna'\n  AND c.E1 >= 5\nORDER BY high_rise_percentage DESC\nLIMIT 50;", "sql_spatialite": "SELECT c.SEZ2011, c.PROVINCIA, c.COMUNE,\n       c.E17 as single_floor_buildings,\n       c.E18 as two_floor_buildings,\n       c.E19 as three_floor_buildings,\n       c.E20 as four_plus_floor_buildings,\n       c.E21 as single_interior_buildings,\n       c.E22 as two_interior_buildings,\n       c.E26 as buildings_16plus_interiors,\n       c.E1 as total_buildings,\n       ROUND((c.E20::float / NULLIF(c.E1, 0)) * 100, 1) as high_rise_percentage,\n       ROUND((c.E26::float / NULLIF(c.E1, 0)) * 100, 1) as large_complex_percentage\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Bologna'\n  AND c.E1 >= 5\nORDER BY high_rise_percentage DESC\nLIMIT 50;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.E21", "c.E20", "c.PROVINCIA", "cim_census.census_geo", "c.SEZ2011", "c.E22", "c.E19", "c.COMUNE", "c.E26", "c.E18", "c.E17", "c.E1"], "columns": ["E26", "SEZ2011", "E20", "E18", "E17", "E21", "E19", "census_geo", "E22", "PROVINCIA", "COMUNE", "E1"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 12, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.E21", "c.E20", "c.PROVINCIA", "cim_census.census_geo", "c.SEZ2011", "c.E22", "c.E19", "c.COMUNE", "c.E26", "c.E18", "c.E17", "c.E1"], "columns": ["E26", "SEZ2011", "E20", "E18", "E17", "E21", "E19", "census_geo", "E22", "PROVINCIA", "COMUNE", "E1"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze building height distribution and interior complexity in census areas (Project: milan_smart_district, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A6_building_structure_analysis_var_148", "complexity_level": "A", "tags": ["cim_wizard", "realistic_params", "building_structure", "floor_distribution", "cim_census", "interior_analysis"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "zero_emission", "building_type": "industrial", "hvac_type": "district_heating", "region": "Piemonte", "province": "Roma", "voltage_kv": 0.4, "srid": 4326, "buffer_distance": 2000, "min_area": 282, "max_area": 3338, "min_height": 6, "max_height": 88, "min_people": 5, "max_people": 14, "year": 2010, "census_id": 3723979, "lon": 17.969029, "lat": 44.52159, "limit": 50, "cluster_count": 3, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 10, "min_points": 8, "min_areas": 5, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.950409"}
{"id": "cim_stage1_003182", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze building height distribution and interior complexity in census areas (Project: rome_green_quarter, Scenario: zero_emission)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.PROVINCIA, c.COMUNE,\n       c.E17 as single_floor_buildings,\n       c.E18 as two_floor_buildings,\n       c.E19 as three_floor_buildings,\n       c.E20 as four_plus_floor_buildings,\n       c.E21 as single_interior_buildings,\n       c.E22 as two_interior_buildings,\n       c.E26 as buildings_16plus_interiors,\n       c.E1 as total_buildings,\n       ROUND((c.E20::float / NULLIF(c.E1, 0)) * 100, 1) as high_rise_percentage,\n       ROUND((c.E26::float / NULLIF(c.E1, 0)) * 100, 1) as large_complex_percentage\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Roma'\n  AND c.E1 >= 5\nORDER BY high_rise_percentage DESC\nLIMIT 10;", "sql_spatialite": "SELECT c.SEZ2011, c.PROVINCIA, c.COMUNE,\n       c.E17 as single_floor_buildings,\n       c.E18 as two_floor_buildings,\n       c.E19 as three_floor_buildings,\n       c.E20 as four_plus_floor_buildings,\n       c.E21 as single_interior_buildings,\n       c.E22 as two_interior_buildings,\n       c.E26 as buildings_16plus_interiors,\n       c.E1 as total_buildings,\n       ROUND((c.E20::float / NULLIF(c.E1, 0)) * 100, 1) as high_rise_percentage,\n       ROUND((c.E26::float / NULLIF(c.E1, 0)) * 100, 1) as large_complex_percentage\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Roma'\n  AND c.E1 >= 5\nORDER BY high_rise_percentage DESC\nLIMIT 10;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.E21", "c.E20", "c.PROVINCIA", "cim_census.census_geo", "c.SEZ2011", "c.E22", "c.E19", "c.COMUNE", "c.E26", "c.E18", "c.E17", "c.E1"], "columns": ["E26", "SEZ2011", "E20", "E18", "E17", "E21", "E19", "census_geo", "E22", "PROVINCIA", "COMUNE", "E1"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 12, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.E21", "c.E20", "c.PROVINCIA", "cim_census.census_geo", "c.SEZ2011", "c.E22", "c.E19", "c.COMUNE", "c.E26", "c.E18", "c.E17", "c.E1"], "columns": ["E26", "SEZ2011", "E20", "E18", "E17", "E21", "E19", "census_geo", "E22", "PROVINCIA", "COMUNE", "E1"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze building height distribution and interior complexity in census areas (Project: rome_green_quarter, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A6_building_structure_analysis_var_159", "complexity_level": "A", "tags": ["cim_wizard", "realistic_params", "building_structure", "floor_distribution", "cim_census", "interior_analysis"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "renewable_2030", "building_type": "mixed_use", "hvac_type": "hybrid", "region": "Toscana", "province": "Torino", "voltage_kv": 10, "srid": 32632, "buffer_distance": 2000, "min_area": 311, "max_area": 2923, "min_height": 9, "max_height": 92, "min_people": 2, "max_people": 15, "year": 2022, "census_id": 8370799, "lon": 14.62301, "lat": 43.201167, "limit": 25, "cluster_count": 5, "min_cluster_size": 5, "max_distance": 500, "min_buildings": 20, "min_points": 8, "min_areas": 5, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.951150"}
{"id": "cim_stage1_003202", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze building height distribution and interior complexity in census areas (Project: milan_smart_district, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.PROVINCIA, c.COMUNE,\n       c.E17 as single_floor_buildings,\n       c.E18 as two_floor_buildings,\n       c.E19 as three_floor_buildings,\n       c.E20 as four_plus_floor_buildings,\n       c.E21 as single_interior_buildings,\n       c.E22 as two_interior_buildings,\n       c.E26 as buildings_16plus_interiors,\n       c.E1 as total_buildings,\n       ROUND((c.E20::float / NULLIF(c.E1, 0)) * 100, 1) as high_rise_percentage,\n       ROUND((c.E26::float / NULLIF(c.E1, 0)) * 100, 1) as large_complex_percentage\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Milano'\n  AND c.E1 >= 10\nORDER BY high_rise_percentage DESC\nLIMIT 25;", "sql_spatialite": "SELECT c.SEZ2011, c.PROVINCIA, c.COMUNE,\n       c.E17 as single_floor_buildings,\n       c.E18 as two_floor_buildings,\n       c.E19 as three_floor_buildings,\n       c.E20 as four_plus_floor_buildings,\n       c.E21 as single_interior_buildings,\n       c.E22 as two_interior_buildings,\n       c.E26 as buildings_16plus_interiors,\n       c.E1 as total_buildings,\n       ROUND((c.E20::float / NULLIF(c.E1, 0)) * 100, 1) as high_rise_percentage,\n       ROUND((c.E26::float / NULLIF(c.E1, 0)) * 100, 1) as large_complex_percentage\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Milano'\n  AND c.E1 >= 10\nORDER BY high_rise_percentage DESC\nLIMIT 25;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.E21", "c.E20", "c.PROVINCIA", "cim_census.census_geo", "c.SEZ2011", "c.E22", "c.E19", "c.COMUNE", "c.E26", "c.E18", "c.E17", "c.E1"], "columns": ["E26", "SEZ2011", "E20", "E18", "E17", "E21", "E19", "census_geo", "E22", "PROVINCIA", "COMUNE", "E1"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 12, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.E21", "c.E20", "c.PROVINCIA", "cim_census.census_geo", "c.SEZ2011", "c.E22", "c.E19", "c.COMUNE", "c.E26", "c.E18", "c.E17", "c.E1"], "columns": ["E26", "SEZ2011", "E20", "E18", "E17", "E21", "E19", "census_geo", "E22", "PROVINCIA", "COMUNE", "E1"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze building height distribution and interior complexity in census areas (Project: milan_smart_district, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A6_building_structure_analysis_var_179", "complexity_level": "A", "tags": ["cim_wizard", "realistic_params", "building_structure", "floor_distribution", "cim_census", "interior_analysis"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "grid_modernization", "building_type": "industrial", "hvac_type": "electric", "region": "Piemonte", "province": "Milano", "voltage_kv": 400, "srid": 32633, "buffer_distance": 100, "min_area": 132, "max_area": 3189, "min_height": 7, "max_height": 81, "min_people": 4, "max_people": 7, "year": 1982, "census_id": 3967734, "lon": 17.23023, "lat": 42.405502, "limit": 25, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 2000, "min_buildings": 10, "min_points": 3, "min_areas": 10, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.952492"}
{"id": "cim_stage1_003320", "database_id": 1, "database_name": "cim_wizard", "question": "Correlation analysis between education levels and employment outcomes for socioeconomic profiling (Project: milan_smart_district, Scenario: baseline)", "question_tone": "TEMPORAL", "sql_postgis": "WITH education_employment AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P46 as population_6_plus,\n         c.P47 as university_graduates,\n         c.P48 as high_school_graduates,\n         c.P49 as middle_school,\n         c.P50 as elementary_only,\n         c.P52 as illiterate,\n         c.P60 as labor_force,\n         c.P61 as employed,\n         c.P62 as unemployed,\n         c.P139 as income_earners\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P46 > 0 AND c.P60 > 0\n),\neducation_employment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((university_graduates::float / NULLIF(population_6_plus, 0)) * 100, 1) as university_rate,\n         ROUND((high_school_graduates::float / NULLIF(population_6_plus, 0)) * 100, 1) as high_school_rate,\n         ROUND((illiterate::float / NULLIF(population_6_plus, 0)) * 100, 1) as illiteracy_rate,\n         ROUND((unemployed::float / NULLIF(labor_force, 0)) * 100, 1) as unemployment_rate,\n         ROUND((income_earners::float / NULLIF(employed, 0)) * 100, 1) as income_earner_ratio,\n         university_graduates, employed, income_earners\n  FROM education_employment\n),\ncorrelation_analysis AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         university_rate, unemployment_rate, income_earner_ratio,\n         CASE \n           WHEN university_rate > 20 AND unemployment_rate < 5 THEN 'HIGH_EDUCATION_LOW_UNEMPLOYMENT'\n           WHEN university_rate > 15 AND income_earner_ratio > 90 THEN 'EDUCATED_HIGH_INCOME'\n           WHEN university_rate < 5 AND unemployment_rate > 15 THEN 'LOW_EDUCATION_HIGH_UNEMPLOYMENT'\n           WHEN unemployment_rate > 20 THEN 'ECONOMIC_DISTRESS'\n           ELSE 'AVERAGE_PROFILE'\n         END as socioeconomic_profile\n  FROM education_employment_indicators\n)\nSELECT socioeconomic_profile,\n       COUNT(*) as areas_count,\n       ROUND(AVG(university_rate), 1) as avg_university_rate,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(income_earner_ratio), 1) as avg_income_ratio\nFROM correlation_analysis\nGROUP BY socioeconomic_profile\nORDER BY avg_university_rate DESC;", "sql_spatialite": "WITH education_employment AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P46 as population_6_plus,\n         c.P47 as university_graduates,\n         c.P48 as high_school_graduates,\n         c.P49 as middle_school,\n         c.P50 as elementary_only,\n         c.P52 as illiterate,\n         c.P60 as labor_force,\n         c.P61 as employed,\n         c.P62 as unemployed,\n         c.P139 as income_earners\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P46 > 0 AND c.P60 > 0\n),\neducation_employment_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         ROUND((university_graduates::float / NULLIF(population_6_plus, 0)) * 100, 1) as university_rate,\n         ROUND((high_school_graduates::float / NULLIF(population_6_plus, 0)) * 100, 1) as high_school_rate,\n         ROUND((illiterate::float / NULLIF(population_6_plus, 0)) * 100, 1) as illiteracy_rate,\n         ROUND((unemployed::float / NULLIF(labor_force, 0)) * 100, 1) as unemployment_rate,\n         ROUND((income_earners::float / NULLIF(employed, 0)) * 100, 1) as income_earner_ratio,\n         university_graduates, employed, income_earners\n  FROM education_employment\n),\ncorrelation_analysis AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         university_rate, unemployment_rate, income_earner_ratio,\n         CASE \n           WHEN university_rate > 20 AND unemployment_rate < 5 THEN 'HIGH_EDUCATION_LOW_UNEMPLOYMENT'\n           WHEN university_rate > 15 AND income_earner_ratio > 90 THEN 'EDUCATED_HIGH_INCOME'\n           WHEN university_rate < 5 AND unemployment_rate > 15 THEN 'LOW_EDUCATION_HIGH_UNEMPLOYMENT'\n           WHEN unemployment_rate > 20 THEN 'ECONOMIC_DISTRESS'\n           ELSE 'AVERAGE_PROFILE'\n         END as socioeconomic_profile\n  FROM education_employment_indicators\n)\nSELECT socioeconomic_profile,\n       COUNT(*) as areas_count,\n       ROUND(AVG(university_rate), 1) as avg_university_rate,\n       ROUND(AVG(unemployment_rate), 1) as avg_unemployment_rate,\n       ROUND(AVG(income_earner_ratio), 1) as avg_income_ratio\nFROM correlation_analysis\nGROUP BY socioeconomic_profile\nORDER BY avg_university_rate DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["education_employment_indicators", "c.P52", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P48", "c.P49", "c.P62", "c.COMUNE", "correlation_analysis", "education_employment", "c.P60", "c.P139", "c.P61", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P60", "P139", "P61", "P62", "P47", "REGIONE", "census_geo", "P49", "PROVINCIA", "P48", "P46", "P50", "COMUNE"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 18, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["education_employment_indicators", "c.P52", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.P48", "c.P49", "c.P62", "c.COMUNE", "correlation_analysis", "education_employment", "c.P60", "c.P139", "c.P61", "c.P46", "c.P50", "c.P47"], "columns": ["P52", "SEZ2011", "P60", "P139", "P61", "P62", "P47", "REGIONE", "census_geo", "P49", "PROVINCIA", "P48", "P46", "P50", "COMUNE"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Correlation analysis between education levels and employment outcomes for socioeconomic profiling (Project: milan_smart_district, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B5_education_employment_correlation_var_97", "complexity_level": "B", "tags": ["correlation", "cim_wizard", "realistic_params", "socioeconomic_profiling", "education", "employment", "cim_census"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "baseline", "building_type": "residential", "hvac_type": "district_heating", "region": "Toscana", "province": "Milano", "voltage_kv": 220, "srid": 32632, "buffer_distance": 100, "min_area": 386, "max_area": 2999, "min_height": 9, "max_height": 37, "min_people": 1, "max_people": 20, "year": 2003, "census_id": 9302901, "lon": 10.513434, "lat": 38.995318, "limit": 100, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 10, "min_points": 5, "min_areas": 10, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:39.964639"}
{"id": "cim_stage1_003483", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate building statistics grouped by type for a project scenario (Project: milan_smart_district, Scenario: efficiency_max)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT bp.type as building_type,\n       COUNT(*) as building_count,\n       AVG(bp.height) as avg_height,\n       AVG(bp.area) as avg_area,\n       SUM(bp.n_people) as total_population\nFROM cim_vector.building_properties bp\nJOIN cim_vector.building b ON bp.building_id = b.building_id\nWHERE bp.project_id = 'milan_smart_district' \n  AND bp.scenario_id = 'efficiency_max'\n  AND b.building_geometry IS NOT NULL\nGROUP BY bp.type\nORDER BY building_count DESC;", "sql_spatialite": "SELECT bp.type as building_type,\n       COUNT(*) as building_count,\n       AVG(bp.height) as avg_height,\n       AVG(bp.area) as avg_area,\n       SUM(bp.n_people) as total_population\nFROM cim_vector.building_properties bp\nJOIN cim_vector.building b ON bp.building_id = b.building_id\nWHERE bp.project_id = 'milan_smart_district' \n  AND bp.scenario_id = 'efficiency_max'\n  AND b.building_geometry IS NOT NULL\nGROUP BY bp.type\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": false, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 11, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate building statistics grouped by type for a project scenario (Project: milan_smart_district, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B1_building_stats_by_type_var_60", "complexity_level": "B", "tags": ["cim_building", "grouping", "aggregation", "realistic_params", "statistics", "cim_wizard"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "grid_modernization", "building_type": "mixed_use", "hvac_type": "electric", "region": "Lazio", "province": "Firenze", "voltage_kv": 20, "srid": 32632, "buffer_distance": 2000, "min_area": 416, "max_area": 2102, "min_height": 10, "max_height": 79, "min_people": 5, "max_people": 9, "year": 1988, "census_id": 2873517, "lon": 15.436117, "lat": 45.206665, "limit": 25, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 500, "min_buildings": 20, "min_points": 3, "min_areas": 3, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.979672"}
{"id": "cim_stage1_003488", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate building statistics grouped by type for a project scenario (Project: bologna_energy_hub, Scenario: efficiency_max)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT bp.type as building_type,\n       COUNT(*) as building_count,\n       AVG(bp.height) as avg_height,\n       AVG(bp.area) as avg_area,\n       SUM(bp.n_people) as total_population\nFROM cim_vector.building_properties bp\nJOIN cim_vector.building b ON bp.building_id = b.building_id\nWHERE bp.project_id = 'bologna_energy_hub' \n  AND bp.scenario_id = 'efficiency_max'\n  AND b.building_geometry IS NOT NULL\nGROUP BY bp.type\nORDER BY building_count DESC;", "sql_spatialite": "SELECT bp.type as building_type,\n       COUNT(*) as building_count,\n       AVG(bp.height) as avg_height,\n       AVG(bp.area) as avg_area,\n       SUM(bp.n_people) as total_population\nFROM cim_vector.building_properties bp\nJOIN cim_vector.building b ON bp.building_id = b.building_id\nWHERE bp.project_id = 'bologna_energy_hub' \n  AND bp.scenario_id = 'efficiency_max'\n  AND b.building_geometry IS NOT NULL\nGROUP BY bp.type\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": false, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 11, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate building statistics grouped by type for a project scenario (Project: bologna_energy_hub, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B1_building_stats_by_type_var_65", "complexity_level": "B", "tags": ["cim_building", "grouping", "aggregation", "realistic_params", "statistics", "cim_wizard"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "renewable_2030", "building_type": "residential", "hvac_type": "district_heating", "region": "Lazio", "province": "Bologna", "voltage_kv": 20, "srid": 32632, "buffer_distance": 100, "min_area": 354, "max_area": 4355, "min_height": 6, "max_height": 48, "min_people": 5, "max_people": 6, "year": 2015, "census_id": 8430501, "lon": 17.132824, "lat": 39.035004, "limit": 50, "cluster_count": 8, "min_cluster_size": 10, "max_distance": 500, "min_buildings": 10, "min_points": 8, "min_areas": 5, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.979964"}
{"id": "cim_stage1_003489", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate building statistics grouped by type for a project scenario (Project: florence_heritage_area, Scenario: baseline)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT bp.type as building_type,\n       COUNT(*) as building_count,\n       AVG(bp.height) as avg_height,\n       AVG(bp.area) as avg_area,\n       SUM(bp.n_people) as total_population\nFROM cim_vector.building_properties bp\nJOIN cim_vector.building b ON bp.building_id = b.building_id\nWHERE bp.project_id = 'florence_heritage_area' \n  AND bp.scenario_id = 'baseline'\n  AND b.building_geometry IS NOT NULL\nGROUP BY bp.type\nORDER BY building_count DESC;", "sql_spatialite": "SELECT bp.type as building_type,\n       COUNT(*) as building_count,\n       AVG(bp.height) as avg_height,\n       AVG(bp.area) as avg_area,\n       SUM(bp.n_people) as total_population\nFROM cim_vector.building_properties bp\nJOIN cim_vector.building b ON bp.building_id = b.building_id\nWHERE bp.project_id = 'florence_heritage_area' \n  AND bp.scenario_id = 'baseline'\n  AND b.building_geometry IS NOT NULL\nGROUP BY bp.type\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": false, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 11, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate building statistics grouped by type for a project scenario (Project: florence_heritage_area, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B1_building_stats_by_type_var_66", "complexity_level": "B", "tags": ["cim_building", "grouping", "aggregation", "realistic_params", "statistics", "cim_wizard"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "renewable_2030", "building_type": "mixed_use", "hvac_type": "hybrid", "region": "Emilia-Romagna", "province": "Firenze", "voltage_kv": 20, "srid": 32632, "buffer_distance": 2000, "min_area": 342, "max_area": 3364, "min_height": 8, "max_height": 84, "min_people": 1, "max_people": 16, "year": 1960, "census_id": 1926003, "lon": 12.288032, "lat": 37.389345, "limit": 100, "cluster_count": 5, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 20, "min_points": 8, "min_areas": 3, "cluster_distance": 5000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.980021"}
{"id": "cim_stage1_003543", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate building statistics grouped by type for a project scenario (Project: turin_innovation_zone, Scenario: renewable_2030)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT bp.type as building_type,\n       COUNT(*) as building_count,\n       AVG(bp.height) as avg_height,\n       AVG(bp.area) as avg_area,\n       SUM(bp.n_people) as total_population\nFROM cim_vector.building_properties bp\nJOIN cim_vector.building b ON bp.building_id = b.building_id\nWHERE bp.project_id = 'turin_innovation_zone' \n  AND bp.scenario_id = 'renewable_2030'\n  AND b.building_geometry IS NOT NULL\nGROUP BY bp.type\nORDER BY building_count DESC;", "sql_spatialite": "SELECT bp.type as building_type,\n       COUNT(*) as building_count,\n       AVG(bp.height) as avg_height,\n       AVG(bp.area) as avg_area,\n       SUM(bp.n_people) as total_population\nFROM cim_vector.building_properties bp\nJOIN cim_vector.building b ON bp.building_id = b.building_id\nWHERE bp.project_id = 'turin_innovation_zone' \n  AND bp.scenario_id = 'renewable_2030'\n  AND b.building_geometry IS NOT NULL\nGROUP BY bp.type\nORDER BY building_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": false, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "1-2", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "cim_vector", "table_count": 11, "schema_count": 3}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "bp", "b"], "tables": ["b.building_geometry", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "bp.area", "bp.scenario_id", "bp.n_people", "b.building_id", "bp.building_id", "bp.type"], "columns": ["type", "height", "building_geometry", "n_people", "area", "building", "building_properties"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate building statistics grouped by type for a project scenario (Project: turin_innovation_zone, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_B1_building_stats_by_type_var_120", "complexity_level": "B", "tags": ["cim_building", "grouping", "aggregation", "realistic_params", "statistics", "cim_wizard"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "zero_emission", "building_type": "mixed_use", "hvac_type": "hybrid", "region": "Toscana", "province": "Milano", "voltage_kv": 220, "srid": 4326, "buffer_distance": 2000, "min_area": 172, "max_area": 3769, "min_height": 3, "max_height": 45, "min_people": 1, "max_people": 17, "year": 2020, "census_id": 8655950, "lon": 10.789911, "lat": 45.614505, "limit": 25, "cluster_count": 5, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 20, "min_points": 5, "min_areas": 3, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:39.984326"}
{"id": "cim_stage1_003752", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate age dependency ratio (children under 5 + elderly 65+) for census areas in a province (Project: milan_smart_district, Scenario: zero_emission)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA,\n       c.P14 as children_under_5,\n       c.P27 + c.P28 + c.P29 as elderly_65_plus,\n       c.P1 as total_population,\n       ROUND(((c.P14 + c.P27 + c.P28 + c.P29)::float / NULLIF(c.P1, 0)) * 100, 1) as dependency_ratio\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Firenze'\n  AND c.P1 > 0\nORDER BY dependency_ratio DESC\nLIMIT 10;", "sql_spatialite": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA,\n       c.P14 as children_under_5,\n       c.P27 + c.P28 + c.P29 as elderly_65_plus,\n       c.P1 as total_population,\n       ROUND(((c.P14 + c.P27 + c.P28 + c.P29)::float / NULLIF(c.P1, 0)) * 100, 1) as dependency_ratio\nFROM cim_census.census_geo c\nWHERE c.PROVINCIA = 'Firenze'\n  AND c.P1 > 0\nORDER BY dependency_ratio DESC\nLIMIT 10;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P29", "cim_census.census_geo", "c.P14", "c.P27", "c.SEZ2011", "c.PROVINCIA", "c.REGIONE", "c.P28", "c.P1"], "columns": ["P27", "SEZ2011", "P28", "P1", "P29", "REGIONE", "census_geo", "PROVINCIA", "P14"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 9, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P29", "cim_census.census_geo", "c.P14", "c.P27", "c.SEZ2011", "c.PROVINCIA", "c.REGIONE", "c.P28", "c.P1"], "columns": ["P27", "SEZ2011", "P28", "P1", "P29", "REGIONE", "census_geo", "PROVINCIA", "P14"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate age dependency ratio (children under 5 + elderly 65+) for census areas in a province (Project: milan_smart_district, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A2_age_dependency_ratio_var_129", "complexity_level": "A", "tags": ["cim_wizard", "dependency", "realistic_params", "demographics", "age_analysis", "cim_census"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "zero_emission", "building_type": "public", "hvac_type": "heat_pump", "region": "Emilia-Romagna", "province": "Roma", "voltage_kv": 20, "srid": 3857, "buffer_distance": 1000, "min_area": 350, "max_area": 4665, "min_height": 9, "max_height": 81, "min_people": 2, "max_people": 8, "year": 1960, "census_id": 7735465, "lon": 13.558765, "lat": 38.615972, "limit": 10, "cluster_count": 5, "min_cluster_size": 3, "max_distance": 2000, "min_buildings": 20, "min_points": 3, "min_areas": 10, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:39.996434"}
{"id": "cim_stage1_003858", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze demographic pyramid and aging patterns across provinces with dependency burden calculations (Project: rome_green_quarter, Scenario: renewable_2030)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH age_groups AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as adults_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 > 0\n),\ndemographic_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         youth_0_14, adults_15_64, elderly_65_plus, total_population,\n         ROUND((youth_0_14::float / NULLIF(total_population, 0)) * 100, 1) as youth_percentage,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as aging_index,\n         ROUND(((youth_0_14 + elderly_65_plus)::float / NULLIF(adults_15_64, 0)) * 100, 1) as dependency_burden\n  FROM age_groups\n)\nSELECT PROVINCIA, \n       COUNT(*) as census_sections,\n       ROUND(AVG(youth_percentage), 1) as avg_youth_pct,\n       ROUND(AVG(aging_index), 1) as avg_aging_index,\n       ROUND(AVG(dependency_burden), 1) as avg_dependency_burden,\n       SUM(total_population) as total_provincial_population\nFROM demographic_indicators\nGROUP BY PROVINCIA\nORDER BY avg_aging_index DESC;", "sql_spatialite": "WITH age_groups AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as adults_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 > 0\n),\ndemographic_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         youth_0_14, adults_15_64, elderly_65_plus, total_population,\n         ROUND((youth_0_14::float / NULLIF(total_population, 0)) * 100, 1) as youth_percentage,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as aging_index,\n         ROUND(((youth_0_14 + elderly_65_plus)::float / NULLIF(adults_15_64, 0)) * 100, 1) as dependency_burden\n  FROM age_groups\n)\nSELECT PROVINCIA, \n       COUNT(*) as census_sections,\n       ROUND(AVG(youth_percentage), 1) as avg_youth_pct,\n       ROUND(AVG(aging_index), 1) as avg_aging_index,\n       ROUND(AVG(dependency_burden), 1) as avg_dependency_burden,\n       SUM(total_population) as total_provincial_population\nFROM demographic_indicators\nGROUP BY PROVINCIA\nORDER BY avg_aging_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P18", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "c.P20", "c.COMUNE", "c.P1", "c.P25", "c.P23", "c.P19", "c.P22", "c.P14", "c.PROVINCIA", "c.P21", "age_groups", "c.P15", "c.P17", "c.P29", "c.P26", "c.P28", "c.P24", "demographic_indicators", "c.P16"], "columns": ["P27", "P1", "P29", "COMUNE", "P21", "P26", "P23", "P24", "census_geo", "P16", "P14", "SEZ2011", "P18", "PROVINCIA", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 24, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P18", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "c.P20", "c.COMUNE", "c.P1", "c.P25", "c.P23", "c.P19", "c.P22", "c.P14", "c.PROVINCIA", "c.P21", "age_groups", "c.P15", "c.P17", "c.P29", "c.P26", "c.P28", "c.P24", "demographic_indicators", "c.P16"], "columns": ["P27", "P1", "P29", "COMUNE", "P21", "P26", "P23", "P24", "census_geo", "P16", "P14", "SEZ2011", "P18", "PROVINCIA", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze demographic pyramid and aging patterns across provinces with dependency burden calculations (Project: rome_green_quarter, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B1_demographic_pyramid_analysis_var_35", "complexity_level": "B", "tags": ["cim_wizard", "realistic_params", "aggregation", "aging", "demographics", "statistical_analysis", "cim_census"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "zero_emission", "building_type": "commercial", "hvac_type": "heat_pump", "region": "Lazio", "province": "Roma", "voltage_kv": 10, "srid": 32633, "buffer_distance": 100, "min_area": 215, "max_area": 4106, "min_height": 4, "max_height": 96, "min_people": 5, "max_people": 14, "year": 1988, "census_id": 1222475, "lon": 17.16339, "lat": 40.246421, "limit": 100, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 20, "min_points": 5, "min_areas": 5, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.003451"}
{"id": "cim_stage1_003940", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze demographic pyramid and aging patterns across provinces with dependency burden calculations (Project: milan_smart_district, Scenario: zero_emission)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH age_groups AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as adults_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 > 0\n),\ndemographic_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         youth_0_14, adults_15_64, elderly_65_plus, total_population,\n         ROUND((youth_0_14::float / NULLIF(total_population, 0)) * 100, 1) as youth_percentage,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as aging_index,\n         ROUND(((youth_0_14 + elderly_65_plus)::float / NULLIF(adults_15_64, 0)) * 100, 1) as dependency_burden\n  FROM age_groups\n)\nSELECT PROVINCIA, \n       COUNT(*) as census_sections,\n       ROUND(AVG(youth_percentage), 1) as avg_youth_pct,\n       ROUND(AVG(aging_index), 1) as avg_aging_index,\n       ROUND(AVG(dependency_burden), 1) as avg_dependency_burden,\n       SUM(total_population) as total_provincial_population\nFROM demographic_indicators\nGROUP BY PROVINCIA\nORDER BY avg_aging_index DESC;", "sql_spatialite": "WITH age_groups AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as adults_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 > 0\n),\ndemographic_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         youth_0_14, adults_15_64, elderly_65_plus, total_population,\n         ROUND((youth_0_14::float / NULLIF(total_population, 0)) * 100, 1) as youth_percentage,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as aging_index,\n         ROUND(((youth_0_14 + elderly_65_plus)::float / NULLIF(adults_15_64, 0)) * 100, 1) as dependency_burden\n  FROM age_groups\n)\nSELECT PROVINCIA, \n       COUNT(*) as census_sections,\n       ROUND(AVG(youth_percentage), 1) as avg_youth_pct,\n       ROUND(AVG(aging_index), 1) as avg_aging_index,\n       ROUND(AVG(dependency_burden), 1) as avg_dependency_burden,\n       SUM(total_population) as total_provincial_population\nFROM demographic_indicators\nGROUP BY PROVINCIA\nORDER BY avg_aging_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P18", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "c.P20", "c.COMUNE", "c.P1", "c.P25", "c.P23", "c.P19", "c.P22", "c.P14", "c.PROVINCIA", "c.P21", "age_groups", "c.P15", "c.P17", "c.P29", "c.P26", "c.P28", "c.P24", "demographic_indicators", "c.P16"], "columns": ["P27", "P1", "P29", "COMUNE", "P21", "P26", "P23", "P24", "census_geo", "P16", "P14", "SEZ2011", "P18", "PROVINCIA", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 24, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P18", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "c.P20", "c.COMUNE", "c.P1", "c.P25", "c.P23", "c.P19", "c.P22", "c.P14", "c.PROVINCIA", "c.P21", "age_groups", "c.P15", "c.P17", "c.P29", "c.P26", "c.P28", "c.P24", "demographic_indicators", "c.P16"], "columns": ["P27", "P1", "P29", "COMUNE", "P21", "P26", "P23", "P24", "census_geo", "P16", "P14", "SEZ2011", "P18", "PROVINCIA", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze demographic pyramid and aging patterns across provinces with dependency burden calculations (Project: milan_smart_district, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B1_demographic_pyramid_analysis_var_117", "complexity_level": "B", "tags": ["cim_wizard", "realistic_params", "aggregation", "aging", "demographics", "statistical_analysis", "cim_census"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "baseline", "building_type": "industrial", "hvac_type": "heat_pump", "region": "Piemonte", "province": "Roma", "voltage_kv": 220, "srid": 32632, "buffer_distance": 500, "min_area": 138, "max_area": 3042, "min_height": 5, "max_height": 19, "min_people": 4, "max_people": 16, "year": 1993, "census_id": 6475249, "lon": 14.936621, "lat": 39.091557, "limit": 25, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 20, "min_points": 5, "min_areas": 3, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.011004"}
{"id": "cim_stage1_003973", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze demographic pyramid and aging patterns across provinces with dependency burden calculations (Project: turin_innovation_zone, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH age_groups AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as adults_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Piemonte' AND c.P1 > 0\n),\ndemographic_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         youth_0_14, adults_15_64, elderly_65_plus, total_population,\n         ROUND((youth_0_14::float / NULLIF(total_population, 0)) * 100, 1) as youth_percentage,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as aging_index,\n         ROUND(((youth_0_14 + elderly_65_plus)::float / NULLIF(adults_15_64, 0)) * 100, 1) as dependency_burden\n  FROM age_groups\n)\nSELECT PROVINCIA, \n       COUNT(*) as census_sections,\n       ROUND(AVG(youth_percentage), 1) as avg_youth_pct,\n       ROUND(AVG(aging_index), 1) as avg_aging_index,\n       ROUND(AVG(dependency_burden), 1) as avg_dependency_burden,\n       SUM(total_population) as total_provincial_population\nFROM demographic_indicators\nGROUP BY PROVINCIA\nORDER BY avg_aging_index DESC;", "sql_spatialite": "WITH age_groups AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P14 + c.P15 + c.P16 as youth_0_14,\n         c.P17 + c.P18 + c.P19 + c.P20 + c.P21 + c.P22 + c.P23 + c.P24 + c.P25 + c.P26 as adults_15_64,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Piemonte' AND c.P1 > 0\n),\ndemographic_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         youth_0_14, adults_15_64, elderly_65_plus, total_population,\n         ROUND((youth_0_14::float / NULLIF(total_population, 0)) * 100, 1) as youth_percentage,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as aging_index,\n         ROUND(((youth_0_14 + elderly_65_plus)::float / NULLIF(adults_15_64, 0)) * 100, 1) as dependency_burden\n  FROM age_groups\n)\nSELECT PROVINCIA, \n       COUNT(*) as census_sections,\n       ROUND(AVG(youth_percentage), 1) as avg_youth_pct,\n       ROUND(AVG(aging_index), 1) as avg_aging_index,\n       ROUND(AVG(dependency_burden), 1) as avg_dependency_burden,\n       SUM(total_population) as total_provincial_population\nFROM demographic_indicators\nGROUP BY PROVINCIA\nORDER BY avg_aging_index DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.P18", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "c.P20", "c.COMUNE", "c.P1", "c.P25", "c.P23", "c.P19", "c.P22", "c.P14", "c.PROVINCIA", "c.P21", "age_groups", "c.P15", "c.P17", "c.P29", "c.P26", "c.P28", "c.P24", "demographic_indicators", "c.P16"], "columns": ["P27", "P1", "P29", "COMUNE", "P21", "P26", "P23", "P24", "census_geo", "P16", "P14", "SEZ2011", "P18", "PROVINCIA", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 24, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.P18", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "c.P20", "c.COMUNE", "c.P1", "c.P25", "c.P23", "c.P19", "c.P22", "c.P14", "c.PROVINCIA", "c.P21", "age_groups", "c.P15", "c.P17", "c.P29", "c.P26", "c.P28", "c.P24", "demographic_indicators", "c.P16"], "columns": ["P27", "P1", "P29", "COMUNE", "P21", "P26", "P23", "P24", "census_geo", "P16", "P14", "SEZ2011", "P18", "PROVINCIA", "P15", "P20", "P28", "P19", "P17", "REGIONE", "P22", "P25"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze demographic pyramid and aging patterns across provinces with dependency burden calculations (Project: turin_innovation_zone, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_B1_demographic_pyramid_analysis_var_150", "complexity_level": "B", "tags": ["cim_wizard", "realistic_params", "aggregation", "aging", "demographics", "statistical_analysis", "cim_census"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "baseline", "building_type": "residential", "hvac_type": "electric", "region": "Emilia-Romagna", "province": "Roma", "voltage_kv": 400, "srid": 3857, "buffer_distance": 500, "min_area": 477, "max_area": 3413, "min_height": 7, "max_height": 37, "min_people": 3, "max_people": 11, "year": 2013, "census_id": 3071899, "lon": 9.748317, "lat": 42.546957, "limit": 10, "cluster_count": 5, "min_cluster_size": 3, "max_distance": 1000, "min_buildings": 5, "min_points": 8, "min_areas": 3, "cluster_distance": 5000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.013843"}
{"id": "cim_stage1_004201", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive building age and condition analysis for heritage preservation and renovation priority assessment (Project: milan_smart_district, Scenario: renewable_2030)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_age_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.E1 as total_buildings,\n         c.E8 as pre_1919_buildings,\n         c.E9 as buildings_1919_1945,\n         c.E10 as buildings_1946_1960,\n         c.E11 as buildings_1961_1970,\n         c.E12 as buildings_1971_1980,\n         c.E13 as buildings_1981_1990,\n         c.E14 as buildings_1991_2000,\n         c.E15 as buildings_2001_2005,\n         c.E16 as post_2005_buildings,\n         c.E28 as excellent_condition,\n         c.E29 as good_condition,\n         c.E30 as mediocre_condition,\n         c.E31 as poor_condition,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Torino' AND c.E1 > 0\n),\nage_quality_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_buildings, total_population,\n         ROUND(((pre_1919_buildings + buildings_1919_1945)::float / NULLIF(total_buildings, 0)) * 100, 1) as historical_building_pct,\n         ROUND(((buildings_2001_2005 + post_2005_buildings)::float / NULLIF(total_buildings, 0)) * 100, 1) as modern_building_pct,\n         ROUND(((excellent_condition + good_condition)::float / NULLIF(total_buildings, 0)) * 100, 1) as good_quality_pct,\n         ROUND((poor_condition::float / NULLIF(total_buildings, 0)) * 100, 1) as deteriorated_pct,\n         ROUND((total_population::float / NULLIF(total_buildings, 0)), 1) as people_per_building\n  FROM building_age_analysis\n  WHERE total_buildings > 0\n),\nrenovation_priority AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         historical_building_pct, modern_building_pct, good_quality_pct, deteriorated_pct,\n         people_per_building,\n         CASE \n           WHEN deteriorated_pct > 20 AND historical_building_pct > 30 THEN 'URGENT_HERITAGE_RENOVATION'\n           WHEN deteriorated_pct > 15 THEN 'HIGH_PRIORITY_RENOVATION'\n           WHEN good_quality_pct > 80 AND modern_building_pct > 50 THEN 'WELL_MAINTAINED_MODERN'\n           WHEN historical_building_pct > 50 THEN 'HERITAGE_PRESERVATION'\n           ELSE 'STANDARD_MAINTENANCE'\n         END as renovation_category\n  FROM age_quality_indicators\n)\nSELECT renovation_category,\n       COUNT(*) as areas_count,\n       ROUND(AVG(historical_building_pct), 1) as avg_historical_pct,\n       ROUND(AVG(modern_building_pct), 1) as avg_modern_pct,\n       ROUND(AVG(good_quality_pct), 1) as avg_quality_pct,\n       ROUND(AVG(deteriorated_pct), 1) as avg_deterioration_pct,\n       ROUND(AVG(people_per_building), 1) as avg_occupancy_density\nFROM renovation_priority\nGROUP BY renovation_category\nORDER BY areas_count DESC;", "sql_spatialite": "WITH building_age_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.E1 as total_buildings,\n         c.E8 as pre_1919_buildings,\n         c.E9 as buildings_1919_1945,\n         c.E10 as buildings_1946_1960,\n         c.E11 as buildings_1961_1970,\n         c.E12 as buildings_1971_1980,\n         c.E13 as buildings_1981_1990,\n         c.E14 as buildings_1991_2000,\n         c.E15 as buildings_2001_2005,\n         c.E16 as post_2005_buildings,\n         c.E28 as excellent_condition,\n         c.E29 as good_condition,\n         c.E30 as mediocre_condition,\n         c.E31 as poor_condition,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Torino' AND c.E1 > 0\n),\nage_quality_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_buildings, total_population,\n         ROUND(((pre_1919_buildings + buildings_1919_1945)::float / NULLIF(total_buildings, 0)) * 100, 1) as historical_building_pct,\n         ROUND(((buildings_2001_2005 + post_2005_buildings)::float / NULLIF(total_buildings, 0)) * 100, 1) as modern_building_pct,\n         ROUND(((excellent_condition + good_condition)::float / NULLIF(total_buildings, 0)) * 100, 1) as good_quality_pct,\n         ROUND((poor_condition::float / NULLIF(total_buildings, 0)) * 100, 1) as deteriorated_pct,\n         ROUND((total_population::float / NULLIF(total_buildings, 0)), 1) as people_per_building\n  FROM building_age_analysis\n  WHERE total_buildings > 0\n),\nrenovation_priority AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         historical_building_pct, modern_building_pct, good_quality_pct, deteriorated_pct,\n         people_per_building,\n         CASE \n           WHEN deteriorated_pct > 20 AND historical_building_pct > 30 THEN 'URGENT_HERITAGE_RENOVATION'\n           WHEN deteriorated_pct > 15 THEN 'HIGH_PRIORITY_RENOVATION'\n           WHEN good_quality_pct > 80 AND modern_building_pct > 50 THEN 'WELL_MAINTAINED_MODERN'\n           WHEN historical_building_pct > 50 THEN 'HERITAGE_PRESERVATION'\n           ELSE 'STANDARD_MAINTENANCE'\n         END as renovation_category\n  FROM age_quality_indicators\n)\nSELECT renovation_category,\n       COUNT(*) as areas_count,\n       ROUND(AVG(historical_building_pct), 1) as avg_historical_pct,\n       ROUND(AVG(modern_building_pct), 1) as avg_modern_pct,\n       ROUND(AVG(good_quality_pct), 1) as avg_quality_pct,\n       ROUND(AVG(deteriorated_pct), 1) as avg_deterioration_pct,\n       ROUND(AVG(people_per_building), 1) as avg_occupancy_density\nFROM renovation_priority\nGROUP BY renovation_category\nORDER BY areas_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "renovation_priority", "c.COMUNE", "c.P1", "c.E13", "c.E8", "building_age_analysis", "c.E14", "c.E9", "age_quality_indicators", "c.geometry", "c.E10", "c.E16", "c.PROVINCIA", "c.E12", "c.E30", "c.E15", "c.E31", "c.E11", "c.E29", "c.E28", "c.E1"], "columns": ["E12", "P1", "geometry", "COMUNE", "E30", "E29", "E11", "E14", "census_geo", "SEZ2011", "E8", "E13", "PROVINCIA", "E15", "E31", "E1", "E10", "E16", "REGIONE", "E28", "E9"], "geometry_columns": ["c.geometry", "geometry"], "primary_schema": "cim_census", "table_count": 24, "schema_count": 2}, "spatial_functions": ["ST_2005_BUILDINGS"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "renovation_priority", "c.COMUNE", "c.P1", "c.E13", "c.E8", "building_age_analysis", "c.E14", "c.E9", "age_quality_indicators", "c.geometry", "c.E10", "c.E16", "c.PROVINCIA", "c.E12", "c.E30", "c.E15", "c.E31", "c.E11", "c.E29", "c.E28", "c.E1"], "columns": ["E12", "P1", "geometry", "COMUNE", "E30", "E29", "E11", "E14", "census_geo", "SEZ2011", "E8", "E13", "PROVINCIA", "E15", "E31", "E1", "E10", "E16", "REGIONE", "E28", "E9"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive building age and condition analysis for heritage preservation and renovation priority assessment (Project: milan_smart_district, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C2_building_heritage_renovation_analysis_var_178", "complexity_level": "C", "tags": ["urban_planning", "cim_wizard", "cim_census", "building_analysis", "heritage", "renovation", "condition_assessment", "realistic_params"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "efficiency_max", "building_type": "mixed_use", "hvac_type": "district_heating", "region": "Lombardia", "province": "Bologna", "voltage_kv": 132, "srid": 4326, "buffer_distance": 2000, "min_area": 289, "max_area": 1169, "min_height": 10, "max_height": 35, "min_people": 3, "max_people": 11, "year": 1958, "census_id": 4318801, "lon": 8.51607, "lat": 38.829217, "limit": 10, "cluster_count": 8, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 20, "min_points": 5, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.042789"}
{"id": "cim_stage1_004203", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive building age and condition analysis for heritage preservation and renovation priority assessment (Project: bologna_energy_hub, Scenario: grid_modernization)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_age_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.E1 as total_buildings,\n         c.E8 as pre_1919_buildings,\n         c.E9 as buildings_1919_1945,\n         c.E10 as buildings_1946_1960,\n         c.E11 as buildings_1961_1970,\n         c.E12 as buildings_1971_1980,\n         c.E13 as buildings_1981_1990,\n         c.E14 as buildings_1991_2000,\n         c.E15 as buildings_2001_2005,\n         c.E16 as post_2005_buildings,\n         c.E28 as excellent_condition,\n         c.E29 as good_condition,\n         c.E30 as mediocre_condition,\n         c.E31 as poor_condition,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Bologna' AND c.E1 > 0\n),\nage_quality_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_buildings, total_population,\n         ROUND(((pre_1919_buildings + buildings_1919_1945)::float / NULLIF(total_buildings, 0)) * 100, 1) as historical_building_pct,\n         ROUND(((buildings_2001_2005 + post_2005_buildings)::float / NULLIF(total_buildings, 0)) * 100, 1) as modern_building_pct,\n         ROUND(((excellent_condition + good_condition)::float / NULLIF(total_buildings, 0)) * 100, 1) as good_quality_pct,\n         ROUND((poor_condition::float / NULLIF(total_buildings, 0)) * 100, 1) as deteriorated_pct,\n         ROUND((total_population::float / NULLIF(total_buildings, 0)), 1) as people_per_building\n  FROM building_age_analysis\n  WHERE total_buildings > 0\n),\nrenovation_priority AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         historical_building_pct, modern_building_pct, good_quality_pct, deteriorated_pct,\n         people_per_building,\n         CASE \n           WHEN deteriorated_pct > 20 AND historical_building_pct > 30 THEN 'URGENT_HERITAGE_RENOVATION'\n           WHEN deteriorated_pct > 15 THEN 'HIGH_PRIORITY_RENOVATION'\n           WHEN good_quality_pct > 80 AND modern_building_pct > 50 THEN 'WELL_MAINTAINED_MODERN'\n           WHEN historical_building_pct > 50 THEN 'HERITAGE_PRESERVATION'\n           ELSE 'STANDARD_MAINTENANCE'\n         END as renovation_category\n  FROM age_quality_indicators\n)\nSELECT renovation_category,\n       COUNT(*) as areas_count,\n       ROUND(AVG(historical_building_pct), 1) as avg_historical_pct,\n       ROUND(AVG(modern_building_pct), 1) as avg_modern_pct,\n       ROUND(AVG(good_quality_pct), 1) as avg_quality_pct,\n       ROUND(AVG(deteriorated_pct), 1) as avg_deterioration_pct,\n       ROUND(AVG(people_per_building), 1) as avg_occupancy_density\nFROM renovation_priority\nGROUP BY renovation_category\nORDER BY areas_count DESC;", "sql_spatialite": "WITH building_age_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.E1 as total_buildings,\n         c.E8 as pre_1919_buildings,\n         c.E9 as buildings_1919_1945,\n         c.E10 as buildings_1946_1960,\n         c.E11 as buildings_1961_1970,\n         c.E12 as buildings_1971_1980,\n         c.E13 as buildings_1981_1990,\n         c.E14 as buildings_1991_2000,\n         c.E15 as buildings_2001_2005,\n         c.E16 as post_2005_buildings,\n         c.E28 as excellent_condition,\n         c.E29 as good_condition,\n         c.E30 as mediocre_condition,\n         c.E31 as poor_condition,\n         c.P1 as total_population\n  FROM cim_census.census_geo c\n  WHERE c.PROVINCIA = 'Bologna' AND c.E1 > 0\n),\nage_quality_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_buildings, total_population,\n         ROUND(((pre_1919_buildings + buildings_1919_1945)::float / NULLIF(total_buildings, 0)) * 100, 1) as historical_building_pct,\n         ROUND(((buildings_2001_2005 + post_2005_buildings)::float / NULLIF(total_buildings, 0)) * 100, 1) as modern_building_pct,\n         ROUND(((excellent_condition + good_condition)::float / NULLIF(total_buildings, 0)) * 100, 1) as good_quality_pct,\n         ROUND((poor_condition::float / NULLIF(total_buildings, 0)) * 100, 1) as deteriorated_pct,\n         ROUND((total_population::float / NULLIF(total_buildings, 0)), 1) as people_per_building\n  FROM building_age_analysis\n  WHERE total_buildings > 0\n),\nrenovation_priority AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         historical_building_pct, modern_building_pct, good_quality_pct, deteriorated_pct,\n         people_per_building,\n         CASE \n           WHEN deteriorated_pct > 20 AND historical_building_pct > 30 THEN 'URGENT_HERITAGE_RENOVATION'\n           WHEN deteriorated_pct > 15 THEN 'HIGH_PRIORITY_RENOVATION'\n           WHEN good_quality_pct > 80 AND modern_building_pct > 50 THEN 'WELL_MAINTAINED_MODERN'\n           WHEN historical_building_pct > 50 THEN 'HERITAGE_PRESERVATION'\n           ELSE 'STANDARD_MAINTENANCE'\n         END as renovation_category\n  FROM age_quality_indicators\n)\nSELECT renovation_category,\n       COUNT(*) as areas_count,\n       ROUND(AVG(historical_building_pct), 1) as avg_historical_pct,\n       ROUND(AVG(modern_building_pct), 1) as avg_modern_pct,\n       ROUND(AVG(good_quality_pct), 1) as avg_quality_pct,\n       ROUND(AVG(deteriorated_pct), 1) as avg_deterioration_pct,\n       ROUND(AVG(people_per_building), 1) as avg_occupancy_density\nFROM renovation_priority\nGROUP BY renovation_category\nORDER BY areas_count DESC;", "sql_type": "AGGREGATION", "sql_taxonomy": {"operation_type": "AGGREGATION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 1}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "renovation_priority", "c.COMUNE", "c.P1", "c.E13", "c.E8", "building_age_analysis", "c.E14", "c.E9", "age_quality_indicators", "c.geometry", "c.E10", "c.E16", "c.PROVINCIA", "c.E12", "c.E30", "c.E15", "c.E31", "c.E11", "c.E29", "c.E28", "c.E1"], "columns": ["E12", "P1", "geometry", "COMUNE", "E30", "E29", "E11", "E14", "census_geo", "SEZ2011", "E8", "E13", "PROVINCIA", "E15", "E31", "E1", "E10", "E16", "REGIONE", "E28", "E9"], "geometry_columns": ["c.geometry", "geometry"], "primary_schema": "cim_census", "table_count": 24, "schema_count": 2}, "spatial_functions": ["ST_2005_BUILDINGS"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "renovation_priority", "c.COMUNE", "c.P1", "c.E13", "c.E8", "building_age_analysis", "c.E14", "c.E9", "age_quality_indicators", "c.geometry", "c.E10", "c.E16", "c.PROVINCIA", "c.E12", "c.E30", "c.E15", "c.E31", "c.E11", "c.E29", "c.E28", "c.E1"], "columns": ["E12", "P1", "geometry", "COMUNE", "E30", "E29", "E11", "E14", "census_geo", "SEZ2011", "E8", "E13", "PROVINCIA", "E15", "E31", "E1", "E10", "E16", "REGIONE", "E28", "E9"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive building age and condition analysis for heritage preservation and renovation priority assessment (Project: bologna_energy_hub, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C2_building_heritage_renovation_analysis_var_180", "complexity_level": "C", "tags": ["urban_planning", "cim_wizard", "cim_census", "building_analysis", "heritage", "renovation", "condition_assessment", "realistic_params"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "grid_modernization", "building_type": "mixed_use", "hvac_type": "heat_pump", "region": "Toscana", "province": "Bologna", "voltage_kv": 20, "srid": 3857, "buffer_distance": 100, "min_area": 156, "max_area": 2038, "min_height": 8, "max_height": 46, "min_people": 4, "max_people": 16, "year": 1967, "census_id": 5884782, "lon": 10.85957, "lat": 39.244071, "limit": 25, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 20, "min_points": 3, "min_areas": 10, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.043061"}
{"id": "cim_stage1_004406", "database_id": 1, "database_name": "cim_wizard", "question": "Analyze family size composition from single households to large families (Project: rome_green_quarter, Scenario: baseline)", "question_tone": "ANALYTICAL", "sql_postgis": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA,\n       c.PF1 as total_families,\n       c.PF3 as single_person_families,\n       c.PF4 as two_person_families,\n       c.PF5 as three_person_families,\n       c.PF6 as four_person_families,\n       c.PF8 as large_families_6plus,\n       ROUND((c.PF3::float / NULLIF(c.PF1, 0)) * 100, 1) as single_household_pct,\n       ROUND((c.PF8::float / NULLIF(c.PF1, 0)) * 100, 1) as large_family_pct\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Toscana'\n  AND c.PF1 > 0\nORDER BY large_family_pct DESC\nLIMIT 10;", "sql_spatialite": "SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA,\n       c.PF1 as total_families,\n       c.PF3 as single_person_families,\n       c.PF4 as two_person_families,\n       c.PF5 as three_person_families,\n       c.PF6 as four_person_families,\n       c.PF8 as large_families_6plus,\n       ROUND((c.PF3::float / NULLIF(c.PF1, 0)) * 100, 1) as single_household_pct,\n       ROUND((c.PF8::float / NULLIF(c.PF1, 0)) * 100, 1) as large_family_pct\nFROM cim_census.census_geo c\nWHERE c.REGIONE = 'Toscana'\n  AND c.PF1 > 0\nORDER BY large_family_pct DESC\nLIMIT 10;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "NONE", "usage_frequency_class": "NONE", "database_schema": {"schemas": ["cim_census", "c"], "tables": ["c.PF3", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.PF8", "c.PF6", "c.PF5", "c.PF1", "c.PF4"], "columns": ["PF3", "SEZ2011", "PF6", "PF8", "PF5", "REGIONE", "census_geo", "PROVINCIA", "PF1", "PF4"], "geometry_columns": [], "primary_schema": "cim_census", "table_count": 10, "schema_count": 2}, "spatial_functions": [], "spatial_function_count": 0, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_census", "c"], "tables": ["c.PF3", "cim_census.census_geo", "c.PROVINCIA", "c.REGIONE", "c.SEZ2011", "c.PF8", "c.PF6", "c.PF5", "c.PF1", "c.PF4"], "columns": ["PF3", "SEZ2011", "PF6", "PF8", "PF5", "REGIONE", "census_geo", "PROVINCIA", "PF1", "PF4"], "functions": [], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Analyze family size composition from single households to large families (Project: rome_green_quarter, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_A5_family_composition_var_183", "complexity_level": "A", "tags": ["cim_wizard", "household_composition", "realistic_params", "demographics", "family_size", "cim_census"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "zero_emission", "building_type": "public", "hvac_type": "electric", "region": "Emilia-Romagna", "province": "Milano", "voltage_kv": 132, "srid": 32632, "buffer_distance": 100, "min_area": 485, "max_area": 2006, "min_height": 4, "max_height": 57, "min_people": 4, "max_people": 8, "year": 1951, "census_id": 7399457, "lon": 7.269705, "lat": 45.416958, "limit": 50, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 5, "min_points": 3, "min_areas": 3, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.057640"}
{"id": "cim_stage1_004497", "database_id": 1, "database_name": "cim_wizard", "question": "Find active grid buses above certain voltage level in a project scenario (Project: florence_heritage_area, Scenario: renewable_2030)", "question_tone": "DIRECT", "sql_postgis": "SELECT gb.bus_id, gb.name, gb.voltage_kv, ST_AsText(gb.geometry) as location\nFROM cim_vector.grid_bus gb\nWHERE gb.project_id = 'florence_heritage_area' \n  AND gb.scenario_id = 'renewable_2030'\n  AND gb.voltage_kv >= 10\n  AND gb.in_service = true;", "sql_spatialite": "SELECT gb.bus_id, gb.name, gb.voltage_kv, AsText(gb.geometry) as location\nFROM cim_vector.grid_bus gb\nWHERE gb.project_id = 'florence_heritage_area' \n  AND gb.scenario_id = 'renewable_2030'\n  AND gb.voltage_kv >= 10\n  AND gb.in_service = true;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "gb"], "tables": ["gb.scenario_id", "gb.bus_id", "cim_vector.grid_bus", "gb.project_id", "gb.in_service", "gb.geometry", "gb.voltage_kv", "gb.name"], "columns": ["name", "bus_id", "geometry", "voltage_kv", "grid_bus", "in_service"], "geometry_columns": ["gb.geometry", "geometry"], "primary_schema": "cim_vector", "table_count": 8, "schema_count": 2}, "spatial_functions": ["ST_ASTEXT"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "gb"], "tables": ["gb.scenario_id", "gb.bus_id", "cim_vector.grid_bus", "gb.project_id", "gb.in_service", "gb.geometry", "gb.voltage_kv", "gb.name"], "columns": ["name", "bus_id", "geometry", "voltage_kv", "grid_bus", "in_service"], "functions": ["ST_AsText"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find active grid buses above certain voltage level in a project scenario (Project: florence_heritage_area, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A3_grid_buses_by_voltage_var_74", "complexity_level": "A", "tags": ["realistic_params", "voltage_filter", "basic", "cim_grid", "cim_wizard"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "efficiency_max", "building_type": "mixed_use", "hvac_type": "district_heating", "region": "Emilia-Romagna", "province": "Torino", "voltage_kv": 20, "srid": 3857, "buffer_distance": 500, "min_area": 365, "max_area": 2713, "min_height": 10, "max_height": 27, "min_people": 3, "max_people": 18, "year": 1979, "census_id": 7949414, "lon": 11.207504, "lat": 43.340083, "limit": 10, "cluster_count": 3, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 5, "min_points": 8, "min_areas": 10, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.063194"}
{"id": "cim_stage1_004563", "database_id": 1, "database_name": "cim_wizard", "question": "Find active grid buses above certain voltage level in a project scenario (Project: rome_green_quarter, Scenario: grid_modernization)", "question_tone": "DIRECT", "sql_postgis": "SELECT gb.bus_id, gb.name, gb.voltage_kv, ST_AsText(gb.geometry) as location\nFROM cim_vector.grid_bus gb\nWHERE gb.project_id = 'rome_green_quarter' \n  AND gb.scenario_id = 'grid_modernization'\n  AND gb.voltage_kv >= 132\n  AND gb.in_service = true;", "sql_spatialite": "SELECT gb.bus_id, gb.name, gb.voltage_kv, AsText(gb.geometry) as location\nFROM cim_vector.grid_bus gb\nWHERE gb.project_id = 'rome_green_quarter' \n  AND gb.scenario_id = 'grid_modernization'\n  AND gb.voltage_kv >= 132\n  AND gb.in_service = true;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "gb"], "tables": ["gb.scenario_id", "gb.bus_id", "cim_vector.grid_bus", "gb.project_id", "gb.in_service", "gb.geometry", "gb.voltage_kv", "gb.name"], "columns": ["name", "bus_id", "geometry", "voltage_kv", "grid_bus", "in_service"], "geometry_columns": ["gb.geometry", "geometry"], "primary_schema": "cim_vector", "table_count": 8, "schema_count": 2}, "spatial_functions": ["ST_ASTEXT"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "gb"], "tables": ["gb.scenario_id", "gb.bus_id", "cim_vector.grid_bus", "gb.project_id", "gb.in_service", "gb.geometry", "gb.voltage_kv", "gb.name"], "columns": ["name", "bus_id", "geometry", "voltage_kv", "grid_bus", "in_service"], "functions": ["ST_AsText"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find active grid buses above certain voltage level in a project scenario (Project: rome_green_quarter, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A3_grid_buses_by_voltage_var_140", "complexity_level": "A", "tags": ["realistic_params", "voltage_filter", "basic", "cim_grid", "cim_wizard"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "grid_modernization", "building_type": "residential", "hvac_type": "heat_pump", "region": "Piemonte", "province": "Firenze", "voltage_kv": 0.4, "srid": 32632, "buffer_distance": 100, "min_area": 191, "max_area": 3927, "min_height": 10, "max_height": 87, "min_people": 4, "max_people": 18, "year": 2010, "census_id": 9190007, "lon": 13.223909, "lat": 46.368426, "limit": 50, "cluster_count": 8, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 20, "min_points": 5, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.067546"}
{"id": "cim_stage1_004582", "database_id": 1, "database_name": "cim_wizard", "question": "Find active grid buses above certain voltage level in a project scenario (Project: turin_innovation_zone, Scenario: grid_modernization)", "question_tone": "DIRECT", "sql_postgis": "SELECT gb.bus_id, gb.name, gb.voltage_kv, ST_AsText(gb.geometry) as location\nFROM cim_vector.grid_bus gb\nWHERE gb.project_id = 'turin_innovation_zone' \n  AND gb.scenario_id = 'grid_modernization'\n  AND gb.voltage_kv >= 220\n  AND gb.in_service = true;", "sql_spatialite": "SELECT gb.bus_id, gb.name, gb.voltage_kv, AsText(gb.geometry) as location\nFROM cim_vector.grid_bus gb\nWHERE gb.project_id = 'turin_innovation_zone' \n  AND gb.scenario_id = 'grid_modernization'\n  AND gb.voltage_kv >= 220\n  AND gb.in_service = true;", "sql_type": "SIMPLE_SELECT", "sql_taxonomy": {"operation_type": "SIMPLE_SELECT", "has_cte": false, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "none"}, "difficulty": {"query_complexity": "EASY", "spatial_complexity": "BASIC", "schema_complexity": "MULTI_SCHEMA", "function_count": "1-2", "join_count": "0", "overall_difficulty": "EASY", "complexity_score": 0}, "difficulty_level": "EASY", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["cim_vector", "gb"], "tables": ["gb.scenario_id", "gb.bus_id", "cim_vector.grid_bus", "gb.project_id", "gb.in_service", "gb.geometry", "gb.voltage_kv", "gb.name"], "columns": ["name", "bus_id", "geometry", "voltage_kv", "grid_bus", "in_service"], "geometry_columns": ["gb.geometry", "geometry"], "primary_schema": "cim_vector", "table_count": 8, "schema_count": 2}, "spatial_functions": ["ST_ASTEXT"], "spatial_function_count": 1, "spatial_function_categories": {"predicates": [], "measurements": [], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["cim_vector", "gb"], "tables": ["gb.scenario_id", "gb.bus_id", "cim_vector.grid_bus", "gb.project_id", "gb.in_service", "gb.geometry", "gb.voltage_kv", "gb.name"], "columns": ["name", "bus_id", "geometry", "voltage_kv", "grid_bus", "in_service"], "functions": ["ST_AsText"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Find active grid buses above certain voltage level in a project scenario (Project: turin_innovation_zone, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_A3_grid_buses_by_voltage_var_159", "complexity_level": "A", "tags": ["realistic_params", "voltage_filter", "basic", "cim_grid", "cim_wizard"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "efficiency_max", "building_type": "public", "hvac_type": "heat_pump", "region": "Toscana", "province": "Firenze", "voltage_kv": 400, "srid": 32632, "buffer_distance": 500, "min_area": 300, "max_area": 1794, "min_height": 5, "max_height": 15, "min_people": 1, "max_people": 7, "year": 1979, "census_id": 1614373, "lon": 11.86342, "lat": 46.31827, "limit": 10, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 20, "min_points": 5, "min_areas": 3, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.068689"}
{"id": "cim_stage1_004711", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced urban morphology classification combining census demographics with building density for urban planning insights (Project: milan_smart_district, Scenario: grid_modernization)", "question_tone": "CONDITIONAL", "sql_postgis": "WITH demographic_density_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.P14 + c.P15 + c.P16 as children_0_14,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.PF3 as single_person_families,\n         c.PF8 as large_families_6plus,\n         c.A2 as occupied_homes,\n         ST_Area(c.geometry) as census_area_sqm\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Piemonte' AND c.P1 >= 1000\n),\nbuilding_density_overlay AS (\n  SELECT dda.SEZ2011, dda.REGIONE, dda.PROVINCIA, dda.COMUNE,\n         dda.total_population, dda.children_0_14, dda.elderly_65_plus,\n         dda.single_person_families, dda.large_families_6plus, dda.occupied_homes,\n         dda.census_area_sqm,\n         COUNT(b.building_id) as buildings_in_area,\n         SUM(bp.area) as total_building_footprint,\n         AVG(bp.height) as avg_building_height,\n         SUM(bp.n_people) as building_residents\n  FROM demographic_density_analysis dda\n  LEFT JOIN cim_vector.building b ON ST_Within(ST_Centroid(b.building_geometry), dda.geometry)\n  LEFT JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'grid_modernization'\n  GROUP BY dda.SEZ2011, dda.REGIONE, dda.PROVINCIA, dda.COMUNE,\n           dda.total_population, dda.children_0_14, dda.elderly_65_plus,\n           dda.single_person_families, dda.large_families_6plus, dda.occupied_homes,\n           dda.census_area_sqm\n),\ndensity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, buildings_in_area, avg_building_height,\n         ROUND((total_population::float / (census_area_sqm / 10000)), 1) as population_density_per_hectare,\n         ROUND((total_building_footprint::float / census_area_sqm) * 100, 1) as building_coverage_pct,\n         ROUND((children_0_14::float / NULLIF(total_population, 0)) * 100, 1) as child_ratio,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as elderly_ratio,\n         ROUND((single_person_families::float / NULLIF(occupied_homes, 0)) * 100, 1) as single_household_pct,\n         CASE \n           WHEN buildings_in_area > 0 THEN ROUND((building_residents::float / NULLIF(buildings_in_area, 0)), 1)\n           ELSE 0\n         END as avg_residents_per_building\n  FROM building_density_overlay\n  WHERE census_area_sqm > 0\n),\nurban_morphology_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         population_density_per_hectare, building_coverage_pct, child_ratio, elderly_ratio,\n         single_household_pct, avg_residents_per_building,\n         CASE \n           WHEN population_density_per_hectare > 150 AND building_coverage_pct > 30 THEN 'DENSE_URBAN_CORE'\n           WHEN population_density_per_hectare > 100 AND elderly_ratio > 25 THEN 'AGING_DENSE_NEIGHBORHOOD'\n           WHEN population_density_per_hectare > 80 AND child_ratio > 20 THEN 'FAMILY_ORIENTED_DISTRICT'\n           WHEN population_density_per_hectare < 50 AND single_household_pct > 40 THEN 'SUBURBAN_SINGLES'\n           WHEN building_coverage_pct < 15 AND population_density_per_hectare < 30 THEN 'RURAL_SPARSE'\n           ELSE 'MIXED_RESIDENTIAL'\n         END as urban_morphology_type\n  FROM density_indicators\n)\nSELECT urban_morphology_type, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(population_density_per_hectare), 1) as avg_pop_density,\n       ROUND(AVG(building_coverage_pct), 1) as avg_building_coverage,\n       ROUND(AVG(child_ratio), 1) as avg_child_ratio,\n       ROUND(AVG(elderly_ratio), 1) as avg_elderly_ratio,\n       ROUND(AVG(single_household_pct), 1) as avg_single_households,\n       ROUND(AVG(avg_residents_per_building), 1) as avg_residents_per_bldg\nFROM urban_morphology_classification\nGROUP BY urban_morphology_type, PROVINCIA\nHAVING COUNT(*) >= 3\nORDER BY avg_pop_density DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "cim_census", "cim_vector", "dda", "b", "c"], "tables": ["dda.children_0_14", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_vector.building", "dda.elderly_65_plus", "c.A2", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "dda.SEZ2011", "dda.census_area_sqm", "dda.geometry", "c.PF3", "dda.REGIONE", "b.building_geometry", "bp.project_id", "demographic_density_analysis", "c.geometry", "dda.occupied_homes", "dda.total_population", "c.PROVINCIA", "c.P14", "dda.large_families_6plus", "bp.height", "dda.single_person_families", "bp.building_id", "c.P15", "density_indicators", "dda.PROVINCIA", "c.P29", "c.PF8", "dda.COMUNE", "cim_vector.building_properties", "c.P28", "bp.area", "building_density_overlay", "urban_morphology_classification", "b.building_id", "c.P16"], "columns": ["PF3", "P27", "PF8", "P1", "geometry", "P29", "total_population", "occupied_homes", "COMUNE", "children_0_14", "n_people", "census_geo", "P16", "P14", "height", "SEZ2011", "area", "elderly_65_plus", "large_families_6plus", "PROVINCIA", "P15", "A2", "P28", "building_geometry", "single_person_families", "building", "building_properties", "REGIONE", "census_area_sqm"], "geometry_columns": ["dda.geometry", "b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "bp", "table_count": 42, "schema_count": 6}, "spatial_functions": ["ST_AREA", "ST_WITHIN", "ST_CENTROID"], "spatial_function_count": 3, "spatial_function_categories": {"predicates": ["ST_WITHIN"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "cim_census", "cim_vector", "dda", "b", "c"], "tables": ["dda.children_0_14", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_vector.building", "dda.elderly_65_plus", "c.A2", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "dda.SEZ2011", "dda.census_area_sqm", "dda.geometry", "c.PF3", "dda.REGIONE", "b.building_geometry", "bp.project_id", "demographic_density_analysis", "c.geometry", "dda.occupied_homes", "dda.total_population", "c.PROVINCIA", "c.P14", "dda.large_families_6plus", "bp.height", "dda.single_person_families", "bp.building_id", "c.P15", "density_indicators", "dda.PROVINCIA", "c.P29", "c.PF8", "dda.COMUNE", "cim_vector.building_properties", "c.P28", "bp.area", "building_density_overlay", "urban_morphology_classification", "b.building_id", "c.P16"], "columns": ["PF3", "P27", "PF8", "P1", "geometry", "P29", "total_population", "occupied_homes", "COMUNE", "children_0_14", "n_people", "census_geo", "P16", "P14", "height", "SEZ2011", "area", "elderly_65_plus", "large_families_6plus", "PROVINCIA", "P15", "A2", "P28", "building_geometry", "single_person_families", "building", "building_properties", "REGIONE", "census_area_sqm"], "functions": ["ST_Within", "ST_Centroid", "ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced urban morphology classification combining census demographics with building density for urban planning insights (Project: milan_smart_district, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C4_urban_morphology_classification_var_88", "complexity_level": "C", "tags": ["density_analysis", "cim_building", "family_structure", "cross_schema", "aging", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "freq_high", "realistic_params", "urban_morphology"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "renewable_2030", "building_type": "public", "hvac_type": "hybrid", "region": "Lazio", "province": "Bologna", "voltage_kv": 400, "srid": 3857, "buffer_distance": 1000, "min_area": 86, "max_area": 4086, "min_height": 7, "max_height": 53, "min_people": 1, "max_people": 8, "year": 1990, "census_id": 2911917, "lon": 7.345336, "lat": 46.347074, "limit": 50, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 1000, "min_buildings": 20, "min_points": 3, "min_areas": 10, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.087318"}
{"id": "cim_stage1_004714", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced urban morphology classification combining census demographics with building density for urban planning insights (Project: florence_heritage_area, Scenario: grid_modernization)", "question_tone": "CONDITIONAL", "sql_postgis": "WITH demographic_density_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.P14 + c.P15 + c.P16 as children_0_14,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.PF3 as single_person_families,\n         c.PF8 as large_families_6plus,\n         c.A2 as occupied_homes,\n         ST_Area(c.geometry) as census_area_sqm\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lombardia' AND c.P1 >= 100\n),\nbuilding_density_overlay AS (\n  SELECT dda.SEZ2011, dda.REGIONE, dda.PROVINCIA, dda.COMUNE,\n         dda.total_population, dda.children_0_14, dda.elderly_65_plus,\n         dda.single_person_families, dda.large_families_6plus, dda.occupied_homes,\n         dda.census_area_sqm,\n         COUNT(b.building_id) as buildings_in_area,\n         SUM(bp.area) as total_building_footprint,\n         AVG(bp.height) as avg_building_height,\n         SUM(bp.n_people) as building_residents\n  FROM demographic_density_analysis dda\n  LEFT JOIN cim_vector.building b ON ST_Within(ST_Centroid(b.building_geometry), dda.geometry)\n  LEFT JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'grid_modernization'\n  GROUP BY dda.SEZ2011, dda.REGIONE, dda.PROVINCIA, dda.COMUNE,\n           dda.total_population, dda.children_0_14, dda.elderly_65_plus,\n           dda.single_person_families, dda.large_families_6plus, dda.occupied_homes,\n           dda.census_area_sqm\n),\ndensity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, buildings_in_area, avg_building_height,\n         ROUND((total_population::float / (census_area_sqm / 10000)), 1) as population_density_per_hectare,\n         ROUND((total_building_footprint::float / census_area_sqm) * 100, 1) as building_coverage_pct,\n         ROUND((children_0_14::float / NULLIF(total_population, 0)) * 100, 1) as child_ratio,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as elderly_ratio,\n         ROUND((single_person_families::float / NULLIF(occupied_homes, 0)) * 100, 1) as single_household_pct,\n         CASE \n           WHEN buildings_in_area > 0 THEN ROUND((building_residents::float / NULLIF(buildings_in_area, 0)), 1)\n           ELSE 0\n         END as avg_residents_per_building\n  FROM building_density_overlay\n  WHERE census_area_sqm > 0\n),\nurban_morphology_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         population_density_per_hectare, building_coverage_pct, child_ratio, elderly_ratio,\n         single_household_pct, avg_residents_per_building,\n         CASE \n           WHEN population_density_per_hectare > 150 AND building_coverage_pct > 30 THEN 'DENSE_URBAN_CORE'\n           WHEN population_density_per_hectare > 100 AND elderly_ratio > 25 THEN 'AGING_DENSE_NEIGHBORHOOD'\n           WHEN population_density_per_hectare > 80 AND child_ratio > 20 THEN 'FAMILY_ORIENTED_DISTRICT'\n           WHEN population_density_per_hectare < 50 AND single_household_pct > 40 THEN 'SUBURBAN_SINGLES'\n           WHEN building_coverage_pct < 15 AND population_density_per_hectare < 30 THEN 'RURAL_SPARSE'\n           ELSE 'MIXED_RESIDENTIAL'\n         END as urban_morphology_type\n  FROM density_indicators\n)\nSELECT urban_morphology_type, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(population_density_per_hectare), 1) as avg_pop_density,\n       ROUND(AVG(building_coverage_pct), 1) as avg_building_coverage,\n       ROUND(AVG(child_ratio), 1) as avg_child_ratio,\n       ROUND(AVG(elderly_ratio), 1) as avg_elderly_ratio,\n       ROUND(AVG(single_household_pct), 1) as avg_single_households,\n       ROUND(AVG(avg_residents_per_building), 1) as avg_residents_per_bldg\nFROM urban_morphology_classification\nGROUP BY urban_morphology_type, PROVINCIA\nHAVING COUNT(*) >= 10\nORDER BY avg_pop_density DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "cim_census", "cim_vector", "dda", "b", "c"], "tables": ["dda.children_0_14", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_vector.building", "dda.elderly_65_plus", "c.A2", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "dda.SEZ2011", "dda.census_area_sqm", "dda.geometry", "c.PF3", "dda.REGIONE", "b.building_geometry", "bp.project_id", "demographic_density_analysis", "c.geometry", "dda.occupied_homes", "dda.total_population", "c.PROVINCIA", "c.P14", "dda.large_families_6plus", "bp.height", "dda.single_person_families", "bp.building_id", "c.P15", "density_indicators", "dda.PROVINCIA", "c.P29", "c.PF8", "dda.COMUNE", "cim_vector.building_properties", "c.P28", "bp.area", "building_density_overlay", "urban_morphology_classification", "b.building_id", "c.P16"], "columns": ["PF3", "P27", "PF8", "P1", "geometry", "P29", "total_population", "occupied_homes", "COMUNE", "children_0_14", "n_people", "census_geo", "P16", "P14", "height", "SEZ2011", "area", "elderly_65_plus", "large_families_6plus", "PROVINCIA", "P15", "A2", "P28", "building_geometry", "single_person_families", "building", "building_properties", "REGIONE", "census_area_sqm"], "geometry_columns": ["dda.geometry", "b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "bp", "table_count": 42, "schema_count": 6}, "spatial_functions": ["ST_AREA", "ST_WITHIN", "ST_CENTROID"], "spatial_function_count": 3, "spatial_function_categories": {"predicates": ["ST_WITHIN"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "cim_census", "cim_vector", "dda", "b", "c"], "tables": ["dda.children_0_14", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_vector.building", "dda.elderly_65_plus", "c.A2", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "dda.SEZ2011", "dda.census_area_sqm", "dda.geometry", "c.PF3", "dda.REGIONE", "b.building_geometry", "bp.project_id", "demographic_density_analysis", "c.geometry", "dda.occupied_homes", "dda.total_population", "c.PROVINCIA", "c.P14", "dda.large_families_6plus", "bp.height", "dda.single_person_families", "bp.building_id", "c.P15", "density_indicators", "dda.PROVINCIA", "c.P29", "c.PF8", "dda.COMUNE", "cim_vector.building_properties", "c.P28", "bp.area", "building_density_overlay", "urban_morphology_classification", "b.building_id", "c.P16"], "columns": ["PF3", "P27", "PF8", "P1", "geometry", "P29", "total_population", "occupied_homes", "COMUNE", "children_0_14", "n_people", "census_geo", "P16", "P14", "height", "SEZ2011", "area", "elderly_65_plus", "large_families_6plus", "PROVINCIA", "P15", "A2", "P28", "building_geometry", "single_person_families", "building", "building_properties", "REGIONE", "census_area_sqm"], "functions": ["ST_Within", "ST_Centroid", "ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced urban morphology classification combining census demographics with building density for urban planning insights (Project: florence_heritage_area, Scenario: grid_modernization)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C4_urban_morphology_classification_var_91", "complexity_level": "C", "tags": ["density_analysis", "cim_building", "family_structure", "cross_schema", "aging", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "freq_high", "realistic_params", "urban_morphology"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "renewable_2030", "building_type": "industrial", "hvac_type": "gas_boiler", "region": "Emilia-Romagna", "province": "Torino", "voltage_kv": 400, "srid": 32632, "buffer_distance": 2000, "min_area": 290, "max_area": 1058, "min_height": 10, "max_height": 73, "min_people": 2, "max_people": 14, "year": 1971, "census_id": 8928935, "lon": 9.219438, "lat": 42.734585, "limit": 50, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 5, "min_points": 5, "min_areas": 10, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:40.087863"}
{"id": "cim_stage1_004777", "database_id": 1, "database_name": "cim_wizard", "question": "Advanced urban morphology classification combining census demographics with building density for urban planning insights (Project: turin_innovation_zone, Scenario: zero_emission)", "question_tone": "CONDITIONAL", "sql_postgis": "WITH demographic_density_analysis AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE, c.geometry,\n         c.P1 as total_population,\n         c.P14 + c.P15 + c.P16 as children_0_14,\n         c.P27 + c.P28 + c.P29 as elderly_65_plus,\n         c.PF3 as single_person_families,\n         c.PF8 as large_families_6plus,\n         c.A2 as occupied_homes,\n         ST_Area(c.geometry) as census_area_sqm\n  FROM cim_census.census_geo c\n  WHERE c.REGIONE = 'Lazio' AND c.P1 >= 100\n),\nbuilding_density_overlay AS (\n  SELECT dda.SEZ2011, dda.REGIONE, dda.PROVINCIA, dda.COMUNE,\n         dda.total_population, dda.children_0_14, dda.elderly_65_plus,\n         dda.single_person_families, dda.large_families_6plus, dda.occupied_homes,\n         dda.census_area_sqm,\n         COUNT(b.building_id) as buildings_in_area,\n         SUM(bp.area) as total_building_footprint,\n         AVG(bp.height) as avg_building_height,\n         SUM(bp.n_people) as building_residents\n  FROM demographic_density_analysis dda\n  LEFT JOIN cim_vector.building b ON ST_Within(ST_Centroid(b.building_geometry), dda.geometry)\n  LEFT JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'zero_emission'\n  GROUP BY dda.SEZ2011, dda.REGIONE, dda.PROVINCIA, dda.COMUNE,\n           dda.total_population, dda.children_0_14, dda.elderly_65_plus,\n           dda.single_person_families, dda.large_families_6plus, dda.occupied_homes,\n           dda.census_area_sqm\n),\ndensity_indicators AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         total_population, buildings_in_area, avg_building_height,\n         ROUND((total_population::float / (census_area_sqm / 10000)), 1) as population_density_per_hectare,\n         ROUND((total_building_footprint::float / census_area_sqm) * 100, 1) as building_coverage_pct,\n         ROUND((children_0_14::float / NULLIF(total_population, 0)) * 100, 1) as child_ratio,\n         ROUND((elderly_65_plus::float / NULLIF(total_population, 0)) * 100, 1) as elderly_ratio,\n         ROUND((single_person_families::float / NULLIF(occupied_homes, 0)) * 100, 1) as single_household_pct,\n         CASE \n           WHEN buildings_in_area > 0 THEN ROUND((building_residents::float / NULLIF(buildings_in_area, 0)), 1)\n           ELSE 0\n         END as avg_residents_per_building\n  FROM building_density_overlay\n  WHERE census_area_sqm > 0\n),\nurban_morphology_classification AS (\n  SELECT SEZ2011, REGIONE, PROVINCIA, COMUNE,\n         population_density_per_hectare, building_coverage_pct, child_ratio, elderly_ratio,\n         single_household_pct, avg_residents_per_building,\n         CASE \n           WHEN population_density_per_hectare > 150 AND building_coverage_pct > 30 THEN 'DENSE_URBAN_CORE'\n           WHEN population_density_per_hectare > 100 AND elderly_ratio > 25 THEN 'AGING_DENSE_NEIGHBORHOOD'\n           WHEN population_density_per_hectare > 80 AND child_ratio > 20 THEN 'FAMILY_ORIENTED_DISTRICT'\n           WHEN population_density_per_hectare < 50 AND single_household_pct > 40 THEN 'SUBURBAN_SINGLES'\n           WHEN building_coverage_pct < 15 AND population_density_per_hectare < 30 THEN 'RURAL_SPARSE'\n           ELSE 'MIXED_RESIDENTIAL'\n         END as urban_morphology_type\n  FROM density_indicators\n)\nSELECT urban_morphology_type, PROVINCIA,\n       COUNT(*) as areas_count,\n       ROUND(AVG(population_density_per_hectare), 1) as avg_pop_density,\n       ROUND(AVG(building_coverage_pct), 1) as avg_building_coverage,\n       ROUND(AVG(child_ratio), 1) as avg_child_ratio,\n       ROUND(AVG(elderly_ratio), 1) as avg_elderly_ratio,\n       ROUND(AVG(single_household_pct), 1) as avg_single_households,\n       ROUND(AVG(avg_residents_per_building), 1) as avg_residents_per_bldg\nFROM urban_morphology_classification\nGROUP BY urban_morphology_type, PROVINCIA\nHAVING COUNT(*) >= 5\nORDER BY avg_pop_density DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "NESTED_QUERY", "sql_taxonomy": {"operation_type": "NESTED_QUERY", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "INTERMEDIATE", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "cim_census", "cim_vector", "dda", "b", "c"], "tables": ["dda.children_0_14", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_vector.building", "dda.elderly_65_plus", "c.A2", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "dda.SEZ2011", "dda.census_area_sqm", "dda.geometry", "c.PF3", "dda.REGIONE", "b.building_geometry", "bp.project_id", "demographic_density_analysis", "c.geometry", "dda.occupied_homes", "dda.total_population", "c.PROVINCIA", "c.P14", "dda.large_families_6plus", "bp.height", "dda.single_person_families", "bp.building_id", "c.P15", "density_indicators", "dda.PROVINCIA", "c.P29", "c.PF8", "dda.COMUNE", "cim_vector.building_properties", "c.P28", "bp.area", "building_density_overlay", "urban_morphology_classification", "b.building_id", "c.P16"], "columns": ["PF3", "P27", "PF8", "P1", "geometry", "P29", "total_population", "occupied_homes", "COMUNE", "children_0_14", "n_people", "census_geo", "P16", "P14", "height", "SEZ2011", "area", "elderly_65_plus", "large_families_6plus", "PROVINCIA", "P15", "A2", "P28", "building_geometry", "single_person_families", "building", "building_properties", "REGIONE", "census_area_sqm"], "geometry_columns": ["dda.geometry", "b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "bp", "table_count": 42, "schema_count": 6}, "spatial_functions": ["ST_AREA", "ST_WITHIN", "ST_CENTROID"], "spatial_function_count": 3, "spatial_function_categories": {"predicates": ["ST_WITHIN"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": [], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "cim_census", "cim_vector", "dda", "b", "c"], "tables": ["dda.children_0_14", "cim_census.census_geo", "c.REGIONE", "c.P27", "c.SEZ2011", "cim_vector.building", "dda.elderly_65_plus", "c.A2", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "dda.SEZ2011", "dda.census_area_sqm", "dda.geometry", "c.PF3", "dda.REGIONE", "b.building_geometry", "bp.project_id", "demographic_density_analysis", "c.geometry", "dda.occupied_homes", "dda.total_population", "c.PROVINCIA", "c.P14", "dda.large_families_6plus", "bp.height", "dda.single_person_families", "bp.building_id", "c.P15", "density_indicators", "dda.PROVINCIA", "c.P29", "c.PF8", "dda.COMUNE", "cim_vector.building_properties", "c.P28", "bp.area", "building_density_overlay", "urban_morphology_classification", "b.building_id", "c.P16"], "columns": ["PF3", "P27", "PF8", "P1", "geometry", "P29", "total_population", "occupied_homes", "COMUNE", "children_0_14", "n_people", "census_geo", "P16", "P14", "height", "SEZ2011", "area", "elderly_65_plus", "large_families_6plus", "PROVINCIA", "P15", "A2", "P28", "building_geometry", "single_person_families", "building", "building_properties", "REGIONE", "census_area_sqm"], "functions": ["ST_Within", "ST_Centroid", "ST_Area"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Advanced urban morphology classification combining census demographics with building density for urban planning insights (Project: turin_innovation_zone, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C4_urban_morphology_classification_var_154", "complexity_level": "C", "tags": ["density_analysis", "cim_building", "family_structure", "cross_schema", "aging", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "freq_high", "realistic_params", "urban_morphology"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "industrial", "hvac_type": "heat_pump", "region": "Lombardia", "province": "Firenze", "voltage_kv": 0.4, "srid": 32633, "buffer_distance": 2000, "min_area": 198, "max_area": 4632, "min_height": 6, "max_height": 88, "min_people": 1, "max_people": 8, "year": 2001, "census_id": 4887779, "lon": 7.003018, "lat": 43.482174, "limit": 50, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 500, "min_buildings": 5, "min_points": 8, "min_areas": 5, "cluster_distance": 5000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.100023"}
{"id": "cim_stage1_004840", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis integrating building properties, census demographics, and electrical grid infrastructure for energy demand assessment (Project: turin_innovation_zone, Scenario: zero_emission)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_census_overlay AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         c.SEZ2011, c.P1 as total_population, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) as coverage_ratio\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_census.census_geo c ON ST_Intersects(b.building_geometry, c.geometry)\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'zero_emission'\n    AND ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) > 0.7\n),\ngrid_proximity AS (\n  SELECT bco.building_id, bco.type, bco.height, bco.area, bco.n_people,\n         bco.REGIONE, bco.PROVINCIA, bco.total_population,\n         gb.bus_id, gb.voltage_kv, gb.name as substation_name,\n         ST_Distance(b.building_geometry, gb.geometry) as grid_distance,\n         ROW_NUMBER() OVER (PARTITION BY bco.building_id ORDER BY ST_Distance(b.building_geometry, gb.geometry)) as proximity_rank\n  FROM building_census_overlay bco\n  JOIN cim_vector.building b ON bco.building_id = b.building_id\n  JOIN cim_vector.grid_bus gb ON gb.project_id = 'turin_innovation_zone' AND gb.scenario_id = 'zero_emission'\n  WHERE gb.in_service = true\n    AND ST_DWithin(b.building_geometry, gb.geometry, 2000)\n),\nenergy_analysis AS (\n  SELECT gp.building_id, gp.type, gp.height, gp.area, gp.n_people,\n         gp.REGIONE, gp.PROVINCIA, gp.total_population,\n         gp.grid_distance, gp.voltage_kv, gp.substation_name,\n         CASE \n           WHEN gp.type = 'industrial' THEN gp.area * 0.05  -- 50 W/sqm\n           WHEN gp.type = 'commercial' THEN gp.area * 0.03  -- 30 W/sqm  \n           WHEN gp.type = 'residential' THEN gp.n_people * 1.5  -- 1.5 kW per person\n           ELSE gp.area * 0.02\n         END as estimated_demand_kw,\n         CASE\n           WHEN gp.voltage_kv >= 10 THEN 'high_voltage'\n           WHEN gp.voltage_kv >= 1 THEN 'medium_voltage'\n           ELSE 'low_voltage'\n         END as grid_level\n  FROM grid_proximity gp\n  WHERE gp.proximity_rank = 1\n)\nSELECT REGIONE, PROVINCIA, type, grid_level,\n       COUNT(*) as building_count,\n       ROUND(AVG(height), 1) as avg_height,\n       ROUND(SUM(area), 0) as total_area,\n       ROUND(SUM(estimated_demand_kw), 1) as total_demand_kw,\n       ROUND(AVG(grid_distance), 0) as avg_grid_distance,\n       ROUND(AVG(total_population), 0) as avg_census_population,\n       ROUND(SUM(estimated_demand_kw) / COUNT(*), 2) as demand_per_building\nFROM energy_analysis\nGROUP BY REGIONE, PROVINCIA, type, grid_level\nHAVING COUNT(*) >= 20\nORDER BY total_demand_kw DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "WINDOW_FUNCTION", "sql_taxonomy": {"operation_type": "WINDOW_FUNCTION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "EXPERT", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "EXPERT", "complexity_score": 7}, "difficulty_level": "EXPERT", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["gb", "bp", "cim_census", "1", "bco", "0", "cim_vector", "gp", "b", "c"], "tables": ["gp.type", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "gp.height", "cim_vector.building", "gp.n_people", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "gb.in_service", "bp.type", "gb.voltage_kv", "gb.geometry", "gb.name", "bco.building_id", "0.02", "gb.scenario_id", "b.building_geometry", "gp.voltage_kv", "bp.project_id", "gb.bus_id", "bco.area", "bco.n_people", "gp.building_id", "gp.REGIONE", "0.03", "c.geometry", "gp.area", "1.5", "gp.PROVINCIA", "c.PROVINCIA", "0.7", "bp.height", "bco.total_population", "gp.grid_distance", "cim_vector.grid_bus", "gp.total_population", "gb.project_id", "gp.substation_name", "bp.building_id", "energy_analysis", "bco.type", "building_census_overlay", "bco.height", "bco.REGIONE", "gp.proximity_rank", "cim_vector.building_properties", "bp.area", "0.05", "bco.PROVINCIA", "b.building_id", "grid_proximity"], "columns": ["type", "bus_id", "P1", "geometry", "total_population", "COMUNE", "proximity_rank", "name", "n_people", "5", "census_geo", "in_service", "7", "substation_name", "height", "SEZ2011", "area", "05", "PROVINCIA", "grid_distance", "03", "building_geometry", "building", "building_properties", "REGIONE", "voltage_kv", "grid_bus", "02"], "geometry_columns": ["gb.geometry", "b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "gb", "table_count": 54, "schema_count": 10}, "spatial_functions": ["ST_DWITHIN", "ST_INTERSECTS", "ST_INTERSECTION", "ST_AREA", "ST_DISTANCE"], "spatial_function_count": 5, "spatial_function_categories": {"predicates": ["ST_DWITHIN", "ST_INTERSECTS"], "measurements": ["ST_AREA", "ST_DISTANCE"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["gb", "bp", "cim_census", "1", "bco", "0", "cim_vector", "gp", "b", "c"], "tables": ["gp.type", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "gp.height", "cim_vector.building", "gp.n_people", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "gb.in_service", "bp.type", "gb.voltage_kv", "gb.geometry", "gb.name", "bco.building_id", "0.02", "gb.scenario_id", "b.building_geometry", "gp.voltage_kv", "bp.project_id", "gb.bus_id", "bco.area", "bco.n_people", "gp.building_id", "gp.REGIONE", "0.03", "c.geometry", "gp.area", "1.5", "gp.PROVINCIA", "c.PROVINCIA", "0.7", "bp.height", "bco.total_population", "gp.grid_distance", "cim_vector.grid_bus", "gp.total_population", "gb.project_id", "gp.substation_name", "bp.building_id", "energy_analysis", "bco.type", "building_census_overlay", "bco.height", "bco.REGIONE", "gp.proximity_rank", "cim_vector.building_properties", "bp.area", "0.05", "bco.PROVINCIA", "b.building_id", "grid_proximity"], "columns": ["type", "bus_id", "P1", "geometry", "total_population", "COMUNE", "proximity_rank", "name", "n_people", "5", "census_geo", "in_service", "7", "substation_name", "height", "SEZ2011", "area", "05", "PROVINCIA", "grid_distance", "03", "building_geometry", "building", "building_properties", "REGIONE", "voltage_kv", "grid_bus", "02"], "functions": ["ST_DWithin", "ST_Intersects", "ST_Area", "ST_Intersection", "ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis integrating building properties, census demographics, and electrical grid infrastructure for energy demand assessment (Project: turin_innovation_zone, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C5_integrated_census_grid_analysis_var_17", "complexity_level": "C", "tags": ["cross_table", "cim_building", "multi_schema", "cim_grid", "infrastructure", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "freq_high", "freq_very_high", "realistic_params", "energy_analysis"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "baseline", "building_type": "industrial", "hvac_type": "heat_pump", "region": "Emilia-Romagna", "province": "Roma", "voltage_kv": 132, "srid": 32633, "buffer_distance": 100, "min_area": 131, "max_area": 1572, "min_height": 3, "max_height": 99, "min_people": 3, "max_people": 8, "year": 1960, "census_id": 4115645, "lon": 10.873015, "lat": 37.991783, "limit": 50, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 5000, "min_buildings": 20, "min_points": 3, "min_areas": 3, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:40.110941"}
{"id": "cim_stage1_004878", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis integrating building properties, census demographics, and electrical grid infrastructure for energy demand assessment (Project: turin_innovation_zone, Scenario: baseline)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_census_overlay AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         c.SEZ2011, c.P1 as total_population, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) as coverage_ratio\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_census.census_geo c ON ST_Intersects(b.building_geometry, c.geometry)\n  WHERE bp.project_id = 'turin_innovation_zone' AND bp.scenario_id = 'baseline'\n    AND ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) > 0.7\n),\ngrid_proximity AS (\n  SELECT bco.building_id, bco.type, bco.height, bco.area, bco.n_people,\n         bco.REGIONE, bco.PROVINCIA, bco.total_population,\n         gb.bus_id, gb.voltage_kv, gb.name as substation_name,\n         ST_Distance(b.building_geometry, gb.geometry) as grid_distance,\n         ROW_NUMBER() OVER (PARTITION BY bco.building_id ORDER BY ST_Distance(b.building_geometry, gb.geometry)) as proximity_rank\n  FROM building_census_overlay bco\n  JOIN cim_vector.building b ON bco.building_id = b.building_id\n  JOIN cim_vector.grid_bus gb ON gb.project_id = 'turin_innovation_zone' AND gb.scenario_id = 'baseline'\n  WHERE gb.in_service = true\n    AND ST_DWithin(b.building_geometry, gb.geometry, 5000)\n),\nenergy_analysis AS (\n  SELECT gp.building_id, gp.type, gp.height, gp.area, gp.n_people,\n         gp.REGIONE, gp.PROVINCIA, gp.total_population,\n         gp.grid_distance, gp.voltage_kv, gp.substation_name,\n         CASE \n           WHEN gp.type = 'industrial' THEN gp.area * 0.05  -- 50 W/sqm\n           WHEN gp.type = 'commercial' THEN gp.area * 0.03  -- 30 W/sqm  \n           WHEN gp.type = 'residential' THEN gp.n_people * 1.5  -- 1.5 kW per person\n           ELSE gp.area * 0.02\n         END as estimated_demand_kw,\n         CASE\n           WHEN gp.voltage_kv >= 10 THEN 'high_voltage'\n           WHEN gp.voltage_kv >= 1 THEN 'medium_voltage'\n           ELSE 'low_voltage'\n         END as grid_level\n  FROM grid_proximity gp\n  WHERE gp.proximity_rank = 1\n)\nSELECT REGIONE, PROVINCIA, type, grid_level,\n       COUNT(*) as building_count,\n       ROUND(AVG(height), 1) as avg_height,\n       ROUND(SUM(area), 0) as total_area,\n       ROUND(SUM(estimated_demand_kw), 1) as total_demand_kw,\n       ROUND(AVG(grid_distance), 0) as avg_grid_distance,\n       ROUND(AVG(total_population), 0) as avg_census_population,\n       ROUND(SUM(estimated_demand_kw) / COUNT(*), 2) as demand_per_building\nFROM energy_analysis\nGROUP BY REGIONE, PROVINCIA, type, grid_level\nHAVING COUNT(*) >= 10\nORDER BY total_demand_kw DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "WINDOW_FUNCTION", "sql_taxonomy": {"operation_type": "WINDOW_FUNCTION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "EXPERT", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "EXPERT", "complexity_score": 7}, "difficulty_level": "EXPERT", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["gb", "bp", "cim_census", "1", "bco", "0", "cim_vector", "gp", "b", "c"], "tables": ["gp.type", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "gp.height", "cim_vector.building", "gp.n_people", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "gb.in_service", "bp.type", "gb.voltage_kv", "gb.geometry", "gb.name", "bco.building_id", "0.02", "gb.scenario_id", "b.building_geometry", "gp.voltage_kv", "bp.project_id", "gb.bus_id", "bco.area", "bco.n_people", "gp.building_id", "gp.REGIONE", "0.03", "c.geometry", "gp.area", "1.5", "gp.PROVINCIA", "c.PROVINCIA", "0.7", "bp.height", "bco.total_population", "gp.grid_distance", "cim_vector.grid_bus", "gp.total_population", "gb.project_id", "gp.substation_name", "bp.building_id", "energy_analysis", "bco.type", "building_census_overlay", "bco.height", "bco.REGIONE", "gp.proximity_rank", "cim_vector.building_properties", "bp.area", "0.05", "bco.PROVINCIA", "b.building_id", "grid_proximity"], "columns": ["type", "bus_id", "P1", "geometry", "total_population", "COMUNE", "proximity_rank", "name", "n_people", "5", "census_geo", "in_service", "7", "substation_name", "height", "SEZ2011", "area", "05", "PROVINCIA", "grid_distance", "03", "building_geometry", "building", "building_properties", "REGIONE", "voltage_kv", "grid_bus", "02"], "geometry_columns": ["gb.geometry", "b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "gb", "table_count": 54, "schema_count": 10}, "spatial_functions": ["ST_DWITHIN", "ST_INTERSECTS", "ST_INTERSECTION", "ST_AREA", "ST_DISTANCE"], "spatial_function_count": 5, "spatial_function_categories": {"predicates": ["ST_DWITHIN", "ST_INTERSECTS"], "measurements": ["ST_AREA", "ST_DISTANCE"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["gb", "bp", "cim_census", "1", "bco", "0", "cim_vector", "gp", "b", "c"], "tables": ["gp.type", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "gp.height", "cim_vector.building", "gp.n_people", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "gb.in_service", "bp.type", "gb.voltage_kv", "gb.geometry", "gb.name", "bco.building_id", "0.02", "gb.scenario_id", "b.building_geometry", "gp.voltage_kv", "bp.project_id", "gb.bus_id", "bco.area", "bco.n_people", "gp.building_id", "gp.REGIONE", "0.03", "c.geometry", "gp.area", "1.5", "gp.PROVINCIA", "c.PROVINCIA", "0.7", "bp.height", "bco.total_population", "gp.grid_distance", "cim_vector.grid_bus", "gp.total_population", "gb.project_id", "gp.substation_name", "bp.building_id", "energy_analysis", "bco.type", "building_census_overlay", "bco.height", "bco.REGIONE", "gp.proximity_rank", "cim_vector.building_properties", "bp.area", "0.05", "bco.PROVINCIA", "b.building_id", "grid_proximity"], "columns": ["type", "bus_id", "P1", "geometry", "total_population", "COMUNE", "proximity_rank", "name", "n_people", "5", "census_geo", "in_service", "7", "substation_name", "height", "SEZ2011", "area", "05", "PROVINCIA", "grid_distance", "03", "building_geometry", "building", "building_properties", "REGIONE", "voltage_kv", "grid_bus", "02"], "functions": ["ST_DWithin", "ST_Intersects", "ST_Area", "ST_Intersection", "ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis integrating building properties, census demographics, and electrical grid infrastructure for energy demand assessment (Project: turin_innovation_zone, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C5_integrated_census_grid_analysis_var_55", "complexity_level": "C", "tags": ["cross_table", "cim_building", "multi_schema", "cim_grid", "infrastructure", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "freq_high", "freq_very_high", "realistic_params", "energy_analysis"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "baseline", "building_type": "mixed_use", "hvac_type": "gas_boiler", "region": "Lombardia", "province": "Torino", "voltage_kv": 220, "srid": 4326, "buffer_distance": 1000, "min_area": 262, "max_area": 4755, "min_height": 9, "max_height": 77, "min_people": 3, "max_people": 6, "year": 1981, "census_id": 1756857, "lon": 9.309425, "lat": 40.458289, "limit": 10, "cluster_count": 10, "min_cluster_size": 3, "max_distance": 500, "min_buildings": 20, "min_points": 8, "min_areas": 3, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.116132"}
{"id": "cim_stage1_004892", "database_id": 1, "database_name": "cim_wizard", "question": "Comprehensive analysis integrating building properties, census demographics, and electrical grid infrastructure for energy demand assessment (Project: bologna_energy_hub, Scenario: zero_emission)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_census_overlay AS (\n  SELECT b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         c.SEZ2011, c.P1 as total_population, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) as coverage_ratio\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_census.census_geo c ON ST_Intersects(b.building_geometry, c.geometry)\n  WHERE bp.project_id = 'bologna_energy_hub' AND bp.scenario_id = 'zero_emission'\n    AND ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) > 0.7\n),\ngrid_proximity AS (\n  SELECT bco.building_id, bco.type, bco.height, bco.area, bco.n_people,\n         bco.REGIONE, bco.PROVINCIA, bco.total_population,\n         gb.bus_id, gb.voltage_kv, gb.name as substation_name,\n         ST_Distance(b.building_geometry, gb.geometry) as grid_distance,\n         ROW_NUMBER() OVER (PARTITION BY bco.building_id ORDER BY ST_Distance(b.building_geometry, gb.geometry)) as proximity_rank\n  FROM building_census_overlay bco\n  JOIN cim_vector.building b ON bco.building_id = b.building_id\n  JOIN cim_vector.grid_bus gb ON gb.project_id = 'bologna_energy_hub' AND gb.scenario_id = 'zero_emission'\n  WHERE gb.in_service = true\n    AND ST_DWithin(b.building_geometry, gb.geometry, 5000)\n),\nenergy_analysis AS (\n  SELECT gp.building_id, gp.type, gp.height, gp.area, gp.n_people,\n         gp.REGIONE, gp.PROVINCIA, gp.total_population,\n         gp.grid_distance, gp.voltage_kv, gp.substation_name,\n         CASE \n           WHEN gp.type = 'industrial' THEN gp.area * 0.05  -- 50 W/sqm\n           WHEN gp.type = 'commercial' THEN gp.area * 0.03  -- 30 W/sqm  \n           WHEN gp.type = 'residential' THEN gp.n_people * 1.5  -- 1.5 kW per person\n           ELSE gp.area * 0.02\n         END as estimated_demand_kw,\n         CASE\n           WHEN gp.voltage_kv >= 10 THEN 'high_voltage'\n           WHEN gp.voltage_kv >= 1 THEN 'medium_voltage'\n           ELSE 'low_voltage'\n         END as grid_level\n  FROM grid_proximity gp\n  WHERE gp.proximity_rank = 1\n)\nSELECT REGIONE, PROVINCIA, type, grid_level,\n       COUNT(*) as building_count,\n       ROUND(AVG(height), 1) as avg_height,\n       ROUND(SUM(area), 0) as total_area,\n       ROUND(SUM(estimated_demand_kw), 1) as total_demand_kw,\n       ROUND(AVG(grid_distance), 0) as avg_grid_distance,\n       ROUND(AVG(total_population), 0) as avg_census_population,\n       ROUND(SUM(estimated_demand_kw) / COUNT(*), 2) as demand_per_building\nFROM energy_analysis\nGROUP BY REGIONE, PROVINCIA, type, grid_level\nHAVING COUNT(*) >= 10\nORDER BY total_demand_kw DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "WINDOW_FUNCTION", "sql_taxonomy": {"operation_type": "WINDOW_FUNCTION", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": true, "join_type": "standard"}, "difficulty": {"query_complexity": "EXPERT", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "EXPERT", "complexity_score": 7}, "difficulty_level": "EXPERT", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["gb", "bp", "cim_census", "1", "bco", "0", "cim_vector", "gp", "b", "c"], "tables": ["gp.type", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "gp.height", "cim_vector.building", "gp.n_people", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "gb.in_service", "bp.type", "gb.voltage_kv", "gb.geometry", "gb.name", "bco.building_id", "0.02", "gb.scenario_id", "b.building_geometry", "gp.voltage_kv", "bp.project_id", "gb.bus_id", "bco.area", "bco.n_people", "gp.building_id", "gp.REGIONE", "0.03", "c.geometry", "gp.area", "1.5", "gp.PROVINCIA", "c.PROVINCIA", "0.7", "bp.height", "bco.total_population", "gp.grid_distance", "cim_vector.grid_bus", "gp.total_population", "gb.project_id", "gp.substation_name", "bp.building_id", "energy_analysis", "bco.type", "building_census_overlay", "bco.height", "bco.REGIONE", "gp.proximity_rank", "cim_vector.building_properties", "bp.area", "0.05", "bco.PROVINCIA", "b.building_id", "grid_proximity"], "columns": ["type", "bus_id", "P1", "geometry", "total_population", "COMUNE", "proximity_rank", "name", "n_people", "5", "census_geo", "in_service", "7", "substation_name", "height", "SEZ2011", "area", "05", "PROVINCIA", "grid_distance", "03", "building_geometry", "building", "building_properties", "REGIONE", "voltage_kv", "grid_bus", "02"], "geometry_columns": ["gb.geometry", "b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "gb", "table_count": 54, "schema_count": 10}, "spatial_functions": ["ST_DWITHIN", "ST_INTERSECTS", "ST_INTERSECTION", "ST_AREA", "ST_DISTANCE"], "spatial_function_count": 5, "spatial_function_categories": {"predicates": ["ST_DWITHIN", "ST_INTERSECTS"], "measurements": ["ST_AREA", "ST_DISTANCE"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["gb", "bp", "cim_census", "1", "bco", "0", "cim_vector", "gp", "b", "c"], "tables": ["gp.type", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "gp.height", "cim_vector.building", "gp.n_people", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "gb.in_service", "bp.type", "gb.voltage_kv", "gb.geometry", "gb.name", "bco.building_id", "0.02", "gb.scenario_id", "b.building_geometry", "gp.voltage_kv", "bp.project_id", "gb.bus_id", "bco.area", "bco.n_people", "gp.building_id", "gp.REGIONE", "0.03", "c.geometry", "gp.area", "1.5", "gp.PROVINCIA", "c.PROVINCIA", "0.7", "bp.height", "bco.total_population", "gp.grid_distance", "cim_vector.grid_bus", "gp.total_population", "gb.project_id", "gp.substation_name", "bp.building_id", "energy_analysis", "bco.type", "building_census_overlay", "bco.height", "bco.REGIONE", "gp.proximity_rank", "cim_vector.building_properties", "bp.area", "0.05", "bco.PROVINCIA", "b.building_id", "grid_proximity"], "columns": ["type", "bus_id", "P1", "geometry", "total_population", "COMUNE", "proximity_rank", "name", "n_people", "5", "census_geo", "in_service", "7", "substation_name", "height", "SEZ2011", "area", "05", "PROVINCIA", "grid_distance", "03", "building_geometry", "building", "building_properties", "REGIONE", "voltage_kv", "grid_bus", "02"], "functions": ["ST_DWithin", "ST_Intersects", "ST_Area", "ST_Intersection", "ST_Distance"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Comprehensive analysis integrating building properties, census demographics, and electrical grid infrastructure for energy demand assessment (Project: bologna_energy_hub, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C5_integrated_census_grid_analysis_var_69", "complexity_level": "C", "tags": ["cross_table", "cim_building", "multi_schema", "cim_grid", "infrastructure", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "freq_high", "freq_very_high", "realistic_params", "energy_analysis"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "grid_modernization", "building_type": "industrial", "hvac_type": "hybrid", "region": "Lombardia", "province": "Bologna", "voltage_kv": 20, "srid": 4326, "buffer_distance": 1000, "min_area": 282, "max_area": 3807, "min_height": 6, "max_height": 100, "min_people": 2, "max_people": 20, "year": 1981, "census_id": 2654673, "lon": 14.403047, "lat": 37.515738, "limit": 50, "cluster_count": 3, "min_cluster_size": 3, "max_distance": 2000, "min_buildings": 20, "min_points": 8, "min_areas": 5, "cluster_distance": 5000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.118019"}
{"id": "cim_stage1_005045", "database_id": 1, "database_name": "cim_wizard", "question": "3D analysis of buildings using DTM and DSM raster data (Project: florence_heritage_area, Scenario: baseline)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH building_raster_stats AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.height as declared_height,\n         ST_Value(dtm.rast, ST_Centroid(b.building_geometry)) as ground_elevation,\n         ST_Value(dsm.rast, ST_Centroid(b.building_geometry)) as surface_elevation,\n         ST_Area(b.building_geometry) as footprint_area\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.dtm_raster dtm ON ST_Intersects(dtm.rast, b.building_geometry)\n  JOIN cim_raster.dsm_raster dsm ON ST_Intersects(dsm.rast, b.building_geometry)\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'baseline'\n)\nSELECT type,\n       COUNT(*) as building_count,\n       AVG(declared_height) as avg_declared_height,\n       AVG(surface_elevation - ground_elevation) as avg_raster_height,\n       AVG(ground_elevation) as avg_ground_elevation,\n       SUM(footprint_area) as total_footprint_area,\n       AVG(ABS(declared_height - (surface_elevation - ground_elevation))) as avg_height_discrepancy\nFROM building_raster_stats\nWHERE ground_elevation IS NOT NULL AND surface_elevation IS NOT NULL\nGROUP BY type\nORDER BY avg_height_discrepancy DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "RASTER_VECTOR", "sql_taxonomy": {"operation_type": "RASTER_VECTOR", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "bp.scenario_id", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "building_raster_stats", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "dsm_raster"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "dsm", "table_count": 14, "schema_count": 6}, "spatial_functions": ["ST_CENTROID", "ST_INTERSECTS", "ST_VALUE", "ST_AREA"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": ["ST_VALUE"], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "bp.scenario_id", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "building_raster_stats", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "dsm_raster"], "functions": ["ST_Value", "ST_Centroid", "ST_Area", "ST_Intersects"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: 3D analysis of buildings using DTM and DSM raster data (Project: florence_heritage_area, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C3_3d_raster_building_analysis_var_22", "complexity_level": "C", "tags": ["cim_building", "postgis_only", "cim_wizard", "freq_critical", "elevation", "freq_high", "realistic_params", "cim_raster", "3d_analysis"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "renewable_2030", "building_type": "residential", "hvac_type": "hybrid", "region": "Toscana", "province": "Firenze", "voltage_kv": 132, "srid": 32633, "buffer_distance": 500, "min_area": 205, "max_area": 1202, "min_height": 7, "max_height": 21, "min_people": 1, "max_people": 6, "year": 2016, "census_id": 7098419, "lon": 17.059618, "lat": 39.311765, "limit": 10, "cluster_count": 5, "min_cluster_size": 5, "max_distance": 500, "min_buildings": 20, "min_points": 8, "min_areas": 3, "cluster_distance": 5000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.138200"}
{"id": "cim_stage1_005063", "database_id": 1, "database_name": "cim_wizard", "question": "3D analysis of buildings using DTM and DSM raster data (Project: florence_heritage_area, Scenario: renewable_2030)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH building_raster_stats AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.height as declared_height,\n         ST_Value(dtm.rast, ST_Centroid(b.building_geometry)) as ground_elevation,\n         ST_Value(dsm.rast, ST_Centroid(b.building_geometry)) as surface_elevation,\n         ST_Area(b.building_geometry) as footprint_area\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.dtm_raster dtm ON ST_Intersects(dtm.rast, b.building_geometry)\n  JOIN cim_raster.dsm_raster dsm ON ST_Intersects(dsm.rast, b.building_geometry)\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'renewable_2030'\n)\nSELECT type,\n       COUNT(*) as building_count,\n       AVG(declared_height) as avg_declared_height,\n       AVG(surface_elevation - ground_elevation) as avg_raster_height,\n       AVG(ground_elevation) as avg_ground_elevation,\n       SUM(footprint_area) as total_footprint_area,\n       AVG(ABS(declared_height - (surface_elevation - ground_elevation))) as avg_height_discrepancy\nFROM building_raster_stats\nWHERE ground_elevation IS NOT NULL AND surface_elevation IS NOT NULL\nGROUP BY type\nORDER BY avg_height_discrepancy DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "RASTER_VECTOR", "sql_taxonomy": {"operation_type": "RASTER_VECTOR", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "bp.scenario_id", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "building_raster_stats", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "dsm_raster"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "dsm", "table_count": 14, "schema_count": 6}, "spatial_functions": ["ST_CENTROID", "ST_INTERSECTS", "ST_VALUE", "ST_AREA"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": ["ST_VALUE"], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "bp.scenario_id", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "building_raster_stats", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "dsm_raster"], "functions": ["ST_Value", "ST_Centroid", "ST_Area", "ST_Intersects"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: 3D analysis of buildings using DTM and DSM raster data (Project: florence_heritage_area, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C3_3d_raster_building_analysis_var_40", "complexity_level": "C", "tags": ["cim_building", "postgis_only", "cim_wizard", "freq_critical", "elevation", "freq_high", "realistic_params", "cim_raster", "3d_analysis"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "efficiency_max", "building_type": "mixed_use", "hvac_type": "district_heating", "region": "Piemonte", "province": "Roma", "voltage_kv": 20, "srid": 32632, "buffer_distance": 500, "min_area": 245, "max_area": 2604, "min_height": 10, "max_height": 66, "min_people": 2, "max_people": 6, "year": 2016, "census_id": 1309459, "lon": 16.539237, "lat": 46.297395, "limit": 10, "cluster_count": 3, "min_cluster_size": 5, "max_distance": 5000, "min_buildings": 5, "min_points": 5, "min_areas": 5, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.139706"}
{"id": "cim_stage1_005086", "database_id": 1, "database_name": "cim_wizard", "question": "3D analysis of buildings using DTM and DSM raster data (Project: milan_smart_district, Scenario: zero_emission)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH building_raster_stats AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.height as declared_height,\n         ST_Value(dtm.rast, ST_Centroid(b.building_geometry)) as ground_elevation,\n         ST_Value(dsm.rast, ST_Centroid(b.building_geometry)) as surface_elevation,\n         ST_Area(b.building_geometry) as footprint_area\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.dtm_raster dtm ON ST_Intersects(dtm.rast, b.building_geometry)\n  JOIN cim_raster.dsm_raster dsm ON ST_Intersects(dsm.rast, b.building_geometry)\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'zero_emission'\n)\nSELECT type,\n       COUNT(*) as building_count,\n       AVG(declared_height) as avg_declared_height,\n       AVG(surface_elevation - ground_elevation) as avg_raster_height,\n       AVG(ground_elevation) as avg_ground_elevation,\n       SUM(footprint_area) as total_footprint_area,\n       AVG(ABS(declared_height - (surface_elevation - ground_elevation))) as avg_height_discrepancy\nFROM building_raster_stats\nWHERE ground_elevation IS NOT NULL AND surface_elevation IS NOT NULL\nGROUP BY type\nORDER BY avg_height_discrepancy DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "RASTER_VECTOR", "sql_taxonomy": {"operation_type": "RASTER_VECTOR", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "bp.scenario_id", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "building_raster_stats", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "dsm_raster"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "dsm", "table_count": 14, "schema_count": 6}, "spatial_functions": ["ST_CENTROID", "ST_INTERSECTS", "ST_VALUE", "ST_AREA"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": ["ST_VALUE"], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "bp.scenario_id", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "building_raster_stats", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "dsm_raster"], "functions": ["ST_Value", "ST_Centroid", "ST_Area", "ST_Intersects"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: 3D analysis of buildings using DTM and DSM raster data (Project: milan_smart_district, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C3_3d_raster_building_analysis_var_63", "complexity_level": "C", "tags": ["cim_building", "postgis_only", "cim_wizard", "freq_critical", "elevation", "freq_high", "realistic_params", "cim_raster", "3d_analysis"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "efficiency_max", "building_type": "residential", "hvac_type": "gas_boiler", "region": "Emilia-Romagna", "province": "Firenze", "voltage_kv": 400, "srid": 3857, "buffer_distance": 1000, "min_area": 486, "max_area": 2688, "min_height": 8, "max_height": 21, "min_people": 4, "max_people": 12, "year": 1961, "census_id": 1324621, "lon": 13.128733, "lat": 36.390818, "limit": 50, "cluster_count": 3, "min_cluster_size": 10, "max_distance": 500, "min_buildings": 10, "min_points": 8, "min_areas": 5, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:40.141640"}
{"id": "cim_stage1_005216", "database_id": 1, "database_name": "cim_wizard", "question": "3D analysis of buildings using DTM and DSM raster data (Project: bologna_energy_hub, Scenario: baseline)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH building_raster_stats AS (\n  SELECT b.building_id,\n         bp.type,\n         bp.height as declared_height,\n         ST_Value(dtm.rast, ST_Centroid(b.building_geometry)) as ground_elevation,\n         ST_Value(dsm.rast, ST_Centroid(b.building_geometry)) as surface_elevation,\n         ST_Area(b.building_geometry) as footprint_area\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.dtm_raster dtm ON ST_Intersects(dtm.rast, b.building_geometry)\n  JOIN cim_raster.dsm_raster dsm ON ST_Intersects(dsm.rast, b.building_geometry)\n  WHERE bp.project_id = 'bologna_energy_hub' AND bp.scenario_id = 'baseline'\n)\nSELECT type,\n       COUNT(*) as building_count,\n       AVG(declared_height) as avg_declared_height,\n       AVG(surface_elevation - ground_elevation) as avg_raster_height,\n       AVG(ground_elevation) as avg_ground_elevation,\n       SUM(footprint_area) as total_footprint_area,\n       AVG(ABS(declared_height - (surface_elevation - ground_elevation))) as avg_height_discrepancy\nFROM building_raster_stats\nWHERE ground_elevation IS NOT NULL AND surface_elevation IS NOT NULL\nGROUP BY type\nORDER BY avg_height_discrepancy DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "RASTER_VECTOR", "sql_taxonomy": {"operation_type": "RASTER_VECTOR", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "bp.scenario_id", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "building_raster_stats", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "dsm_raster"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "dsm", "table_count": 14, "schema_count": 6}, "spatial_functions": ["ST_CENTROID", "ST_INTERSECTS", "ST_VALUE", "ST_AREA"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": [], "clustering": [], "raster": ["ST_VALUE"], "transforms": [], "accessors": ["ST_CENTROID"], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "bp.scenario_id", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "building_raster_stats", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "dsm_raster"], "functions": ["ST_Value", "ST_Centroid", "ST_Area", "ST_Intersects"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: 3D analysis of buildings using DTM and DSM raster data (Project: bologna_energy_hub, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C3_3d_raster_building_analysis_var_193", "complexity_level": "C", "tags": ["cim_building", "postgis_only", "cim_wizard", "freq_critical", "elevation", "freq_high", "realistic_params", "cim_raster", "3d_analysis"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "renewable_2030", "building_type": "residential", "hvac_type": "district_heating", "region": "Emilia-Romagna", "province": "Firenze", "voltage_kv": 220, "srid": 32633, "buffer_distance": 2000, "min_area": 471, "max_area": 4318, "min_height": 8, "max_height": 62, "min_people": 2, "max_people": 19, "year": 1985, "census_id": 1943647, "lon": 17.377592, "lat": 44.511527, "limit": 50, "cluster_count": 10, "min_cluster_size": 10, "max_distance": 500, "min_buildings": 20, "min_points": 3, "min_areas": 10, "cluster_distance": 1000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.153670"}
{"id": "cim_stage1_005258", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate precise building heights by clipping DSM and DTM rasters with building footprints and computing elevation differences (Project: milan_smart_district, Scenario: efficiency_max)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_raster_intersections AS (\n  SELECT b.building_id, bp.type, bp.height as declared_height,\n         ST_Intersection(b.building_geometry, dsm.rast) as dsm_clip,\n         ST_Intersection(b.building_geometry, dtm.rast) as dtm_clip,\n         ST_Area(b.building_geometry) as building_area\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.dsm_raster dsm ON ST_Intersects(b.building_geometry, dsm.rast)\n  JOIN cim_raster.dtm_raster dtm ON ST_Intersects(b.building_geometry, dtm.rast)\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'efficiency_max'\n    AND bp.type = 'public'\n),\nheight_calculations AS (\n  SELECT building_id, type, declared_height,\n         (ST_SummaryStats(dsm_clip)).mean as avg_dsm_elevation,\n         (ST_SummaryStats(dtm_clip)).mean as avg_dtm_elevation,\n         building_area,\n         (ST_SummaryStats(dsm_clip)).count as dsm_pixel_count,\n         (ST_SummaryStats(dtm_clip)).count as dtm_pixel_count\n  FROM building_raster_intersections\n  WHERE dsm_clip IS NOT NULL AND dtm_clip IS NOT NULL\n)\nSELECT building_id, type, declared_height, building_area,\n       ROUND(avg_dsm_elevation, 2) as surface_elevation,\n       ROUND(avg_dtm_elevation, 2) as ground_elevation,\n       ROUND((avg_dsm_elevation - avg_dtm_elevation), 2) as calculated_height,\n       ROUND(ABS(declared_height - (avg_dsm_elevation - avg_dtm_elevation)), 2) as height_difference,\n       dsm_pixel_count, dtm_pixel_count\nFROM height_calculations\nWHERE avg_dsm_elevation IS NOT NULL AND avg_dtm_elevation IS NOT NULL\n  AND (avg_dsm_elevation - avg_dtm_elevation) > 10\nORDER BY height_difference DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "RASTER_VECTOR", "sql_taxonomy": {"operation_type": "RASTER_VECTOR", "has_cte": true, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "building_raster_intersections", "bp.scenario_id", "height_calculations", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "count", "dsm_raster", "mean"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "dsm", "table_count": 15, "schema_count": 6}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_SUMMARYSTATS", "ST_INTERSECTION"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": ["ST_SUMMARYSTATS"], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "building_raster_intersections", "bp.scenario_id", "height_calculations", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "count", "dsm_raster", "mean"], "functions": ["ST_SummaryStats", "ST_Area", "ST_Intersects", "ST_Intersection"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate precise building heights by clipping DSM and DTM rasters with building footprints and computing elevation differences (Project: milan_smart_district, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C4_precise_building_height_raster_var_35", "complexity_level": "C", "tags": ["cross_table", "cim_building", "raster_vector", "dsm", "height_analysis", "postgis_only", "cim_wizard", "freq_critical", "realistic_params", "freq_very_high", "cim_raster", "dtm"], "generation_params": {"project_id": "milan_smart_district", "scenario_id": "baseline", "building_type": "residential", "hvac_type": "district_heating", "region": "Lombardia", "province": "Milano", "voltage_kv": 0.4, "srid": 32632, "buffer_distance": 500, "min_area": 228, "max_area": 4879, "min_height": 8, "max_height": 80, "min_people": 2, "max_people": 11, "year": 2015, "census_id": 9806508, "lon": 14.60966, "lat": 45.896251, "limit": 50, "cluster_count": 8, "min_cluster_size": 3, "max_distance": 2000, "min_buildings": 20, "min_points": 8, "min_areas": 5, "cluster_distance": 2000, "min_population": 1000}, "generated_at": "2025-10-06T13:48:40.157496"}
{"id": "cim_stage1_005297", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate precise building heights by clipping DSM and DTM rasters with building footprints and computing elevation differences (Project: florence_heritage_area, Scenario: baseline)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_raster_intersections AS (\n  SELECT b.building_id, bp.type, bp.height as declared_height,\n         ST_Intersection(b.building_geometry, dsm.rast) as dsm_clip,\n         ST_Intersection(b.building_geometry, dtm.rast) as dtm_clip,\n         ST_Area(b.building_geometry) as building_area\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.dsm_raster dsm ON ST_Intersects(b.building_geometry, dsm.rast)\n  JOIN cim_raster.dtm_raster dtm ON ST_Intersects(b.building_geometry, dtm.rast)\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'baseline'\n    AND bp.type = 'industrial'\n),\nheight_calculations AS (\n  SELECT building_id, type, declared_height,\n         (ST_SummaryStats(dsm_clip)).mean as avg_dsm_elevation,\n         (ST_SummaryStats(dtm_clip)).mean as avg_dtm_elevation,\n         building_area,\n         (ST_SummaryStats(dsm_clip)).count as dsm_pixel_count,\n         (ST_SummaryStats(dtm_clip)).count as dtm_pixel_count\n  FROM building_raster_intersections\n  WHERE dsm_clip IS NOT NULL AND dtm_clip IS NOT NULL\n)\nSELECT building_id, type, declared_height, building_area,\n       ROUND(avg_dsm_elevation, 2) as surface_elevation,\n       ROUND(avg_dtm_elevation, 2) as ground_elevation,\n       ROUND((avg_dsm_elevation - avg_dtm_elevation), 2) as calculated_height,\n       ROUND(ABS(declared_height - (avg_dsm_elevation - avg_dtm_elevation)), 2) as height_difference,\n       dsm_pixel_count, dtm_pixel_count\nFROM height_calculations\nWHERE avg_dsm_elevation IS NOT NULL AND avg_dtm_elevation IS NOT NULL\n  AND (avg_dsm_elevation - avg_dtm_elevation) > 5\nORDER BY height_difference DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "RASTER_VECTOR", "sql_taxonomy": {"operation_type": "RASTER_VECTOR", "has_cte": true, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "building_raster_intersections", "bp.scenario_id", "height_calculations", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "count", "dsm_raster", "mean"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "dsm", "table_count": 15, "schema_count": 6}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_SUMMARYSTATS", "ST_INTERSECTION"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": ["ST_SUMMARYSTATS"], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "building_raster_intersections", "bp.scenario_id", "height_calculations", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "count", "dsm_raster", "mean"], "functions": ["ST_SummaryStats", "ST_Area", "ST_Intersects", "ST_Intersection"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate precise building heights by clipping DSM and DTM rasters with building footprints and computing elevation differences (Project: florence_heritage_area, Scenario: baseline)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C4_precise_building_height_raster_var_74", "complexity_level": "C", "tags": ["cross_table", "cim_building", "raster_vector", "dsm", "height_analysis", "postgis_only", "cim_wizard", "freq_critical", "realistic_params", "freq_very_high", "cim_raster", "dtm"], "generation_params": {"project_id": "bologna_energy_hub", "scenario_id": "zero_emission", "building_type": "industrial", "hvac_type": "hybrid", "region": "Lombardia", "province": "Firenze", "voltage_kv": 10, "srid": 32632, "buffer_distance": 2000, "min_area": 249, "max_area": 2180, "min_height": 8, "max_height": 18, "min_people": 4, "max_people": 18, "year": 1995, "census_id": 8137680, "lon": 14.423023, "lat": 42.501743, "limit": 25, "cluster_count": 5, "min_cluster_size": 10, "max_distance": 2000, "min_buildings": 5, "min_points": 5, "min_areas": 10, "cluster_distance": 1000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.161150"}
{"id": "cim_stage1_005396", "database_id": 1, "database_name": "cim_wizard", "question": "Calculate precise building heights by clipping DSM and DTM rasters with building footprints and computing elevation differences (Project: florence_heritage_area, Scenario: efficiency_max)", "question_tone": "ANALYTICAL", "sql_postgis": "WITH building_raster_intersections AS (\n  SELECT b.building_id, bp.type, bp.height as declared_height,\n         ST_Intersection(b.building_geometry, dsm.rast) as dsm_clip,\n         ST_Intersection(b.building_geometry, dtm.rast) as dtm_clip,\n         ST_Area(b.building_geometry) as building_area\n  FROM cim_vector.building b\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  JOIN cim_raster.dsm_raster dsm ON ST_Intersects(b.building_geometry, dsm.rast)\n  JOIN cim_raster.dtm_raster dtm ON ST_Intersects(b.building_geometry, dtm.rast)\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'efficiency_max'\n    AND bp.type = 'residential'\n),\nheight_calculations AS (\n  SELECT building_id, type, declared_height,\n         (ST_SummaryStats(dsm_clip)).mean as avg_dsm_elevation,\n         (ST_SummaryStats(dtm_clip)).mean as avg_dtm_elevation,\n         building_area,\n         (ST_SummaryStats(dsm_clip)).count as dsm_pixel_count,\n         (ST_SummaryStats(dtm_clip)).count as dtm_pixel_count\n  FROM building_raster_intersections\n  WHERE dsm_clip IS NOT NULL AND dtm_clip IS NOT NULL\n)\nSELECT building_id, type, declared_height, building_area,\n       ROUND(avg_dsm_elevation, 2) as surface_elevation,\n       ROUND(avg_dtm_elevation, 2) as ground_elevation,\n       ROUND((avg_dsm_elevation - avg_dtm_elevation), 2) as calculated_height,\n       ROUND(ABS(declared_height - (avg_dsm_elevation - avg_dtm_elevation)), 2) as height_difference,\n       dsm_pixel_count, dtm_pixel_count\nFROM height_calculations\nWHERE avg_dsm_elevation IS NOT NULL AND avg_dtm_elevation IS NOT NULL\n  AND (avg_dsm_elevation - avg_dtm_elevation) > 8\nORDER BY height_difference DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "RASTER_VECTOR", "sql_taxonomy": {"operation_type": "RASTER_VECTOR", "has_cte": true, "has_subquery": false, "has_aggregation": false, "has_window_function": false, "join_type": "standard"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "3-5", "overall_difficulty": "MEDIUM", "complexity_score": 4}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "building_raster_intersections", "bp.scenario_id", "height_calculations", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "count", "dsm_raster", "mean"], "geometry_columns": ["b.building_geometry", "building_geometry"], "primary_schema": "dsm", "table_count": 15, "schema_count": 6}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_SUMMARYSTATS", "ST_INTERSECTION"], "spatial_function_count": 4, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": ["ST_SUMMARYSTATS"], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["dsm", "bp", "cim_vector", "cim_raster", "dtm", "b"], "tables": ["b.building_geometry", "dtm.rast", "bp.project_id", "cim_vector.building", "bp.height", "cim_vector.building_properties", "cim_raster.dsm_raster", "building_raster_intersections", "bp.scenario_id", "height_calculations", "b.building_id", "cim_raster.dtm_raster", "bp.building_id", "bp.type", "dsm.rast"], "columns": ["type", "height", "dtm_raster", "building_geometry", "rast", "building", "building_properties", "count", "dsm_raster", "mean"], "functions": ["ST_SummaryStats", "ST_Area", "ST_Intersects", "ST_Intersection"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Calculate precise building heights by clipping DSM and DTM rasters with building footprints and computing elevation differences (Project: florence_heritage_area, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_C4_precise_building_height_raster_var_173", "complexity_level": "C", "tags": ["cross_table", "cim_building", "raster_vector", "dsm", "height_analysis", "postgis_only", "cim_wizard", "freq_critical", "realistic_params", "freq_very_high", "cim_raster", "dtm"], "generation_params": {"project_id": "florence_heritage_area", "scenario_id": "grid_modernization", "building_type": "commercial", "hvac_type": "gas_boiler", "region": "Lombardia", "province": "Firenze", "voltage_kv": 220, "srid": 32633, "buffer_distance": 2000, "min_area": 165, "max_area": 3286, "min_height": 3, "max_height": 92, "min_people": 5, "max_people": 8, "year": 1968, "census_id": 1686817, "lon": 12.194364, "lat": 36.511817, "limit": 10, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 500, "min_buildings": 5, "min_points": 8, "min_areas": 3, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:40.170117"}
{"id": "cim_stage1_005492", "database_id": 1, "database_name": "cim_wizard", "question": "Integrate census socioeconomic data with building properties for comprehensive urban profiling and development analysis (Project: milan_smart_district, Scenario: renewable_2030)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH census_building_overlay AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as census_population,\n         c.P47 as university_graduates,\n         c.P61 as employed_residents,\n         c.A47 as owned_families,\n         c.PF1 as total_families,\n         c.E3 as residential_buildings_census,\n         b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) as overlap_ratio\n  FROM cim_census.census_geo c\n  JOIN cim_vector.building b ON ST_Intersects(b.building_geometry, c.geometry)\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'renewable_2030'\n    AND c.REGIONE = 'Lazio'\n    AND ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) > 0.6\n),\nsocioeconomic_building_profile AS (\n  SELECT cbo.SEZ2011, cbo.REGIONE, cbo.PROVINCIA, cbo.COMUNE,\n         cbo.building_id, cbo.type, cbo.height, cbo.area, cbo.n_people,\n         cbo.census_population, cbo.university_graduates, cbo.employed_residents,\n         ROUND((cbo.university_graduates::float / NULLIF(cbo.census_population, 0)) * 100, 1) as education_index,\n         ROUND((cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) * 100, 1) as employment_index,\n         ROUND((cbo.owned_families::float / NULLIF(cbo.total_families, 0)) * 100, 1) as ownership_rate,\n         CASE \n           WHEN cbo.type = 'residential' AND (cbo.university_graduates::float / NULLIF(cbo.census_population, 0)) > 0.25 THEN 'HIGH_EDUCATION_RESIDENTIAL'\n           WHEN cbo.type = 'commercial' AND (cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) > 0.70 THEN 'ACTIVE_COMMERCIAL_ZONE'\n           WHEN cbo.type = 'industrial' AND (cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) > 0.65 THEN 'INDUSTRIAL_EMPLOYMENT_HUB'\n           ELSE 'STANDARD_MIXED_USE'\n         END as socioeconomic_profile\n  FROM census_building_overlay cbo\n)\nSELECT socioeconomic_profile, PROVINCIA,\n       COUNT(DISTINCT building_id) as buildings_count,\n       COUNT(DISTINCT SEZ2011) as census_areas_count,\n       ROUND(AVG(education_index), 1) as avg_education_index,\n       ROUND(AVG(employment_index), 1) as avg_employment_index,\n       ROUND(AVG(ownership_rate), 1) as avg_ownership_rate,\n       ROUND(AVG(height), 1) as avg_building_height,\n       ROUND(SUM(area), 0) as total_building_area,\n       SUM(n_people) as total_building_residents\nFROM socioeconomic_building_profile\nGROUP BY socioeconomic_profile, PROVINCIA\nHAVING COUNT(DISTINCT building_id) >= 10\nORDER BY avg_education_index DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "SPATIAL_JOIN", "sql_taxonomy": {"operation_type": "SPATIAL_JOIN", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "spatial"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "cim_census", "0", "cbo", "cim_vector", "b", "c"], "tables": ["0.25", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "cim_vector.building", "cbo.COMUNE", "c.A47", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "cbo.SEZ2011", "bp.type", "cbo.PROVINCIA", "cbo.university_graduates", "c.P47", "cbo.n_people", "b.building_geometry", "bp.project_id", "cbo.employed_residents", "socioeconomic_building_profile", "c.geometry", "0.6", "cbo.census_population", "cbo.building_id", "cbo.height", "cbo.type", "c.PROVINCIA", "bp.height", "cbo.area", "bp.building_id", "census_building_overlay", "c.P61", "0.65", "cbo.owned_families", "cbo.REGIONE", "cim_vector.building_properties", "bp.area", "c.E3", "0.70", "b.building_id", "c.PF1", "cbo.total_families"], "columns": ["E3", "type", "P1", "P47", "geometry", "total_families", "employed_residents", "COMUNE", "65", "n_people", "owned_families", "census_geo", "PF1", "height", "SEZ2011", "P61", "area", "6", "70", "25", "PROVINCIA", "A47", "census_population", "building_geometry", "university_graduates", "building", "building_properties", "REGIONE"], "geometry_columns": ["b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "bp", "table_count": 43, "schema_count": 7}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_INTERSECTION"], "spatial_function_count": 3, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "cim_census", "0", "cbo", "cim_vector", "b", "c"], "tables": ["0.25", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "cim_vector.building", "cbo.COMUNE", "c.A47", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "cbo.SEZ2011", "bp.type", "cbo.PROVINCIA", "cbo.university_graduates", "c.P47", "cbo.n_people", "b.building_geometry", "bp.project_id", "cbo.employed_residents", "socioeconomic_building_profile", "c.geometry", "0.6", "cbo.census_population", "cbo.building_id", "cbo.height", "cbo.type", "c.PROVINCIA", "bp.height", "cbo.area", "bp.building_id", "census_building_overlay", "c.P61", "0.65", "cbo.owned_families", "cbo.REGIONE", "cim_vector.building_properties", "bp.area", "c.E3", "0.70", "b.building_id", "c.PF1", "cbo.total_families"], "columns": ["E3", "type", "P1", "P47", "geometry", "total_families", "employed_residents", "COMUNE", "65", "n_people", "owned_families", "census_geo", "PF1", "height", "SEZ2011", "P61", "area", "6", "70", "25", "PROVINCIA", "A47", "census_population", "building_geometry", "university_graduates", "building", "building_properties", "REGIONE"], "functions": ["ST_Area", "ST_Intersects", "ST_Intersection"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Integrate census socioeconomic data with building properties for comprehensive urban profiling and development analysis (Project: milan_smart_district, Scenario: renewable_2030)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C3_socioeconomic_building_integration_var_69", "complexity_level": "C", "tags": ["cim_building", "cross_schema", "education", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "urban_profiling", "socioeconomic", "realistic_params", "freq_very_high", "employment"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "baseline", "building_type": "public", "hvac_type": "electric", "region": "Lombardia", "province": "Roma", "voltage_kv": 220, "srid": 3857, "buffer_distance": 1000, "min_area": 410, "max_area": 3616, "min_height": 5, "max_height": 32, "min_people": 2, "max_people": 14, "year": 1950, "census_id": 1255051, "lon": 15.835065, "lat": 44.704306, "limit": 25, "cluster_count": 10, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 10, "min_points": 5, "min_areas": 10, "cluster_distance": 2000, "min_population": 500}, "generated_at": "2025-10-06T13:48:40.182618"}
{"id": "cim_stage1_005520", "database_id": 1, "database_name": "cim_wizard", "question": "Integrate census socioeconomic data with building properties for comprehensive urban profiling and development analysis (Project: milan_smart_district, Scenario: zero_emission)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH census_building_overlay AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as census_population,\n         c.P47 as university_graduates,\n         c.P61 as employed_residents,\n         c.A47 as owned_families,\n         c.PF1 as total_families,\n         c.E3 as residential_buildings_census,\n         b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) as overlap_ratio\n  FROM cim_census.census_geo c\n  JOIN cim_vector.building b ON ST_Intersects(b.building_geometry, c.geometry)\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'milan_smart_district' AND bp.scenario_id = 'zero_emission'\n    AND c.REGIONE = 'Lombardia'\n    AND ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) > 0.6\n),\nsocioeconomic_building_profile AS (\n  SELECT cbo.SEZ2011, cbo.REGIONE, cbo.PROVINCIA, cbo.COMUNE,\n         cbo.building_id, cbo.type, cbo.height, cbo.area, cbo.n_people,\n         cbo.census_population, cbo.university_graduates, cbo.employed_residents,\n         ROUND((cbo.university_graduates::float / NULLIF(cbo.census_population, 0)) * 100, 1) as education_index,\n         ROUND((cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) * 100, 1) as employment_index,\n         ROUND((cbo.owned_families::float / NULLIF(cbo.total_families, 0)) * 100, 1) as ownership_rate,\n         CASE \n           WHEN cbo.type = 'residential' AND (cbo.university_graduates::float / NULLIF(cbo.census_population, 0)) > 0.25 THEN 'HIGH_EDUCATION_RESIDENTIAL'\n           WHEN cbo.type = 'commercial' AND (cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) > 0.70 THEN 'ACTIVE_COMMERCIAL_ZONE'\n           WHEN cbo.type = 'industrial' AND (cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) > 0.65 THEN 'INDUSTRIAL_EMPLOYMENT_HUB'\n           ELSE 'STANDARD_MIXED_USE'\n         END as socioeconomic_profile\n  FROM census_building_overlay cbo\n)\nSELECT socioeconomic_profile, PROVINCIA,\n       COUNT(DISTINCT building_id) as buildings_count,\n       COUNT(DISTINCT SEZ2011) as census_areas_count,\n       ROUND(AVG(education_index), 1) as avg_education_index,\n       ROUND(AVG(employment_index), 1) as avg_employment_index,\n       ROUND(AVG(ownership_rate), 1) as avg_ownership_rate,\n       ROUND(AVG(height), 1) as avg_building_height,\n       ROUND(SUM(area), 0) as total_building_area,\n       SUM(n_people) as total_building_residents\nFROM socioeconomic_building_profile\nGROUP BY socioeconomic_profile, PROVINCIA\nHAVING COUNT(DISTINCT building_id) >= 5\nORDER BY avg_education_index DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "SPATIAL_JOIN", "sql_taxonomy": {"operation_type": "SPATIAL_JOIN", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "spatial"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "cim_census", "0", "cbo", "cim_vector", "b", "c"], "tables": ["0.25", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "cim_vector.building", "cbo.COMUNE", "c.A47", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "cbo.SEZ2011", "bp.type", "cbo.PROVINCIA", "cbo.university_graduates", "c.P47", "cbo.n_people", "b.building_geometry", "bp.project_id", "cbo.employed_residents", "socioeconomic_building_profile", "c.geometry", "0.6", "cbo.census_population", "cbo.building_id", "cbo.height", "cbo.type", "c.PROVINCIA", "bp.height", "cbo.area", "bp.building_id", "census_building_overlay", "c.P61", "0.65", "cbo.owned_families", "cbo.REGIONE", "cim_vector.building_properties", "bp.area", "c.E3", "0.70", "b.building_id", "c.PF1", "cbo.total_families"], "columns": ["E3", "type", "P1", "P47", "geometry", "total_families", "employed_residents", "COMUNE", "65", "n_people", "owned_families", "census_geo", "PF1", "height", "SEZ2011", "P61", "area", "6", "70", "25", "PROVINCIA", "A47", "census_population", "building_geometry", "university_graduates", "building", "building_properties", "REGIONE"], "geometry_columns": ["b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "bp", "table_count": 43, "schema_count": 7}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_INTERSECTION"], "spatial_function_count": 3, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "cim_census", "0", "cbo", "cim_vector", "b", "c"], "tables": ["0.25", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "cim_vector.building", "cbo.COMUNE", "c.A47", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "cbo.SEZ2011", "bp.type", "cbo.PROVINCIA", "cbo.university_graduates", "c.P47", "cbo.n_people", "b.building_geometry", "bp.project_id", "cbo.employed_residents", "socioeconomic_building_profile", "c.geometry", "0.6", "cbo.census_population", "cbo.building_id", "cbo.height", "cbo.type", "c.PROVINCIA", "bp.height", "cbo.area", "bp.building_id", "census_building_overlay", "c.P61", "0.65", "cbo.owned_families", "cbo.REGIONE", "cim_vector.building_properties", "bp.area", "c.E3", "0.70", "b.building_id", "c.PF1", "cbo.total_families"], "columns": ["E3", "type", "P1", "P47", "geometry", "total_families", "employed_residents", "COMUNE", "65", "n_people", "owned_families", "census_geo", "PF1", "height", "SEZ2011", "P61", "area", "6", "70", "25", "PROVINCIA", "A47", "census_population", "building_geometry", "university_graduates", "building", "building_properties", "REGIONE"], "functions": ["ST_Area", "ST_Intersects", "ST_Intersection"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Integrate census socioeconomic data with building properties for comprehensive urban profiling and development analysis (Project: milan_smart_district, Scenario: zero_emission)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C3_socioeconomic_building_integration_var_97", "complexity_level": "C", "tags": ["cim_building", "cross_schema", "education", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "urban_profiling", "socioeconomic", "realistic_params", "freq_very_high", "employment"], "generation_params": {"project_id": "rome_green_quarter", "scenario_id": "zero_emission", "building_type": "industrial", "hvac_type": "gas_boiler", "region": "Emilia-Romagna", "province": "Torino", "voltage_kv": 20, "srid": 32633, "buffer_distance": 2000, "min_area": 91, "max_area": 4428, "min_height": 7, "max_height": 53, "min_people": 2, "max_people": 10, "year": 1973, "census_id": 1084746, "lon": 13.575018, "lat": 40.696337, "limit": 25, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 500, "min_buildings": 20, "min_points": 5, "min_areas": 3, "cluster_distance": 2000, "min_population": 100}, "generated_at": "2025-10-06T13:48:40.186999"}
{"id": "cim_stage1_005586", "database_id": 1, "database_name": "cim_wizard", "question": "Integrate census socioeconomic data with building properties for comprehensive urban profiling and development analysis (Project: florence_heritage_area, Scenario: efficiency_max)", "question_tone": "INTERROGATIVE", "sql_postgis": "WITH census_building_overlay AS (\n  SELECT c.SEZ2011, c.REGIONE, c.PROVINCIA, c.COMUNE,\n         c.P1 as census_population,\n         c.P47 as university_graduates,\n         c.P61 as employed_residents,\n         c.A47 as owned_families,\n         c.PF1 as total_families,\n         c.E3 as residential_buildings_census,\n         b.building_id, bp.type, bp.height, bp.area, bp.n_people,\n         ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) as overlap_ratio\n  FROM cim_census.census_geo c\n  JOIN cim_vector.building b ON ST_Intersects(b.building_geometry, c.geometry)\n  JOIN cim_vector.building_properties bp ON b.building_id = bp.building_id\n  WHERE bp.project_id = 'florence_heritage_area' AND bp.scenario_id = 'efficiency_max'\n    AND c.REGIONE = 'Toscana'\n    AND ST_Area(ST_Intersection(b.building_geometry, c.geometry)) / ST_Area(b.building_geometry) > 0.6\n),\nsocioeconomic_building_profile AS (\n  SELECT cbo.SEZ2011, cbo.REGIONE, cbo.PROVINCIA, cbo.COMUNE,\n         cbo.building_id, cbo.type, cbo.height, cbo.area, cbo.n_people,\n         cbo.census_population, cbo.university_graduates, cbo.employed_residents,\n         ROUND((cbo.university_graduates::float / NULLIF(cbo.census_population, 0)) * 100, 1) as education_index,\n         ROUND((cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) * 100, 1) as employment_index,\n         ROUND((cbo.owned_families::float / NULLIF(cbo.total_families, 0)) * 100, 1) as ownership_rate,\n         CASE \n           WHEN cbo.type = 'residential' AND (cbo.university_graduates::float / NULLIF(cbo.census_population, 0)) > 0.25 THEN 'HIGH_EDUCATION_RESIDENTIAL'\n           WHEN cbo.type = 'commercial' AND (cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) > 0.70 THEN 'ACTIVE_COMMERCIAL_ZONE'\n           WHEN cbo.type = 'industrial' AND (cbo.employed_residents::float / NULLIF(cbo.census_population, 0)) > 0.65 THEN 'INDUSTRIAL_EMPLOYMENT_HUB'\n           ELSE 'STANDARD_MIXED_USE'\n         END as socioeconomic_profile\n  FROM census_building_overlay cbo\n)\nSELECT socioeconomic_profile, PROVINCIA,\n       COUNT(DISTINCT building_id) as buildings_count,\n       COUNT(DISTINCT SEZ2011) as census_areas_count,\n       ROUND(AVG(education_index), 1) as avg_education_index,\n       ROUND(AVG(employment_index), 1) as avg_employment_index,\n       ROUND(AVG(ownership_rate), 1) as avg_ownership_rate,\n       ROUND(AVG(height), 1) as avg_building_height,\n       ROUND(SUM(area), 0) as total_building_area,\n       SUM(n_people) as total_building_residents\nFROM socioeconomic_building_profile\nGROUP BY socioeconomic_profile, PROVINCIA\nHAVING COUNT(DISTINCT building_id) >= 5\nORDER BY avg_education_index DESC;", "sql_spatialite": "-- Not available in SpatiaLite (raster operations)", "sql_type": "SPATIAL_JOIN", "sql_taxonomy": {"operation_type": "SPATIAL_JOIN", "has_cte": true, "has_subquery": false, "has_aggregation": true, "has_window_function": false, "join_type": "spatial"}, "difficulty": {"query_complexity": "MEDIUM", "spatial_complexity": "ADVANCED", "schema_complexity": "MULTI_SCHEMA", "function_count": "3-5", "join_count": "1-2", "overall_difficulty": "MEDIUM", "complexity_score": 3}, "difficulty_level": "MEDIUM", "usage_frequency": "LOW", "usage_frequency_class": "LOW", "database_schema": {"schemas": ["bp", "cim_census", "0", "cbo", "cim_vector", "b", "c"], "tables": ["0.25", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "cim_vector.building", "cbo.COMUNE", "c.A47", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "cbo.SEZ2011", "bp.type", "cbo.PROVINCIA", "cbo.university_graduates", "c.P47", "cbo.n_people", "b.building_geometry", "bp.project_id", "cbo.employed_residents", "socioeconomic_building_profile", "c.geometry", "0.6", "cbo.census_population", "cbo.building_id", "cbo.height", "cbo.type", "c.PROVINCIA", "bp.height", "cbo.area", "bp.building_id", "census_building_overlay", "c.P61", "0.65", "cbo.owned_families", "cbo.REGIONE", "cim_vector.building_properties", "bp.area", "c.E3", "0.70", "b.building_id", "c.PF1", "cbo.total_families"], "columns": ["E3", "type", "P1", "P47", "geometry", "total_families", "employed_residents", "COMUNE", "65", "n_people", "owned_families", "census_geo", "PF1", "height", "SEZ2011", "P61", "area", "6", "70", "25", "PROVINCIA", "A47", "census_population", "building_geometry", "university_graduates", "building", "building_properties", "REGIONE"], "geometry_columns": ["b.building_geometry", "c.geometry", "geometry", "building_geometry"], "primary_schema": "bp", "table_count": 43, "schema_count": 7}, "spatial_functions": ["ST_AREA", "ST_INTERSECTS", "ST_INTERSECTION"], "spatial_function_count": 3, "spatial_function_categories": {"predicates": ["ST_INTERSECTS"], "measurements": ["ST_AREA"], "processing": ["ST_INTERSECTION"], "clustering": [], "raster": [], "transforms": [], "accessors": [], "constructors": []}, "evidence": {"database": "cim_wizard", "schemas": ["bp", "cim_census", "0", "cbo", "cim_vector", "b", "c"], "tables": ["0.25", "cim_census.census_geo", "c.REGIONE", "c.SEZ2011", "cim_vector.building", "cbo.COMUNE", "c.A47", "c.COMUNE", "c.P1", "bp.scenario_id", "bp.n_people", "cbo.SEZ2011", "bp.type", "cbo.PROVINCIA", "cbo.university_graduates", "c.P47", "cbo.n_people", "b.building_geometry", "bp.project_id", "cbo.employed_residents", "socioeconomic_building_profile", "c.geometry", "0.6", "cbo.census_population", "cbo.building_id", "cbo.height", "cbo.type", "c.PROVINCIA", "bp.height", "cbo.area", "bp.building_id", "census_building_overlay", "c.P61", "0.65", "cbo.owned_families", "cbo.REGIONE", "cim_vector.building_properties", "bp.area", "c.E3", "0.70", "b.building_id", "c.PF1", "cbo.total_families"], "columns": ["E3", "type", "P1", "P47", "geometry", "total_families", "employed_residents", "COMUNE", "65", "n_people", "owned_families", "census_geo", "PF1", "height", "SEZ2011", "P61", "area", "6", "70", "25", "PROVINCIA", "A47", "census_population", "building_geometry", "university_graduates", "building", "building_properties", "REGIONE"], "functions": ["ST_Area", "ST_Intersects", "ST_Intersection"], "template_source": "cim_wizard"}, "instruction": "Convert this natural language question to PostGIS spatial SQL for the CIM Wizard database: Integrate census socioeconomic data with building properties for comprehensive urban profiling and development analysis (Project: florence_heritage_area, Scenario: efficiency_max)", "results": null, "has_results": true, "stage": "stage1_enhanced", "generation_method": "rule_based_template", "template_id": "CIM_CENSUS_C3_socioeconomic_building_integration_var_163", "complexity_level": "C", "tags": ["cim_building", "cross_schema", "education", "cim_census", "postgis_only", "freq_critical", "cim_wizard", "urban_profiling", "socioeconomic", "realistic_params", "freq_very_high", "employment"], "generation_params": {"project_id": "turin_innovation_zone", "scenario_id": "grid_modernization", "building_type": "residential", "hvac_type": "district_heating", "region": "Toscana", "province": "Roma", "voltage_kv": 132, "srid": 4326, "buffer_distance": 500, "min_area": 212, "max_area": 4258, "min_height": 3, "max_height": 56, "min_people": 4, "max_people": 18, "year": 1988, "census_id": 1289317, "lon": 17.230471, "lat": 37.096818, "limit": 10, "cluster_count": 8, "min_cluster_size": 5, "max_distance": 1000, "min_buildings": 20, "min_points": 8, "min_areas": 5, "cluster_distance": 1000, "min_population": 500}, "generated_at": "2025-10-06T13:48:40.232238"}
